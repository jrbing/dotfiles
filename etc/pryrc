# vim:filetype=ruby
# ==============================
#   .pryrc
# ==============================

# Record how long you hack with Ruby this session.
pryrc_start_time = Time.now

require '~/.dotfiles/share/pry/pryrc-helpers'

# ___ is to Avoid name conflict
___ = PryrcHelpers

# what are the gems you use daily in REPL? Put them in ___daily_gems
___daily_gems  = %w[yaml json]

# ___pry_gems is for loading vendor plugins for Pry.
___pry_gems = %w[pry-coolline pry-theme]
#___pry_gems = %w[awesome_print hirb sketches byebug pry-byebug pry-stack_explorer]

___daily_gems.___require_gems
___pry_gems.___require_gems

# ==============================
#   Pry Configurations
# ==============================

Pry.config.theme = "pry-modern-256"
#Pry.config.pager = false
Pry.config.editor = "mvim --nofork" # Editor

# ==============================
#   Exceptions
# ==============================

Pry.config.exception_handler = proc do |output, exception, _|
  puts ___.colorize "#{exception.class}: #{exception.message}", 31
  puts ___.colorize "from #{exception.backtrace.first}", 31
end

# ==============================
#   Customized hotkeys for Pry
# ==============================
Pry.config.commands.alias_command 'w', 'whereami'
Pry.config.commands.alias_command '.clr', '.clear'

# ==============================
#   Welcome to Pry
# ==============================
Pry.active_sessions = 0

Pry.config.hooks.add_hook(:before_session, :welcome) do
    if Pry.active_sessions.zero?
      puts "Hello #{___.user}! I'm Pry #{Pry::VERSION}."
      puts "I'm Loading Ruby #{RUBY_VERSION}-p#{RUBY_PATCHLEVEL} and everything else for you:"

      ### Fake Loading Progress bar
      # |====================>
      [*1..9].each do |e|
        print ___.pryrc_progress_bar e
        $stdout.flush
        sleep ___.pryrc_speed
      end

      # Print |==================> Load Completed!
      # 9 is to keep progress bar have the same length (see above each loop)
      print ___.pryrc_progress_bar 9, true

      puts ___.welcome_messages
    end
  Pry.active_sessions += 1
end

# ==============================
#   So long, farewell...
# ==============================
Pry.config.hooks.add_hook(:after_session, :farewell) do
  Pry.active_sessions -= 1
  if Pry.active_sessions.zero?
    if ___.true_true_or_false
      puts ___.farewell_messages
    else
      interpreted_time = ___.interpret_time(Time.now - pryrc_start_time)
      interpreted_time = 'ever' if interpreted_time == '0 second'
      puts "Hack with Ruby for #{interpreted_time}!"
    end
  end
end
