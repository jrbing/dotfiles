#requires -version 2
<#
.SYNOPSIS
  <Overview of script>

.DESCRIPTION
  <Brief description of script>

.PARAMETER <Parameter_Name>
  <Brief description of parameter input required. Repeat this attribute if required>

.INPUTS
  <Inputs if any, otherwise state None>

.OUTPUTS
  <Outputs if any, otherwise state None>

.NOTES
  Version:        1.0
  Author:         < Name >
  Creation Date:  <%= @date %>
  Purpose/Change: Initial script development

.EXAMPLE
  <Example goes here. Repeat this attribute for more than one example>
#>

#---------------------------------------------------------[Initialisations]--------------------------------------------------------

# Set Error Action to Silently Continue
$ErrorActionPreference = "SilentlyContinue"
$DebugPreference = "Continue"

#----------------------------------------------------------[Declarations]----------------------------------------------------------

#$sScriptVersion = "1.0"

#-----------------------------------------------------------[Functions]------------------------------------------------------------

Function Log-Start{

  Process{
    Write-Host ""
    Write-Host "*********************************************************"
    Write-Host "Script began at [$([DateTime]::Now)]."
    Write-Host "*********************************************************"
    Write-Host ""
  }

}

Function Log-Info{
  Param ([Parameter(Mandatory=$true)][string]$Message)
  Process{
    Write-Debug "INFO: [$Message]."
  }
}

Function Log-Error{
  Param (
    [Parameter(Mandatory=$true)][string]$Message,
    [Parameter(Mandatory=$false)][boolean]$ExitGracefully
    )
  Process{
    Write-Warning -Message "Error: An error has occurred [$ErrorDesc]."
    If ($ExitGracefully -eq $True){
      Break
    }
  }
}

Function Log-Finish{
  Process{
    Write-Host ""
    Write-Host "*********************************************************"
    Write-Host "Script finished processing at [$([DateTime]::Now)]."
    Write-Host "*********************************************************"
  }
}

<#
Function <FunctionName>{
  Param()

  Begin{
    Log-Info -Message "Entering function ???"
  }

  Process{
    Try{
      Log-Info -Message "Executing..."
    }

    Catch{
      Log-Error -Message $_.Exception -ExitGracefully $True
      Break
    }
  }

  End{
    If($?){
      Log-Info -Message "Completed Successfully."
      Log-Info -Message " "
    }
  }
}
#>


#-----------------------------------------------------------[Execution]------------------------------------------------------------

Log-Start

# < call script functions >

Log-Finish
