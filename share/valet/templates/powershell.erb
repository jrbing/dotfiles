#Requires -Version 5

<#PSScriptInfo

    .VERSION 1.0

    .GUID <%= @guid %>

    .AUTHOR jr@jrbing.com

    .SYNOPSIS
        <Overview of script>

    .DESCRIPTION
        <Brief description of script>

    .PARAMETER OptionOne
        <Brief description of parameter input required. Repeat this attribute if required>

    .EXAMPLE
        <Example goes here. Repeat this attribute for more than one example>

#>

#-----------------------------------------------------------[Parameters]----------------------------------------------------------

[CmdletBinding()]
Param (
    [Parameter(Mandatory = $true, HelpMessage="Example use of this attribute")][String]$OptionOne
)

#---------------------------------------------------------[Initialization]--------------------------------------------------------

# Valid values: "Stop", "Inquire", "Continue", "Suspend", "SilentlyContinue"
$ErrorActionPreference = "Stop"
$DebugPreference = "Continue"
$VerbosePreference = "Continue"

#Import Modules

#----------------------------------------------------------[Declarations]---------------------------------------------------------

#Global Declarations go here

#-----------------------------------------------------------[Functions]-----------------------------------------------------------

Function Log-Info {
    Param (
        [Parameter(Mandatory=$true)][string]$Message
    )
    Process {
        Write-Host "INFO: $Message  " -Fore DarkYellow
    }
}

Function Log-Error {
    Param (
        [Parameter(Mandatory=$true)][string]$Message,
        [Parameter(Mandatory=$false)][boolean]$ExitGracefully
    )
    Process {
        Write-Warning -Message "Error: An error has occurred [$ErrorDesc]."
        If ($ExitGracefully -eq $True){
            Break
        }
    }
}

Function Example-Function{
    Param()
    Begin {
        Log-Info -Message "Entering..."
    }
    Process {
        Try {
            Log-Info -Message "Executing..."
        }
        Catch {
            Log-Error -Message $_.Exception -ExitGracefully $True
            Break
        }
    }
    End {
        If($?) {
            Log-Info -Message "Completed Successfully."
        }
    }
}

#-----------------------------------------------------------[Execution]-----------------------------------------------------------

Example-Function
