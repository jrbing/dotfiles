priority 50

# THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DON'T MODIFY BY HAND

snippet play "Execute an Ansible play" b
- name: ${1:name}
	hosts: ${2:host_group}
	become: ${3:true}
	tasks:
		$0
endsnippet

snippet when "Conditionally execute play" b
when:
	- ansible_os_family == "RedHat"
	- foo is defined
endsnippet

snippet with_items "Loop over items" b
with_items:
	- $1
	- $2
	- $0
endsnippet

snippet block "Example block task" b
- name: Install Apache
	block:
		- yum: name={{ item }} state=installed
			with_items:
				- httpd
				- memcached
		- template: src=templates/src.j2 dest=/etc/foo.conf
		- service: name=bar state=started enabled=True
	when: ansible_distribution == 'CentOS'
	become: true
	become_user: root
$0
endsnippet

snippet ad_hoc_command "create, update, or destroy Automation Platform Controller ad hoc commands." b
- name: $1
	ad_hoc_command:
		inventory: ${2:# Inventory to use for the ad hoc command.}
		credential: ${3:# Credential to use for ad hoc command.}
		module_name: ${4:# The Ansible module to execute.}
		# job_type: run|check
		# execution_environment: # Execution Environment to use for the ad hoc command.
		# limit: # Limit to use for the ad hoc command.
		# module_args: 
		# forks: # The number of forks to use for this ad hoc execution.
		# verbosity: 0|1|2|3|4|5
		# extra_vars: # Extra variables to use for the ad hoc command..
		# become_enabled: # If the become flag should be set.
		# diff_mode: # Show the changes made by Ansible tasks where supported
		# wait: no
		# interval: 1
		# timeout: # If waiting for the command to complete this will abort after this amount of seconds
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet ad_hoc_command_cancel "Cancel an Ad Hoc Command." b
- name: $1
	ad_hoc_command_cancel:
		command_id: ${2:# ID of the command to cancel}
		# fail_if_not_running: no
		# interval: 1
		# timeout: # Maximum time in seconds to wait for a job to finish.
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet ad_hoc_command_wait "Wait for Automation Platform Controller Ad Hoc Command to finish." b
- name: $1
	ad_hoc_command_wait:
		command_id: ${2:# ID of the ad hoc command to monitor.}
		# interval: 1
		# timeout: # Maximum time in seconds to wait for a ad hoc command to finish.
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet application "create, update, or destroy Automation Platform Controller applications" b
- name: $1
	application:
		name: ${2:# Name of the application.}
		organization: ${3:# Name of organization for application.}
		# description: # Description of the application.
		# authorization_grant_type: password|authorization-code
		# client_type: public|confidential
		# redirect_uris: # Allowed urls list, space separated. Required when authorization-grant-type=authorization-code
		# state: #present|absent
		# skip_authorization: # Set True to skip authorization step for completely trusted applications.
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet controller_meta "Returns metadata about the collection this module lives in." b
- name: $1
	controller_meta:
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet credential "create, update, or destroy Automation Platform Controller credential." b
- name: $1
	credential:
		name: ${2:# The name to use for the credential.}
		# new_name: # Setting this option will change the existing name (looked up via the name field.
		# copy_from: # Name or id to copy the credential from.
		# description: # The description to use for the credential.
		# organization: # Organization that should own the credential.
		# credential_type: # The credential type being created.
		# inputs: # Credential inputs where the keys are var names used in templating. Refer to the Automation Platform Controller documentation for example syntax.
		# update_secrets: yes
		# user: # User that should own this credential.
		# team: # Team that should own this credential.
		# state: #present|absent
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet credential_input_source "create, update, or destroy Automation Platform Controller credential input sources." b
- name: $1
	credential_input_source:
		input_field_name: ${2:# The input field the credential source will be used for}
		target_credential: ${3:# The credential which will have its input defined by this source}
		# description: # The description to use for the credential input source.
		# metadata: # A JSON or YAML string
		# source_credential: # The credential which is the source of the credential lookup
		# state: #present|absent
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet credential_type "Create, update, or destroy custom Automation Platform Controller credential type." b
- name: $1
	credential_type:
		name: ${2:# The name of the credential type.}
		# description: # The description of the credential type to give more detail about it.
		# kind: ssh|vault|net|scm|cloud|insights
		# inputs: # Enter inputs using either JSON or YAML syntax. Refer to the Automation Platform Controler documentation for example syntax.
		# injectors: # Enter injectors using either JSON or YAML syntax. Refer to the Automation Platform Controller documentation for example syntax.
		# state: #present|absent
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet execution_environment "create, update, or destroy Execution Environments in Automation Platform Controller." b
- name: $1
	execution_environment:
		name: ${2:# Name to use for the execution environment.}
		image: ${3:# The fully qualified url of the container image.}
		# description: # Description to use for the execution environment.
		# organization: # The organization the execution environment belongs to.
		# credential: # Name of the credential to use for the execution environment.
		# state: #present|absent
		# pull: always|#missing|never
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet export "export resources from Automation Platform Controller." b
- name: $1
	export:
		# all: False
		# organizations: # organization name to export
		# users: # user name to export
		# teams: # team name to export
		# credential_types: # credential type name to export
		# credentials: # credential name to export
		# execution_environments: # execution environment name to export
		# notification_templates: # notification template name to export
		# inventory_sources: # inventory soruce to export
		# inventory: # inventory name to export
		# projects: # project name to export
		# job_templates: # job template name to export
		# workflow_job_templates: # workflow name to export
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet group "create, update, or destroy Automation Platform Controller group." b
- name: $1
	group:
		name: ${2:# The name to use for the group.}
		inventory: ${3:# Inventory the group should be made a member of.}
		# description: # The description to use for the group.
		# variables: # Variables to use for the group.
		# hosts: # List of hosts that should be put in this group.
		# children: # List of groups that should be nested inside in this group.
		# preserve_existing_hosts: no
		# preserve_existing_children: no
		# state: #present|absent
		# new_name: # A new name for this group (for renaming)
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet host "create, update, or destroy Automation Platform Controller host." b
- name: $1
	host:
		name: ${2:# The name to use for the host.}
		inventory: ${3:# Inventory the host should be made a member of.}
		# new_name: # To use when changing a hosts's name.
		# description: # The description to use for the host.
		# enabled: yes
		# variables: # Variables to use for the host.
		# state: #present|absent
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet import "import resources into Automation Platform Controller." b
- name: $1
	import:
		assets: ${2:# The assets to import.}
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet instance_group "create, update, or destroy Automation Platform Controller instance groups." b
- name: $1
	instance_group:
		name: ${2:# Name of this instance group.}
		# new_name: # Setting this option will change the existing name (looked up via the name field.
		# credential: # Credential to authenticate with Kubernetes or OpenShift.  Must be of type "Kubernetes/OpenShift API Bearer Token".
		# is_container_group: no
		# policy_instance_percentage: 0
		# policy_instance_minimum: 0
		# policy_instance_list: # List of exact-match Instances that will be assigned to this group
		# pod_spec_override: # A custom Kubernetes or OpenShift Pod specification.
		# instances: # The instances associated with this instance_group
		# state: #present|absent
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet inventory "create, update, or destroy Automation Platform Controller inventory." b
- name: $1
	inventory:
		name: ${2:# The name to use for the inventory.}
		organization: ${3:# Organization the inventory belongs to.}
		# copy_from: # Name or id to copy the inventory from.
		# description: # The description to use for the inventory.
		# variables: # Inventory variables.
		# kind: #|smart
		# host_filter: # The host_filter field. Only useful when C(kind=smart).
		# instance_groups: # list of Instance Groups for this Organization to run on.
		# state: #present|absent
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet inventory_source "create, update, or destroy Automation Platform Controller inventory source." b
- name: $1
	inventory_source:
		name: ${2:# The name to use for the inventory source.}
		inventory: ${3:# Inventory the group should be made a member of.}
		# new_name: # A new name for this assets (will rename the asset)
		# description: # The description to use for the inventory source.
		# source: scm|ec2|gce|azure_rm|vmware|satellite6|openstack|rhv|controller|insights
		# source_path: # For an SCM based inventory source, the source path points to the file within the repo to use as an inventory.
		# source_vars: # The variables or environment fields to apply to this source type.
		# enabled_var: # The variable to use to determine enabled state e.g., "status.power_state"
		# enabled_value: # Value when the host is considered enabled, e.g., "powered_on"
		# host_filter: # If specified, AWX will only import hosts that match this regular expression.
		# credential: # Credential to use for the source.
		# execution_environment: # Execution Environment to use for the source.
		# custom_virtualenv: # Local absolute file path containing a custom Python virtualenv to use.
		# overwrite: # Delete child groups and hosts not found in source.
		# overwrite_vars: # Override vars in child groups and hosts with those from external source.
		# timeout: # T
		# verbosity: 0|1|2
		# update_on_launch: # Refresh inventory data from its source each time a job is run.
		# update_cache_timeout: # Time in seconds to consider an inventory sync to be current.
		# source_project: # Project to use as source with scm option
		# update_on_project_update: # U
		# state: #present|absent
		# notification_templates_started: # list of notifications to send on start
		# notification_templates_success: # list of notifications to send on success
		# notification_templates_error: # list of notifications to send on error
		# organization: # Name of the inventory source's inventory's organization.
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet inventory_source_update "Update inventory source(s)." b
- name: $1
	inventory_source_update:
		name: ${2:# The name or id of the inventory source to update.}
		inventory: ${3:# Name or id of the inventory that contains the inventory source(s) to update.}
		# organization: # Name of the inventory source's inventory's organization.
		# wait: no
		# interval: 1
		# timeout: # If waiting for the job to complete this will abort after this amount of seconds
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet job_cancel "Cancel an Automation Platform Controller Job." b
- name: $1
	job_cancel:
		job_id: ${2:# ID of the job to cancel}
		# fail_if_not_running: no
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet job_launch "Launch an Ansible Job." b
- name: $1
	job_launch:
		name: ${2:# Name of the job template to use.}
		# job_type: run|check
		# inventory: # Inventory to use for the job, only used if prompt for inventory is set.
		# organization: # Organization the job template exists in.
		# credentials: # Credential to use for job, only used if prompt for credential is set.
		# extra_vars: # extra_vars to use for the Job Template.
		# limit: # Limit to use for the I(job_template).
		# tags: # Specific tags to use for from playbook.
		# scm_branch: # A specific of the SCM project to run the template on.
		# skip_tags: # Specific tags to skip from the playbook.
		# verbosity: 0|1|2|3|4|5
		# diff_mode: # Show the changes made by Ansible tasks where supported
		# credential_passwords: # Passwords for credentials which are set to prompt on launch
		# wait: no
		# interval: 1
		# timeout: # If waiting for the job to complete this will abort after this amount of seconds
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet job_list "List Automation Platform Controller jobs." b
- name: $1
	job_list:
		# status: pending|waiting|running|error|failed|canceled|successful
		# page: # Page number of the results to fetch.
		# all_pages: no
		# query: # Query used to further filter the list of jobs. C({"foo":"bar"}) will be passed at C(?foo=bar)
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet job_template "create, update, or destroy Automation Platform Controller job templates." b
- name: $1
	job_template:
		name: ${2:# Name to use for the job template.}
		# new_name: # Setting this option will change the existing name (looed up via the name field.
		# copy_from: # Name or id to copy the job template from.
		# description: # Description to use for the job template.
		# job_type: run|check
		# inventory: # Name of the inventory to use for the job template.
		# organization: # Organization the job template exists in.
		# project: # Name of the project to use for the job template.
		# playbook: # Path to the playbook to use for the job template within the project provided.
		# credential: # Name of the credential to use for the job template.
		# credentials: # List of credentials to use for the job template.
		# vault_credential: # Name of the vault credential to use for the job template.
		# execution_environment: # Execution Environment to use for the JT.
		# custom_virtualenv: # Local absolute file path containing a custom Python virtualenv to use.
		# instance_groups: # list of Instance Groups for this Organization to run on.
		# forks: # The number of parallel or simultaneous processes to use while executing the playbook.
		# limit: # A host pattern to further constrain the list of hosts managed or affected by the playbook
		# verbosity: #0|1|2|3|4
		# extra_vars: # Specify C(extra_vars) for the template.
		# job_tags: # Comma separated list of the tags to use for the job template.
		# force_handlers: no
		# skip_tags: # Comma separated list of the tags to skip for the job template.
		# start_at_task: # Start the playbook at the task matching this name.
		# diff_mode: # Enable diff mode for the job template.
		# use_fact_cache: # Enable use of fact caching for the job template.
		# host_config_key: # Allow provisioning callbacks using this host config key.
		# ask_scm_branch_on_launch: # Prompt user for (scm branch) on launch.
		# ask_diff_mode_on_launch: # Prompt user to enable diff mode (show changes) to files when supported by modules.
		# ask_variables_on_launch: # Prompt user for (extra_vars) on launch.
		# ask_limit_on_launch: # Prompt user for a limit on launch.
		# ask_tags_on_launch: # Prompt user for job tags on launch.
		# ask_skip_tags_on_launch: # Prompt user for job tags to skip on launch.
		# ask_job_type_on_launch: # Prompt user for job type on launch.
		# ask_verbosity_on_launch: # Prompt user to choose a verbosity level on launch.
		# ask_inventory_on_launch: # Prompt user for inventory on launch.
		# ask_credential_on_launch: # Prompt user for credential on launch.
		# survey_enabled: # Enable a survey on the job template.
		# survey_spec: # JSON/YAML dict formatted survey definition.
		# become_enabled: # Activate privilege escalation.
		# allow_simultaneous: # Allow simultaneous runs of the job template.
		# timeout: # Maximum time in seconds to wait for a job to finish (server-side).
		# job_slice_count: 1
		# webhook_service: |github|gitlab
		# webhook_credential: # Personal Access Token for posting back the status to the service API
		# scm_branch: 
		# labels: # The labels applied to this job template
		# state: #present|absent
		# notification_templates_started: # list of notifications to send on start
		# notification_templates_success: # list of notifications to send on success
		# notification_templates_error: # list of notifications to send on error
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet job_wait "Wait for Automation Platform Controller job to finish." b
- name: $1
	job_wait:
		job_id: ${2:# ID of the job to monitor.}
		# interval: 1
		# timeout: # Maximum time in seconds to wait for a job to finish.
		# job_type: project_updates|#jobs|inventory_updates|workflow_jobs
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet label "create, update, or destroy Automation Platform Controller labels." b
- name: $1
	label:
		name: ${2:# Name of this label.}
		organization: ${3:# Organization this label belongs to.}
		# new_name: # Setting this option will change the existing name (looked up via the name field).
		# state: #present
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet license "Set the license for Automation Platform Controller" b
- name: $1
	license:
		manifest: ${2:# file path to a Red Hat subscription manifest (a .zip file)}
		# force: False
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet notification_template "create, update, or destroy Automation Platform Controller notification." b
- name: $1
	notification_template:
		name: ${2:# The name of the notification.}
		# new_name: # Setting this option will change the existing name (looked up via the name field.
		# copy_from: # Name or id to copy the notification from.
		# description: # The description of the notification.
		# organization: # The organization the notification belongs to.
		# notification_type: email|grafana|irc|mattermost|pagerduty|rocketchat|slack|twilio|webhook
		# notification_configuration: # The notification configuration file. Note providing this field would disable all notification-configuration-related fields.
		# messages: # Optional custom messages for notification template.
		# state: #present|absent
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet organization "create, update, or destroy Automation Platform Controller organizations" b
- name: $1
	organization:
		name: ${2:# Name to use for the organization.}
		# description: # The description to use for the organization.
		# default_environment: # Default Execution Environment to use for jobs owned by the Organization.
		# custom_virtualenv: # Local absolute file path containing a custom Python virtualenv to use.
		# max_hosts: 0
		# state: #present|absent
		# instance_groups: # list of Instance Groups for this Organization to run on.
		# notification_templates_started: # list of notifications to send on start
		# notification_templates_success: # list of notifications to send on success
		# notification_templates_error: # list of notifications to send on error
		# notification_templates_approvals: # list of notifications to send on start
		# galaxy_credentials: # list of Ansible Galaxy credentials to associate to the organization
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet project "create, update, or destroy Automation Platform Controller projects" b
- name: $1
	project:
		name: ${2:# Name to use for the project.}
		# copy_from: # Name or id to copy the project from.
		# description: # Description to use for the project.
		# scm_type: #manual|git|svn|insights
		# scm_url: # URL of SCM resource.
		# local_path: # The server playbook directory for manual projects.
		# scm_branch: 
		# scm_refspec: 
		# credential: # Name of the credential to use with this SCM resource.
		# scm_clean: no
		# scm_delete_on_update: no
		# scm_track_submodules: no
		# scm_update_on_launch: no
		# scm_update_cache_timeout: 0
		# allow_override: # Allow changing the SCM branch or revision in a job template that uses this project.
		# timeout: 0
		# default_environment: # Default Execution Environment to use for jobs relating to the project.
		# custom_virtualenv: # Local absolute file path containing a custom Python virtualenv to use.
		# organization: # Name of organization for project.
		# state: #present|absent
		# wait: yes
		# notification_templates_started: # list of notifications to send on start
		# notification_templates_success: # list of notifications to send on success
		# notification_templates_error: # list of notifications to send on error
		# update_project: no
		# interval: 1
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet project_update "Update a Project in Automation Platform Controller" b
- name: $1
	project_update:
		name: ${2:# The name or id of the project to update.}
		# organization: # Organization the project exists in.
		# wait: yes
		# interval: 1
		# timeout: # If waiting for the project to update this will abort after this amount of seconds
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet role "grant or revoke an Automation Platform Controller role." b
- name: $1
	role:
		role: ${2:admin|read|member|execute|adhoc|update|use|approval|auditor|project_admin|inventory_admin|credential_admin|workflow_admin|notification_admin|job_template_admin}
		# user: # User that receives the permissions specified by the role.
		# team: # Team that receives the permissions specified by the role.
		# target_team: # Team that the role acts on.
		# target_teams: # Team that the role acts on.
		# inventory: # Inventory the role acts on.
		# inventories: # Inventory the role acts on.
		# job_template: # The job template the role acts on.
		# job_templates: # The job template the role acts on.
		# workflow: # The workflow job template the role acts on.
		# workflows: # The workflow job template the role acts on.
		# credential: # Credential the role acts on.
		# credentials: # Credential the role acts on.
		# organization: # Organization the role acts on.
		# organizations: # Organization the role acts on.
		# lookup_organization: # Organization the inventories, job templates, projects, or workflows the items exists in.
		# project: # Project the role acts on.
		# projects: # Project the role acts on.
		# state: #present|absent
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet schedule "create, update, or destroy Automation Platform Controller schedules." b
- name: $1
	schedule:
		name: ${2:# Name of this schedule.}
		# rrule: # A value representing the schedules iCal recurrence rule.
		# new_name: # Setting this option will change the existing name (looked up via the name field.
		# description: # Optional description of this schedule.
		# extra_data: {}
		# inventory: # Inventory applied as a prompt, assuming job template prompts for inventory
		# credentials: # List of credentials applied as a prompt, assuming job template prompts for credentials
		# scm_branch: # Branch to use in job run. Project default used if blank. Only allowed if project allow_override field is set to true.
		# job_type: run|check
		# job_tags: # Comma separated list of the tags to use for the job template.
		# skip_tags: # Comma separated list of the tags to skip for the job template.
		# limit: # A host pattern to further constrain the list of hosts managed or affected by the playbook
		# diff_mode: # Enable diff mode for the job template.
		# verbosity: 0|1|2|3|4|5
		# unified_job_template: # Name of unified job template to schedule.
		# organization: # The organization the unified job template exists in.
		# enabled: # Enables processing of this schedule.
		# state: #present|absent
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet settings "Modify Automation Platform Controller settings." b
- name: $1
	settings:
		# name: # Name of setting to modify
		# value: # Value to be modified for given setting.
		# settings: # A data structure to be sent into the settings endpoint
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet team "create, update, or destroy Automation Platform Controller team." b
- name: $1
	team:
		name: ${2:# Name to use for the team.}
		organization: ${3:# Organization the team should be made a member of.}
		# new_name: # To use when changing a team's name.
		# description: # The description to use for the team.
		# state: #present|absent
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet token "create, update, or destroy Automation Platform Controller tokens." b
- name: $1
	token:
		# description: 
		# application: # The application tied to this token.
		# scope: read|#write
		# existing_token: # T
		# existing_token_id: # A
		# state: #present|absent
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet ad_hoc_command "create, update, or destroy Automation Platform Controller ad hoc commands." b
- name: $1
	ad_hoc_command:
		inventory: ${2:# Inventory to use for the ad hoc command.}
		credential: ${3:# Credential to use for ad hoc command.}
		module_name: ${4:# The Ansible module to execute.}
		# job_type: run|check
		# execution_environment: # Execution Environment to use for the ad hoc command.
		# limit: # Limit to use for the ad hoc command.
		# module_args: 
		# forks: # The number of forks to use for this ad hoc execution.
		# verbosity: 0|1|2|3|4|5
		# extra_vars: # Extra variables to use for the ad hoc command..
		# become_enabled: # If the become flag should be set.
		# diff_mode: # Show the changes made by Ansible tasks where supported
		# wait: no
		# interval: 1
		# timeout: # If waiting for the command to complete this will abort after this amount of seconds
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet ad_hoc_command_cancel "Cancel an Ad Hoc Command." b
- name: $1
	ad_hoc_command_cancel:
		command_id: ${2:# ID of the command to cancel}
		# fail_if_not_running: no
		# interval: 1
		# timeout: # Maximum time in seconds to wait for a job to finish.
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet ad_hoc_command_wait "Wait for Automation Platform Controller Ad Hoc Command to finish." b
- name: $1
	ad_hoc_command_wait:
		command_id: ${2:# ID of the ad hoc command to monitor.}
		# interval: 1
		# timeout: # Maximum time in seconds to wait for a ad hoc command to finish.
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet application "create, update, or destroy Automation Platform Controller applications" b
- name: $1
	application:
		name: ${2:# Name of the application.}
		organization: ${3:# Name of organization for application.}
		# description: # Description of the application.
		# authorization_grant_type: password|authorization-code
		# client_type: public|confidential
		# redirect_uris: # Allowed urls list, space separated. Required when authorization-grant-type=authorization-code
		# state: #present|absent
		# skip_authorization: # Set True to skip authorization step for completely trusted applications.
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet controller_meta "Returns metadata about the collection this module lives in." b
- name: $1
	controller_meta:
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet credential "create, update, or destroy Automation Platform Controller credential." b
- name: $1
	credential:
		name: ${2:# The name to use for the credential.}
		# new_name: # Setting this option will change the existing name (looked up via the name field.
		# copy_from: # Name or id to copy the credential from.
		# description: # The description to use for the credential.
		# organization: # Organization that should own the credential.
		# credential_type: # The credential type being created.
		# inputs: # Credential inputs where the keys are var names used in templating. Refer to the Automation Platform Controller documentation for example syntax.
		# update_secrets: yes
		# user: # User that should own this credential.
		# team: # Team that should own this credential.
		# state: #present|absent
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet credential_input_source "create, update, or destroy Automation Platform Controller credential input sources." b
- name: $1
	credential_input_source:
		input_field_name: ${2:# The input field the credential source will be used for}
		target_credential: ${3:# The credential which will have its input defined by this source}
		# description: # The description to use for the credential input source.
		# metadata: # A JSON or YAML string
		# source_credential: # The credential which is the source of the credential lookup
		# state: #present|absent
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet credential_type "Create, update, or destroy custom Automation Platform Controller credential type." b
- name: $1
	credential_type:
		name: ${2:# The name of the credential type.}
		# description: # The description of the credential type to give more detail about it.
		# kind: ssh|vault|net|scm|cloud|insights
		# inputs: # Enter inputs using either JSON or YAML syntax. Refer to the Automation Platform Controler documentation for example syntax.
		# injectors: # Enter injectors using either JSON or YAML syntax. Refer to the Automation Platform Controller documentation for example syntax.
		# state: #present|absent
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet execution_environment "create, update, or destroy Execution Environments in Automation Platform Controller." b
- name: $1
	execution_environment:
		name: ${2:# Name to use for the execution environment.}
		image: ${3:# The fully qualified url of the container image.}
		# description: # Description to use for the execution environment.
		# organization: # The organization the execution environment belongs to.
		# credential: # Name of the credential to use for the execution environment.
		# state: #present|absent
		# pull: always|#missing|never
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet export "export resources from Automation Platform Controller." b
- name: $1
	export:
		# all: False
		# organizations: # organization name to export
		# users: # user name to export
		# teams: # team name to export
		# credential_types: # credential type name to export
		# credentials: # credential name to export
		# execution_environments: # execution environment name to export
		# notification_templates: # notification template name to export
		# inventory_sources: # inventory soruce to export
		# inventory: # inventory name to export
		# projects: # project name to export
		# job_templates: # job template name to export
		# workflow_job_templates: # workflow name to export
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet group "create, update, or destroy Automation Platform Controller group." b
- name: $1
	group:
		name: ${2:# The name to use for the group.}
		inventory: ${3:# Inventory the group should be made a member of.}
		# description: # The description to use for the group.
		# variables: # Variables to use for the group.
		# hosts: # List of hosts that should be put in this group.
		# children: # List of groups that should be nested inside in this group.
		# preserve_existing_hosts: no
		# preserve_existing_children: no
		# state: #present|absent
		# new_name: # A new name for this group (for renaming)
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet host "create, update, or destroy Automation Platform Controller host." b
- name: $1
	host:
		name: ${2:# The name to use for the host.}
		inventory: ${3:# Inventory the host should be made a member of.}
		# new_name: # To use when changing a hosts's name.
		# description: # The description to use for the host.
		# enabled: yes
		# variables: # Variables to use for the host.
		# state: #present|absent
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet import "import resources into Automation Platform Controller." b
- name: $1
	import:
		assets: ${2:# The assets to import.}
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet instance_group "create, update, or destroy Automation Platform Controller instance groups." b
- name: $1
	instance_group:
		name: ${2:# Name of this instance group.}
		# new_name: # Setting this option will change the existing name (looked up via the name field.
		# credential: # Credential to authenticate with Kubernetes or OpenShift.  Must be of type "Kubernetes/OpenShift API Bearer Token".
		# is_container_group: no
		# policy_instance_percentage: 0
		# policy_instance_minimum: 0
		# policy_instance_list: # List of exact-match Instances that will be assigned to this group
		# pod_spec_override: # A custom Kubernetes or OpenShift Pod specification.
		# instances: # The instances associated with this instance_group
		# state: #present|absent
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet inventory "create, update, or destroy Automation Platform Controller inventory." b
- name: $1
	inventory:
		name: ${2:# The name to use for the inventory.}
		organization: ${3:# Organization the inventory belongs to.}
		# copy_from: # Name or id to copy the inventory from.
		# description: # The description to use for the inventory.
		# variables: # Inventory variables.
		# kind: #|smart
		# host_filter: # The host_filter field. Only useful when C(kind=smart).
		# instance_groups: # list of Instance Groups for this Organization to run on.
		# state: #present|absent
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet inventory_source "create, update, or destroy Automation Platform Controller inventory source." b
- name: $1
	inventory_source:
		name: ${2:# The name to use for the inventory source.}
		inventory: ${3:# Inventory the group should be made a member of.}
		# new_name: # A new name for this assets (will rename the asset)
		# description: # The description to use for the inventory source.
		# source: scm|ec2|gce|azure_rm|vmware|satellite6|openstack|rhv|controller|insights
		# source_path: # For an SCM based inventory source, the source path points to the file within the repo to use as an inventory.
		# source_vars: # The variables or environment fields to apply to this source type.
		# enabled_var: # The variable to use to determine enabled state e.g., "status.power_state"
		# enabled_value: # Value when the host is considered enabled, e.g., "powered_on"
		# host_filter: # If specified, AWX will only import hosts that match this regular expression.
		# credential: # Credential to use for the source.
		# execution_environment: # Execution Environment to use for the source.
		# custom_virtualenv: # Local absolute file path containing a custom Python virtualenv to use.
		# overwrite: # Delete child groups and hosts not found in source.
		# overwrite_vars: # Override vars in child groups and hosts with those from external source.
		# timeout: # T
		# verbosity: 0|1|2
		# update_on_launch: # Refresh inventory data from its source each time a job is run.
		# update_cache_timeout: # Time in seconds to consider an inventory sync to be current.
		# source_project: # Project to use as source with scm option
		# update_on_project_update: # U
		# state: #present|absent
		# notification_templates_started: # list of notifications to send on start
		# notification_templates_success: # list of notifications to send on success
		# notification_templates_error: # list of notifications to send on error
		# organization: # Name of the inventory source's inventory's organization.
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet inventory_source_update "Update inventory source(s)." b
- name: $1
	inventory_source_update:
		name: ${2:# The name or id of the inventory source to update.}
		inventory: ${3:# Name or id of the inventory that contains the inventory source(s) to update.}
		# organization: # Name of the inventory source's inventory's organization.
		# wait: no
		# interval: 1
		# timeout: # If waiting for the job to complete this will abort after this amount of seconds
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet job_cancel "Cancel an Automation Platform Controller Job." b
- name: $1
	job_cancel:
		job_id: ${2:# ID of the job to cancel}
		# fail_if_not_running: no
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet job_launch "Launch an Ansible Job." b
- name: $1
	job_launch:
		name: ${2:# Name of the job template to use.}
		# job_type: run|check
		# inventory: # Inventory to use for the job, only used if prompt for inventory is set.
		# organization: # Organization the job template exists in.
		# credentials: # Credential to use for job, only used if prompt for credential is set.
		# extra_vars: # extra_vars to use for the Job Template.
		# limit: # Limit to use for the I(job_template).
		# tags: # Specific tags to use for from playbook.
		# scm_branch: # A specific of the SCM project to run the template on.
		# skip_tags: # Specific tags to skip from the playbook.
		# verbosity: 0|1|2|3|4|5
		# diff_mode: # Show the changes made by Ansible tasks where supported
		# credential_passwords: # Passwords for credentials which are set to prompt on launch
		# wait: no
		# interval: 1
		# timeout: # If waiting for the job to complete this will abort after this amount of seconds
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet job_list "List Automation Platform Controller jobs." b
- name: $1
	job_list:
		# status: pending|waiting|running|error|failed|canceled|successful
		# page: # Page number of the results to fetch.
		# all_pages: no
		# query: # Query used to further filter the list of jobs. C({"foo":"bar"}) will be passed at C(?foo=bar)
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet job_template "create, update, or destroy Automation Platform Controller job templates." b
- name: $1
	job_template:
		name: ${2:# Name to use for the job template.}
		# new_name: # Setting this option will change the existing name (looed up via the name field.
		# copy_from: # Name or id to copy the job template from.
		# description: # Description to use for the job template.
		# job_type: run|check
		# inventory: # Name of the inventory to use for the job template.
		# organization: # Organization the job template exists in.
		# project: # Name of the project to use for the job template.
		# playbook: # Path to the playbook to use for the job template within the project provided.
		# credential: # Name of the credential to use for the job template.
		# credentials: # List of credentials to use for the job template.
		# vault_credential: # Name of the vault credential to use for the job template.
		# execution_environment: # Execution Environment to use for the JT.
		# custom_virtualenv: # Local absolute file path containing a custom Python virtualenv to use.
		# instance_groups: # list of Instance Groups for this Organization to run on.
		# forks: # The number of parallel or simultaneous processes to use while executing the playbook.
		# limit: # A host pattern to further constrain the list of hosts managed or affected by the playbook
		# verbosity: #0|1|2|3|4
		# extra_vars: # Specify C(extra_vars) for the template.
		# job_tags: # Comma separated list of the tags to use for the job template.
		# force_handlers: no
		# skip_tags: # Comma separated list of the tags to skip for the job template.
		# start_at_task: # Start the playbook at the task matching this name.
		# diff_mode: # Enable diff mode for the job template.
		# use_fact_cache: # Enable use of fact caching for the job template.
		# host_config_key: # Allow provisioning callbacks using this host config key.
		# ask_scm_branch_on_launch: # Prompt user for (scm branch) on launch.
		# ask_diff_mode_on_launch: # Prompt user to enable diff mode (show changes) to files when supported by modules.
		# ask_variables_on_launch: # Prompt user for (extra_vars) on launch.
		# ask_limit_on_launch: # Prompt user for a limit on launch.
		# ask_tags_on_launch: # Prompt user for job tags on launch.
		# ask_skip_tags_on_launch: # Prompt user for job tags to skip on launch.
		# ask_job_type_on_launch: # Prompt user for job type on launch.
		# ask_verbosity_on_launch: # Prompt user to choose a verbosity level on launch.
		# ask_inventory_on_launch: # Prompt user for inventory on launch.
		# ask_credential_on_launch: # Prompt user for credential on launch.
		# survey_enabled: # Enable a survey on the job template.
		# survey_spec: # JSON/YAML dict formatted survey definition.
		# become_enabled: # Activate privilege escalation.
		# allow_simultaneous: # Allow simultaneous runs of the job template.
		# timeout: # Maximum time in seconds to wait for a job to finish (server-side).
		# job_slice_count: 1
		# webhook_service: |github|gitlab
		# webhook_credential: # Personal Access Token for posting back the status to the service API
		# scm_branch: 
		# labels: # The labels applied to this job template
		# state: #present|absent
		# notification_templates_started: # list of notifications to send on start
		# notification_templates_success: # list of notifications to send on success
		# notification_templates_error: # list of notifications to send on error
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet job_wait "Wait for Automation Platform Controller job to finish." b
- name: $1
	job_wait:
		job_id: ${2:# ID of the job to monitor.}
		# interval: 1
		# timeout: # Maximum time in seconds to wait for a job to finish.
		# job_type: project_updates|#jobs|inventory_updates|workflow_jobs
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet label "create, update, or destroy Automation Platform Controller labels." b
- name: $1
	label:
		name: ${2:# Name of this label.}
		organization: ${3:# Organization this label belongs to.}
		# new_name: # Setting this option will change the existing name (looked up via the name field).
		# state: #present
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet license "Set the license for Automation Platform Controller" b
- name: $1
	license:
		manifest: ${2:# file path to a Red Hat subscription manifest (a .zip file)}
		# force: False
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet notification_template "create, update, or destroy Automation Platform Controller notification." b
- name: $1
	notification_template:
		name: ${2:# The name of the notification.}
		# new_name: # Setting this option will change the existing name (looked up via the name field.
		# copy_from: # Name or id to copy the notification from.
		# description: # The description of the notification.
		# organization: # The organization the notification belongs to.
		# notification_type: email|grafana|irc|mattermost|pagerduty|rocketchat|slack|twilio|webhook
		# notification_configuration: # The notification configuration file. Note providing this field would disable all notification-configuration-related fields.
		# messages: # Optional custom messages for notification template.
		# state: #present|absent
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet organization "create, update, or destroy Automation Platform Controller organizations" b
- name: $1
	organization:
		name: ${2:# Name to use for the organization.}
		# description: # The description to use for the organization.
		# default_environment: # Default Execution Environment to use for jobs owned by the Organization.
		# custom_virtualenv: # Local absolute file path containing a custom Python virtualenv to use.
		# max_hosts: 0
		# state: #present|absent
		# instance_groups: # list of Instance Groups for this Organization to run on.
		# notification_templates_started: # list of notifications to send on start
		# notification_templates_success: # list of notifications to send on success
		# notification_templates_error: # list of notifications to send on error
		# notification_templates_approvals: # list of notifications to send on start
		# galaxy_credentials: # list of Ansible Galaxy credentials to associate to the organization
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet project "create, update, or destroy Automation Platform Controller projects" b
- name: $1
	project:
		name: ${2:# Name to use for the project.}
		# copy_from: # Name or id to copy the project from.
		# description: # Description to use for the project.
		# scm_type: #manual|git|svn|insights
		# scm_url: # URL of SCM resource.
		# local_path: # The server playbook directory for manual projects.
		# scm_branch: 
		# scm_refspec: 
		# credential: # Name of the credential to use with this SCM resource.
		# scm_clean: no
		# scm_delete_on_update: no
		# scm_track_submodules: no
		# scm_update_on_launch: no
		# scm_update_cache_timeout: 0
		# allow_override: # Allow changing the SCM branch or revision in a job template that uses this project.
		# timeout: 0
		# default_environment: # Default Execution Environment to use for jobs relating to the project.
		# custom_virtualenv: # Local absolute file path containing a custom Python virtualenv to use.
		# organization: # Name of organization for project.
		# state: #present|absent
		# wait: yes
		# notification_templates_started: # list of notifications to send on start
		# notification_templates_success: # list of notifications to send on success
		# notification_templates_error: # list of notifications to send on error
		# update_project: no
		# interval: 1
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet project_update "Update a Project in Automation Platform Controller" b
- name: $1
	project_update:
		name: ${2:# The name or id of the project to update.}
		# organization: # Organization the project exists in.
		# wait: yes
		# interval: 1
		# timeout: # If waiting for the project to update this will abort after this amount of seconds
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet role "grant or revoke an Automation Platform Controller role." b
- name: $1
	role:
		role: ${2:admin|read|member|execute|adhoc|update|use|approval|auditor|project_admin|inventory_admin|credential_admin|workflow_admin|notification_admin|job_template_admin}
		# user: # User that receives the permissions specified by the role.
		# team: # Team that receives the permissions specified by the role.
		# target_team: # Team that the role acts on.
		# target_teams: # Team that the role acts on.
		# inventory: # Inventory the role acts on.
		# inventories: # Inventory the role acts on.
		# job_template: # The job template the role acts on.
		# job_templates: # The job template the role acts on.
		# workflow: # The workflow job template the role acts on.
		# workflows: # The workflow job template the role acts on.
		# credential: # Credential the role acts on.
		# credentials: # Credential the role acts on.
		# organization: # Organization the role acts on.
		# organizations: # Organization the role acts on.
		# lookup_organization: # Organization the inventories, job templates, projects, or workflows the items exists in.
		# project: # Project the role acts on.
		# projects: # Project the role acts on.
		# state: #present|absent
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet schedule "create, update, or destroy Automation Platform Controller schedules." b
- name: $1
	schedule:
		name: ${2:# Name of this schedule.}
		# rrule: # A value representing the schedules iCal recurrence rule.
		# new_name: # Setting this option will change the existing name (looked up via the name field.
		# description: # Optional description of this schedule.
		# extra_data: {}
		# inventory: # Inventory applied as a prompt, assuming job template prompts for inventory
		# credentials: # List of credentials applied as a prompt, assuming job template prompts for credentials
		# scm_branch: # Branch to use in job run. Project default used if blank. Only allowed if project allow_override field is set to true.
		# job_type: run|check
		# job_tags: # Comma separated list of the tags to use for the job template.
		# skip_tags: # Comma separated list of the tags to skip for the job template.
		# limit: # A host pattern to further constrain the list of hosts managed or affected by the playbook
		# diff_mode: # Enable diff mode for the job template.
		# verbosity: 0|1|2|3|4|5
		# unified_job_template: # Name of unified job template to schedule.
		# organization: # The organization the unified job template exists in.
		# enabled: # Enables processing of this schedule.
		# state: #present|absent
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet settings "Modify Automation Platform Controller settings." b
- name: $1
	settings:
		# name: # Name of setting to modify
		# value: # Value to be modified for given setting.
		# settings: # A data structure to be sent into the settings endpoint
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet team "create, update, or destroy Automation Platform Controller team." b
- name: $1
	team:
		name: ${2:# Name to use for the team.}
		organization: ${3:# Organization the team should be made a member of.}
		# new_name: # To use when changing a team's name.
		# description: # The description to use for the team.
		# state: #present|absent
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet token "create, update, or destroy Automation Platform Controller tokens." b
- name: $1
	token:
		# description: 
		# application: # The application tied to this token.
		# scope: read|#write
		# existing_token: # T
		# existing_token_id: # A
		# state: #present|absent
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet user "create, update, or destroy Automation Platform Controller users." b
- name: $1
	user:
		username: ${2:# Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.}
		# first_name: # First name of the user.
		# last_name: # Last name of the user.
		# email: # Email address of the user.
		# is_superuser: no
		# is_system_auditor: no
		# password: # Write-only field used to change the password.
		# update_secrets: yes
		# state: #present|absent
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet workflow_approval "Approve an approval node in a workflow job." b
- name: $1
	workflow_approval:
		workflow_job_id: ${2:# ID of the workflow job to monitor for approval.}
		name: ${3:# Name of the Approval node to approve or deny.}
		# action: #approve|deny
		# interval: 1
		# timeout: 10
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet workflow_job_template "create, update, or destroy Automation Platform Controller workflow job templates." b
- name: $1
	workflow_job_template:
		name: ${2:# Name of this workflow job template.}
		# new_name: # Setting this option will change the existing name.
		# copy_from: # Name or id to copy the workflow job template from.
		# description: # Optional description of this workflow job template.
		# extra_vars: # Variables which will be made available to jobs ran inside the workflow.
		# organization: # Organization the workflow job template exists in.
		# allow_simultaneous: # Allow simultaneous runs of the workflow job template.
		# ask_variables_on_launch: # Prompt user for C(extra_vars) on launch.
		# inventory: # Inventory applied as a prompt, assuming job template prompts for inventory
		# limit: # Limit applied as a prompt, assuming job template prompts for limit
		# scm_branch: # SCM branch applied as a prompt, assuming job template prompts for SCM branch
		# ask_inventory_on_launch: # Prompt user for inventory on launch of this workflow job template
		# ask_scm_branch_on_launch: # Prompt user for SCM branch on launch of this workflow job template
		# ask_limit_on_launch: # Prompt user for limit on launch of this workflow job template
		# webhook_service: github|gitlab
		# webhook_credential: # Personal Access Token for posting back the status to the service API
		# survey_enabled: # Setting that variable will prompt the user for job type on the workflow launch.
		# survey_spec: # The definition of the survey associated to the workflow.
		# labels: # The labels applied to this job template
		# state: #present|absent
		# notification_templates_started: # list of notifications to send on start
		# notification_templates_success: # list of notifications to send on success
		# notification_templates_error: # list of notifications to send on error
		# notification_templates_approvals: # list of notifications to send on start
		# schema: # A json list of nodes and their coresponding options. The following suboptions describe a single node.
		# destroy_current_schema: no
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet workflow_job_template_node "create, update, or destroy Automation Platform Controller workflow job template nodes." b
- name: $1
	workflow_job_template_node:
		workflow_job_template: ${2:# The workflow job template the node exists in.}
		identifier: ${3:# An identifier for this node that is unique within its workflow.}
		# extra_data: {}
		# inventory: # Inventory applied as a prompt, if job template prompts for inventory
		# scm_branch: # SCM branch applied as a prompt, if job template prompts for SCM branch
		# job_type: run|check
		# job_tags: # Job tags applied as a prompt, if job template prompts for job tags
		# skip_tags: # Tags to skip, applied as a prompt, if job tempalte prompts for job tags
		# limit: # Limit to act on, applied as a prompt, if job template prompts for limit
		# diff_mode: # Run diff mode, applied as a prompt, if job template prompts for diff mode
		# verbosity: 0|1|2|3|4|5
		# organization: # The organization of the workflow job template the node exists in.
		# unified_job_template: # Name of unified job template to run in the workflow.
		# lookup_organization: # Organization the inventories, job template, project, inventory source the unified_job_template exists in.
		# approval_node: # A dictionary of Name, description, and timeout values for the approval node.
		# all_parents_must_converge: # If enabled then the node will only run if all of the parent nodes have met the criteria to reach this node
		# always_nodes: # Nodes that will run after this node completes.
		# success_nodes: # Nodes that will run after this node on success.
		# failure_nodes: # Nodes that will run after this node on failure.
		# credentials: # Credentials to be applied to job as launch-time prompts.
		# state: #present|absent
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet workflow_launch "Run a workflow in Automation Platform Controller" b
- name: $1
	workflow_launch:
		name: ${2:# The name of the workflow template to run.}
		# organization: # Organization the workflow job template exists in.
		# inventory: # Inventory to use for the job ran with this workflow, only used if prompt for inventory is set.
		# limit: # Limit to use for the I(job_template).
		# scm_branch: # A specific branch of the SCM project to run the template on.
		# extra_vars: # Any extra vars required to launch the job.
		# wait: yes
		# interval: 1
		# timeout: # If waiting for the workflow to complete this will abort after this amount of seconds
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet workflow_node_wait "Approve an approval node in a workflow job." b
- name: $1
	workflow_node_wait:
		workflow_job_id: ${2:# ID of the workflow job to monitor for node.}
		name: ${3:# Name of the workflow node to wait on.}
		# interval: 1
		# timeout: 10
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet user "create, update, or destroy Automation Platform Controller users." b
- name: $1
	user:
		username: ${2:# Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.}
		# first_name: # First name of the user.
		# last_name: # Last name of the user.
		# email: # Email address of the user.
		# is_superuser: no
		# is_system_auditor: no
		# password: # Write-only field used to change the password.
		# update_secrets: yes
		# state: #present|absent
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet workflow_approval "Approve an approval node in a workflow job." b
- name: $1
	workflow_approval:
		workflow_job_id: ${2:# ID of the workflow job to monitor for approval.}
		name: ${3:# Name of the Approval node to approve or deny.}
		# action: #approve|deny
		# interval: 1
		# timeout: 10
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet workflow_job_template "create, update, or destroy Automation Platform Controller workflow job templates." b
- name: $1
	workflow_job_template:
		name: ${2:# Name of this workflow job template.}
		# new_name: # Setting this option will change the existing name.
		# copy_from: # Name or id to copy the workflow job template from.
		# description: # Optional description of this workflow job template.
		# extra_vars: # Variables which will be made available to jobs ran inside the workflow.
		# organization: # Organization the workflow job template exists in.
		# allow_simultaneous: # Allow simultaneous runs of the workflow job template.
		# ask_variables_on_launch: # Prompt user for C(extra_vars) on launch.
		# inventory: # Inventory applied as a prompt, assuming job template prompts for inventory
		# limit: # Limit applied as a prompt, assuming job template prompts for limit
		# scm_branch: # SCM branch applied as a prompt, assuming job template prompts for SCM branch
		# ask_inventory_on_launch: # Prompt user for inventory on launch of this workflow job template
		# ask_scm_branch_on_launch: # Prompt user for SCM branch on launch of this workflow job template
		# ask_limit_on_launch: # Prompt user for limit on launch of this workflow job template
		# webhook_service: github|gitlab
		# webhook_credential: # Personal Access Token for posting back the status to the service API
		# survey_enabled: # Setting that variable will prompt the user for job type on the workflow launch.
		# survey_spec: # The definition of the survey associated to the workflow.
		# labels: # The labels applied to this job template
		# state: #present|absent
		# notification_templates_started: # list of notifications to send on start
		# notification_templates_success: # list of notifications to send on success
		# notification_templates_error: # list of notifications to send on error
		# notification_templates_approvals: # list of notifications to send on start
		# schema: # A json list of nodes and their coresponding options. The following suboptions describe a single node.
		# destroy_current_schema: no
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet workflow_job_template_node "create, update, or destroy Automation Platform Controller workflow job template nodes." b
- name: $1
	workflow_job_template_node:
		workflow_job_template: ${2:# The workflow job template the node exists in.}
		identifier: ${3:# An identifier for this node that is unique within its workflow.}
		# extra_data: {}
		# inventory: # Inventory applied as a prompt, if job template prompts for inventory
		# scm_branch: # SCM branch applied as a prompt, if job template prompts for SCM branch
		# job_type: run|check
		# job_tags: # Job tags applied as a prompt, if job template prompts for job tags
		# skip_tags: # Tags to skip, applied as a prompt, if job tempalte prompts for job tags
		# limit: # Limit to act on, applied as a prompt, if job template prompts for limit
		# diff_mode: # Run diff mode, applied as a prompt, if job template prompts for diff mode
		# verbosity: 0|1|2|3|4|5
		# organization: # The organization of the workflow job template the node exists in.
		# unified_job_template: # Name of unified job template to run in the workflow.
		# lookup_organization: # Organization the inventories, job template, project, inventory source the unified_job_template exists in.
		# approval_node: # A dictionary of Name, description, and timeout values for the approval node.
		# all_parents_must_converge: # If enabled then the node will only run if all of the parent nodes have met the criteria to reach this node
		# always_nodes: # Nodes that will run after this node completes.
		# success_nodes: # Nodes that will run after this node on success.
		# failure_nodes: # Nodes that will run after this node on failure.
		# credentials: # Credentials to be applied to job as launch-time prompts.
		# state: #present|absent
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet workflow_launch "Run a workflow in Automation Platform Controller" b
- name: $1
	workflow_launch:
		name: ${2:# The name of the workflow template to run.}
		# organization: # Organization the workflow job template exists in.
		# inventory: # Inventory to use for the job ran with this workflow, only used if prompt for inventory is set.
		# limit: # Limit to use for the I(job_template).
		# scm_branch: # A specific branch of the SCM project to run the template on.
		# extra_vars: # Any extra vars required to launch the job.
		# wait: yes
		# interval: 1
		# timeout: # If waiting for the workflow to complete this will abort after this amount of seconds
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet workflow_node_wait "Approve an approval node in a workflow job." b
- name: $1
	workflow_node_wait:
		workflow_job_id: ${2:# ID of the workflow job to monitor for node.}
		name: ${3:# Name of the workflow node to wait on.}
		# interval: 1
		# timeout: 10
		# controller_host: # URL to your Automation Platform Controller instance.
		# controller_username: # Username for your controller instance.
		# controller_password: # Password for your controller instance.
		# controller_oauthtoken: # The OAuth token to use.
		# validate_certs: # Whether to allow insecure connections to AWX.
		# controller_config_file: # Path to the controller config file.
$0
endsnippet

snippet azure_rm_backuppolicy "Manage Azure Backup Policy" b
- name: $1
	azure_rm_backuppolicy:
		vault_name: ${2:# The name of the Recovery Services Vault the policy belongs to.}
		name: ${3:# The name of the backup policy.}
		resource_group: ${4:# The name of the resource group the vault is in.}
		# state: absent|#present
		# backup_management_type: AzureIaasVM
		# schedule_run_time: # The hour to run backups.
		# instant_recovery_snapshot_retention: # How many days to retain instant recovery snapshots.
		# schedule_run_frequency: Daily|Weekly
		# schedule_days: # List of days to execute the schedule.
		# weekly_retention_count: # The amount of weeks to retain backups.
		# daily_retention_count: # The amount of days to retain backups.
		# schedule_weekly_frequency: # The amount of weeks between backups.
		# time_zone: UTC
		# ad_user: # Active Directory username. Use when authenticating with an Active Directory user rather than service principal.
		# password: # Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.
		# profile: # Security profile found in ~/.azure/credentials file.
		# subscription_id: # Your Azure subscription Id.
		# client_id: # Azure client ID. Use when authenticating with a Service Principal.
		# secret: # Azure client secret. Use when authenticating with a Service Principal.
		# tenant: # Azure tenant ID. Use when authenticating with a Service Principal.
		# cloud_environment: AzureCloud
		# adfs_authority_url: # Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.
		# cert_validation_mode: ignore|validate
		# auth_source: #auto|cli|credential_file|env|msi
		# api_profile: latest
		# log_path: # Parent argument.
		# log_mode: # Parent argument.
$0
endsnippet

snippet azure_rm_backuppolicy_info "Get Info on Azure Backup Policy" b
- name: $1
	azure_rm_backuppolicy_info:
		vault_name: ${2:# The name of the Recovery Services Vault the policy belongs to.}
		name: ${3:# The name of the backup policy.}
		resource_group: ${4:# The name of the resource group the vault is in.}
		# ad_user: # Active Directory username. Use when authenticating with an Active Directory user rather than service principal.
		# password: # Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.
		# profile: # Security profile found in ~/.azure/credentials file.
		# subscription_id: # Your Azure subscription Id.
		# client_id: # Azure client ID. Use when authenticating with a Service Principal.
		# secret: # Azure client secret. Use when authenticating with a Service Principal.
		# tenant: # Azure tenant ID. Use when authenticating with a Service Principal.
		# cloud_environment: AzureCloud
		# adfs_authority_url: # Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.
		# cert_validation_mode: ignore|validate
		# auth_source: #auto|cli|credential_file|env|msi
		# api_profile: latest
		# log_path: # Parent argument.
		# log_mode: # Parent argument.
$0
endsnippet

snippet cp_mgmt_access_layer "Manages access-layer objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_access_layer:
		name: ${2:# Object name.}
		# add_default_rule: # Indicates whether to include a cleanup rule in the new layer.
		# applications_and_url_filtering: # Whether to enable Applications & URL Filtering blade on the layer.
		# content_awareness: # Whether to enable Content Awareness blade on the layer.
		# detect_using_x_forward_for: # Whether to use X-Forward-For HTTP header, which is added by the  proxy server to keep track of the original source IP.
		# firewall: # Whether to enable Firewall blade on the layer.
		# implicit_cleanup_action: drop|accept
		# mobile_access: # Whether to enable Mobile Access blade on the layer.
		# shared: # Whether this layer is shared.
		# tags: # Collection of tag identifiers.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_access_layer_facts "Get access-layer objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_access_layer_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_access_role "Manages access-role objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_access_role:
		name: ${2:# Object name.}
		# machines: # Machines that can access the system.
		# networks: # Collection of Network objects identified by the name or UID that can access the system.
		# remote_access_clients: # Remote access clients identified by name or UID.
		# tags: # Collection of tag identifiers.
		# users: # Users that can access the system.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_access_role_facts "Get access-role objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_access_role_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_access_rule "Manages access-rule objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_access_rule:
		name: ${2:# Object name.}
		# layer: # Layer that the rule belongs to identified by the name or UID.
		# position: # Position in the rulebase.
		# position_by_rule: # Position in the rulebase.
		# action: # a "Accept", "Drop", "Ask", "Inform", "Reject", "User Auth", "Client Auth", "Apply Layer".
		# action_settings: # Action settings.
		# content: # List of processed file types that this rule applies on.
		# content_direction: any|up|down
		# content_negate: # True if negate is set for data.
		# custom_fields: # Custom fields.
		# destination: # Collection of Network objects identified by the name or UID.
		# destination_negate: # True if negate is set for destination.
		# enabled: # Enable/Disable the rule.
		# inline_layer: # Inline Layer identified by the name or UID. Relevant only if "Action" was set to "Apply Layer".
		# install_on: # Which Gateways identified by the name or UID to install the policy on.
		# service: # Collection of Network objects identified by the name or UID.
		# service_negate: # True if negate is set for service.
		# source: # Collection of Network objects identified by the name or UID.
		# source_negate: # True if negate is set for source.
		# time: # List of time objects. For example, "Weekend", "Off-Work", "Every-Day".
		# track: # Track Settings.
		# user_check: # User check settings.
		# vpn: # Communities or Directional.
		# comments: # Comments string.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_access_rule_facts "Get access-rule objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_access_rule_facts:
		# name: # Object name. Should be unique in the domain.
		# layer: # Layer that the rule belongs to identified by the name or UID.
		# show_as_ranges: # When true, the source, destination and services & applications parameters are displayed as ranges of IP addresses and port numbers rather than network objects.<br /> Objects that are not represented using IP addresses or port numbers are presented as objects.<br /> In addition, the response of each rule does not contain the parameters, source, source-negate, destination, destination-negate, service and service-negate, but instead it contains the parameters, source-ranges, destination-ranges and service-ranges.<br /><br /> Note, Requesting to show rules as ranges is limited up to 20 rules per request, otherwise an error is returned. If you wish to request more rules, use the offset and limit parameters to limit your request.
		# show_hits: # N/A
		# hits_settings: # N/A
		# details_level: uid|standard|full
		# filter: # Search expression to filter the rulebase. The provided text should be exactly the same as it would be given in Smart Console. The logical operators in the expression ('AND', 'OR') should be provided in capital letters. If an operator is not used, the default OR operator applies.
		# filter_settings: # Sets filter preferences.
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# package: # Name of the package.
		# use_object_dictionary: # N/A
		# dereference_group_members: # Indicates whether to dereference "members" field by details level for every object in reply.
		# show_membership: # Indicates whether to calculate and show "groups" field for every object in reply.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_access_rules "Manages access-rules objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_access_rules:
		layer: ${2:# Layer that the rule belongs to identified by the name or UID.}
		rules: ${3:# List of rules.}
		# details_level: uid|standard|full
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_access_section "Manages access-section objects on Checkpoint over Web Services API" b
- name: $1
	cp_mgmt_access_section:
		name: ${2:# Object name.}
		# layer: # Layer that the rule belongs to identified by the name or UID.
		# position: # Position in the rulebase.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_add_api_key "Add API key for administrator, to enable login with it. For the key to be valid publish is needed." b
- name: $1
	cp_mgmt_add_api_key:
		# admin_uid: # Administrator uid to generate API key for.
		# admin_name: # Administrator name to generate API key for.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_add_data_center_object "Imports a Data Center Object from a Data Center Server.<br> Data Center Object represents an object in the cloud environment." b
- name: $1
	cp_mgmt_add_data_center_object:
		# data_center_name: # Name of the Data Center Server the object is in.
		# data_center_uid: # Unique identifier of the Data Center Server the object is in.
		# uri: # URI of the object in the Data Center Server.
		# uid_in_data_center: # Unique identifier of the object in the Data Center Server.
		# name: # Override default name on data-center.
		# tags: # Collection of tag identifiers.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# groups: # Collection of group identifiers.
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_add_domain "Create new object" b
- name: $1
	cp_mgmt_add_domain:
		name: ${2:# Object name.}
		# servers: # Domain servers. When this field is provided, 'set-domain' command is executed asynchronously.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_add_nat_rule "Create new object." b
- name: $1
	cp_mgmt_add_nat_rule:
		# package: # Name of the package.
		# position: # Position in the rulebase.
		# enabled: # Enable/Disable the rule.
		# install_on: # Which Gateways identified by the name or UID to install the policy on.
		# method: static|hide|nat64|nat46
		# original_destination: # Original destination.
		# original_service: # Original service.
		# original_source: # Original source.
		# translated_destination: # Translated  destination.
		# translated_service: # Translated  service.
		# translated_source: # Translated  source.
		# comments: # Comments string.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_address_range "Manages address-range objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_address_range:
		name: ${2:# Object name.}
		# ip_address_first: # First IP address in the range. If both IPv4 and IPv6 address ranges are required, use the ipv4-address-first and the ipv6-address-first fields instead.
		# ipv4_address_first: # First IPv4 address in the range.
		# ipv6_address_first: # First IPv6 address in the range.
		# ip_address_last: # Last IP address in the range. If both IPv4 and IPv6 address ranges are required, use the ipv4-address-first and the ipv6-address-first fields instead.
		# ipv4_address_last: # Last IPv4 address in the range.
		# ipv6_address_last: # Last IPv6 address in the range.
		# nat_settings: # NAT settings.
		# tags: # Collection of tag identifiers.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# groups: # Collection of group identifiers.
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_address_range_facts "Get address-range objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_address_range_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# show_membership: # Indicates whether to calculate and show "groups" field for every object in reply.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_administrator "Manages administrator objects on Checkpoint over Web Services API" b
- name: $1
	cp_mgmt_administrator:
		name: ${2:# Object name.}
		# authentication_method: undefined|check point password|os password|securid|radius|tacacs|ad authentication|api key
		# email: # Administrator email.
		# expiration_date: # Format, YYYY-MM-DD, YYYY-mm-ddThh,mm,ss.
		# multi_domain_profile: # Administrator multi-domain profile.
		# must_change_password: # True if administrator must change password on the next login.
		# password: # Administrator password.
		# password_hash: # Administrator password hash.
		# permissions_profile: # Administrator permissions profile. Permissions profile should not be provided when multi-domain-profile is set to "Multi-Domain Super User" or "Domain Super User".
		# phone_number: # Administrator phone number.
		# radius_server: # RADIUS server object identified by the name or UID. Must be set when "authentication-method" was selected to be "RADIUS".
		# tacacs_server: # TACACS server object identified by the name or UID. Must be set when "authentication-method" was selected to be "TACACS".
		# tags: # Collection of tag identifiers.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_administrator_facts "Get administrator objects facts on Checkpoint over Web Services API" b
- name: $1
	cp_mgmt_administrator_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # The maximal number of returned results. This parameter is relevant only for getting few objects.
		# offset: # Number of the results to initially skip. This parameter is relevant only for getting few objects.
		# order: # Sorts the results by search criteria. Automatically sorts the results by Name, in the ascending order. This parameter is relevant only for getting few objects.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_application_site "Manages application-site objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_application_site:
		name: ${2:# Object name.}
		# primary_category: # Each application is assigned to one primary category based on its most defining aspect.
		# url_list: # URLs that determine this particular application.
		# application_signature: # Application signature generated by <a href="https,//supportcenter.checkpoint.com/supportcenter/portal?eventSubmit_doGoviewsolutiondetails=&solutionid=sk103051">Signature Tool</a>.
		# additional_categories: # Used to configure or edit the additional categories of a custom application / site used in the Application and URL Filtering or Threat Prevention.
		# description: # A description for the application.
		# tags: # Collection of tag identifiers.
		# urls_defined_as_regular_expression: # States whether the URL is defined as a Regular Expression or not.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# groups: # Collection of group identifiers.
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_application_site_category "Manages application-site-category objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_application_site_category:
		name: ${2:# Object name.}
		# description: # N/A
		# tags: # Collection of tag identifiers.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# groups: # Collection of group identifiers.
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_application_site_category_facts "Get application-site-category objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_application_site_category_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_application_site_facts "Get application-site objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_application_site_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# application_id: # Object application identifier.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# show_membership: # Indicates whether to calculate and show "groups" field for every object in reply.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_application_site_group "Manages application-site-group objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_application_site_group:
		name: ${2:# Object name.}
		# members: # Collection of application and URL filtering objects identified by the name or UID.
		# tags: # Collection of tag identifiers.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# groups: # Collection of group identifiers.
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_application_site_group_facts "Get application-site-group objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_application_site_group_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# dereference_group_members: # Indicates whether to dereference "members" field by details level for every object in reply.
		# show_membership: # Indicates whether to calculate and show "groups" field for every object in reply.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_assign_global_assignment "assign global assignment on Check Point over Web Services API" b
- name: $1
	cp_mgmt_assign_global_assignment:
		# dependent_domains: # N/A
		# global_domains: # N/A
		# details_level: uid|standard|full
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_data_center_object_facts "Get data-center-object objects facts on Checkpoint over Web Services API" b
- name: $1
	cp_mgmt_data_center_object_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # The maximal number of returned results. This parameter is relevant only for getting few objects.
		# offset: # Number of the results to initially skip. This parameter is relevant only for getting few objects.
		# order: # Sorts the results by search criteria. Automatically sorts the results by Name, in the ascending order. This parameter is relevant only for getting few objects.
		# show_membership: # Indicates whether to calculate and show "groups" field for every object in reply.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_delete_api_key "Delete the API key. For the key to be invalid publish is needed." b
- name: $1
	cp_mgmt_delete_api_key:
		# api_key: # API key to be deleted.
		# admin_uid: # Administrator uid to generate API key for.
		# admin_name: # Administrator name to generate API key for.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_delete_data_center_object "Delete existing object using object name or uid." b
- name: $1
	cp_mgmt_delete_data_center_object:
		# name: # Object name.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_delete_domain "Delete existing object using object name or uid." b
- name: $1
	cp_mgmt_delete_domain:
		name: ${2:# Object name.}
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_delete_nat_rule "Delete existing object using object name or uid." b
- name: $1
	cp_mgmt_delete_nat_rule:
		# rule_number: # Rule number.
		# package: # Name of the package.
		# details_level: uid|standard|full
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_discard "All changes done by user are discarded and removed from database." b
- name: $1
	cp_mgmt_discard:
		# uid: # Session unique identifier. Specify it to discard a different session than the one you currently use.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_dns_domain "Manages dns-domain objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_dns_domain:
		name: ${2:# Object name.}
		# is_sub_domain: # Whether to match sub-domains in addition to the domain itself.
		# tags: # Collection of tag identifiers.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_dns_domain_facts "Get dns-domain objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_dns_domain_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# show_membership: # Indicates whether to calculate and show "groups" field for every object in reply.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_domain_facts "Get domain objects facts on Checkpoint over Web Services API" b
- name: $1
	cp_mgmt_domain_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# filter: # Search expression to filter objects by. The provided text should be exactly the same as it would be given in SmartConsole Object Explorer. The logical operators in the expression ('AND', 'OR') should be provided in capital letters. The search involves both a IP search and a textual search in name, comment, tags etc.
		# limit: # The maximal number of returned results. This parameter is relevant only for getting few objects.
		# offset: # Number of the results to initially skip. This parameter is relevant only for getting few objects.
		# order: # Sorts the results by search criteria. Automatically sorts the results by Name, in the ascending order. This parameter is relevant only for getting few objects.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_dynamic_object "Manages dynamic-object objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_dynamic_object:
		name: ${2:# Object name.}
		# tags: # Collection of tag identifiers.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_dynamic_object_facts "Get dynamic-object objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_dynamic_object_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# show_membership: # Indicates whether to calculate and show "groups" field for every object in reply.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_exception_group "Manages exception-group objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_exception_group:
		name: ${2:# Object name.}
		# applied_profile: # The threat profile to apply this group to in the case of apply-on threat-rules-with-specific-profile.
		# applied_threat_rules: # The threat rules to apply this group on in the case of apply-on manually-select-threat-rules.
		# apply_on: all-threat-rules|all-threat-rules-with-specific-profile|manually-select-threat-rules
		# tags: # Collection of tag identifiers.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_exception_group_facts "Get exception-group objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_exception_group_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_global_assignment "Manages global-assignment objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_global_assignment:
		# dependent_domain: # N/A
		# global_access_policy: # Global domain access policy that is assigned to a dependent domain.
		# global_domain: # N/A
		# global_threat_prevention_policy: # Global domain threat prevention policy that is assigned to a dependent domain.
		# manage_protection_actions: # N/A
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_global_assignment_facts "Get global-assignment objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_global_assignment_facts:
		# dependent_domain: # N/A
		# global_domain: # N/A
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_group "Manages group objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_group:
		name: ${2:# Object name.}
		# members: # Collection of Network objects identified by the name or UID.
		# tags: # Collection of tag identifiers.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# groups: # Collection of group identifiers.
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_group_facts "Get group objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_group_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# show_as_ranges: # When true, the group's matched content is displayed as ranges of IP addresses rather than network objects.<br />Objects that are not represented using IP addresses are presented as objects.<br />The 'members' parameter is omitted from the response and instead the 'ranges' parameter is displayed.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# dereference_group_members: # Indicates whether to dereference "members" field by details level for every object in reply.
		# show_membership: # Indicates whether to calculate and show "groups" field for every object in reply.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_group_with_exclusion "Manages group-with-exclusion objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_group_with_exclusion:
		name: ${2:# Object name.}
		# except: # Name or UID of an object which the group excludes.
		# include: # Name or UID of an object which the group includes.
		# tags: # Collection of tag identifiers.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# groups: # Collection of group identifiers.
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_group_with_exclusion_facts "Get group-with-exclusion objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_group_with_exclusion_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# show_as_ranges: # When true, the group with exclusion's matched content is displayed as ranges of IP addresses rather than network objects.<br />Objects that are not represented using IP addresses are presented as objects.<br />The 'include' and 'except' parameters are omitted from the response and instead the 'ranges' parameter is displayed.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_host "Manages host objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_host:
		name: ${2:# Object name.}
		# ip_address: # IPv4 or IPv6 address. If both addresses are required use ipv4-address and ipv6-address fields explicitly.
		# ipv4_address: # IPv4 address.
		# ipv6_address: # IPv6 address.
		# interfaces: # Host interfaces.
		# nat_settings: # NAT settings.
		# tags: # Collection of tag identifiers.
		# host_servers: # Servers Configuration.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# groups: # Collection of group identifiers.
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_host_facts "Get host objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_host_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# show_membership: # Indicates whether to calculate and show "groups" field for every object in reply.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_https_section "Manages https-section objects on Checkpoint over Web Services API" b
- name: $1
	cp_mgmt_https_section:
		name: ${2:# Object name.}
		# layer: # Layer that holds the Object. Identified by the Name or UID.
		# position: # Position in the rulebase.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_identity_tag "Manages identity-tag objects on Checkpoint over Web Services API" b
- name: $1
	cp_mgmt_identity_tag:
		name: ${2:# Object name.}
		# external_identifier: # External identifier. For example, Cisco ISE security group tag.
		# tags: # Collection of tag identifiers.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_identity_tag_facts "Get identity-tag objects facts on Checkpoint over Web Services API" b
- name: $1
	cp_mgmt_identity_tag_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# filter: # Search expression to filter objects by. The provided text should be exactly the same as it would be given in SmartConsole Object Explorer. The logical operators in the expression ('AND', 'OR') should be provided in capital letters. The search involves both a IP search and a textual search in name, comment, tags etc.
		# limit: # The maximal number of returned results. This parameter is relevant only for getting few objects.
		# offset: # Number of the results to initially skip. This parameter is relevant only for getting few objects.
		# order: # Sorts the results by search criteria. Automatically sorts the results by Name, in the ascending order. This parameter is relevant only for getting few objects.
		# domains_to_process: # Indicates which domains to process the commands on. It cannot be used with the details-level full, must be run from the System Domain only and with ignore-warnings true. Valid values are, CURRENT_DOMAIN, ALL_DOMAINS_ON_THIS_SERVER.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_install_database "Copies the user database and network objects information to specified targets." b
- name: $1
	cp_mgmt_install_database:
		# targets: # Check Point host(s) with one or more Management Software Blades enabled. The targets can be identified by their name or unique identifier.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_install_policy "install policy on Check Point over Web Services API" b
- name: $1
	cp_mgmt_install_policy:
		# policy_package: # The name of the Policy Package to be installed.
		# targets: # On what targets to execute this command. Targets may be identified by their name, or object unique identifier.
		# access: # Set to be true in order to install the Access Control policy. By default, the value is true if Access Control policy is enabled on the input policy package, otherwise false.
		# desktop_security: # Set to be true in order to install the Desktop Security policy. By default, the value is true if desktop security policy is enabled on the input policy package, otherwise false.
		# qos: # Set to be true in order to install the QoS policy. By default, the value is true if Quality-of-Service policy is enabled on the input policy package, otherwise false.
		# threat_prevention: # Set to be true in order to install the Threat Prevention policy. By default, the value is true if Threat Prevention policy is enabled on the input policy package, otherwise false.
		# install_on_all_cluster_members_or_fail: # Relevant for the gateway clusters. If true, the policy is installed on all the cluster members. If the installation on a cluster member fails, don't install on that cluster.
		# prepare_only: # If true, prepares the policy for the installation, but doesn't install it on an installation target.
		# revision: # The UID of the revision of the policy to install.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_install_software_package "Installs the software package on target machines." b
- name: $1
	cp_mgmt_install_software_package:
		# name: # The name of the software package.
		# targets: # On what targets to execute this command. Targets may be identified by their name, or object unique identifier.
		# cluster_installation_settings: # Installation settings for cluster.
		# concurrency_limit: # The number of targets, on which the same package is installed at the same time.
		# method: install|upgrade
		# package_location: automatic|target-machine|central
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_lsm_cluster "Manages lsm-cluster objects on Checkpoint over Web Services API" b
- name: $1
	cp_mgmt_lsm_cluster:
		# main_ip_address: # Main IP address.
		# name_prefix: # A prefix added to the profile name and creates the LSM cluster name.
		# name_suffix: # A suffix added to the profile name and creates the LSM cluster name.
		# security_profile: # LSM profile.
		# interfaces: # Interfaces.
		# members: # Members.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_lsm_cluster_facts "Get lsm-cluster objects facts on Checkpoint over Web Services API" b
- name: $1
	cp_mgmt_lsm_cluster_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# filter: # Search expression to filter objects by. The provided text should be exactly the same as it would be given in SmartConsole Object Explorer. The logical operators in the expression ('AND', 'OR') should be provided in capital letters. The search involves both a IP search and a textual search in name, comment, tags etc.
		# limit: # The maximal number of returned results. This parameter is relevant only for getting few objects.
		# offset: # Number of the results to initially skip. This parameter is relevant only for getting few objects.
		# order: # Sorts the results by search criteria. Automatically sorts the results by Name, in the ascending order. This parameter is relevant only for getting few objects.
		# show_membership: # Indicates whether to calculate and show "groups" field for every object in reply.
		# domains_to_process: # Indicates which domains to process the commands on. It cannot be used with the details-level full, must be run from the System Domain only and with ignore-warnings true. Valid values are, CURRENT_DOMAIN, ALL_DOMAINS_ON_THIS_SERVER.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_lsm_gateway "Manages lsm-gateway objects on Checkpoint over Web Services API" b
- name: $1
	cp_mgmt_lsm_gateway:
		name: ${2:# Object name.}
		# security_profile: # LSM profile.
		# provisioning_settings: # Provisioning settings.
		# provisioning_state: off|manual|using-profile
		# sic: # Secure Internal Communication.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_lsm_gateway_facts "Get lsm-gateway objects facts on Checkpoint over Web Services API" b
- name: $1
	cp_mgmt_lsm_gateway_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# filter: # Search expression to filter objects by. The provided text should be exactly the same as it would be given in SmartConsole Object Explorer. The logical operators in the expression ('AND', 'OR') should be provided in capital letters. The search involves both a IP search and a textual search in name, comment, tags etc.
		# limit: # The maximal number of returned results. This parameter is relevant only for getting few objects.
		# offset: # Number of the results to initially skip. This parameter is relevant only for getting few objects.
		# order: # Sorts the results by search criteria. Automatically sorts the results by Name, in the ascending order. This parameter is relevant only for getting few objects.
		# show_membership: # Indicates whether to calculate and show "groups" field for every object in reply.
		# domains_to_process: # Indicates which domains to process the commands on. It cannot be used with the details-level full, must be run from the System Domain only and with ignore-warnings true. Valid values are, CURRENT_DOMAIN, ALL_DOMAINS_ON_THIS_SERVER.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_mds "Manages mds objects on Checkpoint over Web Services API" b
- name: $1
	cp_mgmt_mds:
		name: ${2:# Object name.}
		# ip_address: # IPv4 or IPv6 address. If both addresses are required use ipv4-address and ipv6-address fields explicitly.
		# ipv4_address: # IPv4 address.
		# ipv6_address: # IPv6 address.
		# hardware: # Hardware name. For example, Open server, Smart-1, Other.
		# os: # Operating system name. For example, Gaia, Linux, SecurePlatform.
		# version: # System version.
		# one_time_password: # Secure internal connection one time password.
		# server_type: multi-domain server|multi-domain log server
		# ip_pool_first: # First IP address in the range.
		# ipv4_pool_first: # First IPv4 address in the range.
		# ipv6_pool_first: # First IPv6 address in the range.
		# ip_pool_last: # Last IP address in the range.
		# ipv4_pool_last: # Last IPv4 address in the range.
		# ipv6_pool_last: # Last IPv6 address in the range.
		# tags: # Collection of tag identifiers.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
$0
endsnippet

snippet cp_mgmt_mds_facts "Get Multi-Domain Server (mds) objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_mds_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_multicast_address_range "Manages multicast-address-range objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_multicast_address_range:
		name: ${2:# Object name.}
		# ip_address: # IPv4 or IPv6 address. If both addresses are required use ipv4-address and ipv6-address fields explicitly.
		# ipv4_address: # IPv4 address.
		# ipv6_address: # IPv6 address.
		# ip_address_first: # First IP address in the range. If both IPv4 and IPv6 address ranges are required, use the ipv4-address-first and the ipv6-address-first fields instead.
		# ipv4_address_first: # First IPv4 address in the range.
		# ipv6_address_first: # First IPv6 address in the range.
		# ip_address_last: # Last IP address in the range. If both IPv4 and IPv6 address ranges are required, use the ipv4-address-first and the ipv6-address-first fields instead.
		# ipv4_address_last: # Last IPv4 address in the range.
		# ipv6_address_last: # Last IPv6 address in the range.
		# tags: # Collection of tag identifiers.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# groups: # Collection of group identifiers.
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_multicast_address_range_facts "Get multicast-address-range objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_multicast_address_range_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# show_membership: # Indicates whether to calculate and show "groups" field for every object in reply.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_nat_rule_facts "Get nat-rule objects facts on Checkpoint over Web Services API" b
- name: $1
	cp_mgmt_nat_rule_facts:
		# rule_number: # Rule number.
		# package: # Name of the package.
		# details_level: uid|standard|full
		# filter: # Search expression to filter the rulebase. The provided text should be exactly the same as it would be given in Smart Console. The logical operators in the expression ('AND', 'OR') should be provided in capital letters. If an operator is not used, the default OR operator applies.
		# filter_settings: # Sets filter preferences.
		# limit: # The maximal number of returned results. This parameter is relevant only for getting few objects.
		# offset: # Number of the results to initially skip. This parameter is relevant only for getting few objects.
		# order: # Sorts the results by search criteria. Automatically sorts the results by Name, in the ascending order. This parameter is relevant only for getting few objects.
		# use_object_dictionary: # N/A
		# dereference_group_members: # Indicates whether to dereference "members" field by details level for every object in reply.
		# show_membership: # Indicates whether to calculate and show "groups" field for every object in reply.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_nat_section "Manages nat-section objects on Checkpoint over Web Services API" b
- name: $1
	cp_mgmt_nat_section:
		name: ${2:# Object name.}
		# package: # Name of the package.
		# position: # Position in the rulebase.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_network "Manages network objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_network:
		name: ${2:# Object name.}
		# subnet: # IPv4 or IPv6 network address. If both addresses are required use subnet4 and subnet6 fields explicitly.
		# subnet4: # IPv4 network address.
		# subnet6: # IPv6 network address.
		# mask_length: # IPv4 or IPv6 network mask length. If both masks are required use mask-length4 and mask-length6 fields explicitly. Instead of IPv4 mask length it is possible to specify IPv4 mask itself in subnet-mask field.
		# mask_length4: # IPv4 network mask length.
		# mask_length6: # IPv6 network mask length.
		# subnet_mask: # IPv4 network mask.
		# nat_settings: # NAT settings.
		# tags: # Collection of tag identifiers.
		# broadcast: disallow|allow
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# groups: # Collection of group identifiers.
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_network_facts "Get network objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_network_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# show_membership: # Indicates whether to calculate and show "groups" field for every object in reply.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_package "Manages package objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_package:
		name: ${2:# Object name.}
		# access: # True - enables, False - disables access & NAT policies, empty - nothing is changed.
		# desktop_security: # True - enables, False - disables Desktop security policy, empty - nothing is changed.
		# installation_targets: # Which Gateways identified by the name or UID to install the policy on.
		# qos: # True - enables, False - disables QoS policy, empty - nothing is changed.
		# qos_policy_type: recommended|express
		# tags: # Collection of tag identifiers.
		# threat_prevention: # True - enables, False - disables Threat policy, empty - nothing is changed.
		# vpn_traditional_mode: # True - enables, False - disables VPN traditional mode, empty - nothing is changed.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# access_layers: # Access policy layers.
		# threat_layers: # Threat policy layers.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_package_facts "Get package objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_package_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_publish "All the changes done by this user will be seen by all users only after publish is called." b
- name: $1
	cp_mgmt_publish:
		# uid: # Session unique identifier. Specify it to publish a different session than the one you currently use.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_put_file "put file on Check Point over Web Services API" b
- name: $1
	cp_mgmt_put_file:
		# targets: # On what targets to execute this command. Targets may be identified by their name, or object unique identifier.
		# file_content: # N/A
		# file_name: # N/A
		# file_path: # N/A
		# comments: # Comments string.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_run_ips_update "Runs IPS database update. If package-path is not provided server will try to get the latest package from the User Center." b
- name: $1
	cp_mgmt_run_ips_update:
		# package_path: # Offline update package path.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_run_script "Executes the script on a given list of targets." b
- name: $1
	cp_mgmt_run_script:
		# script_name: # Script name.
		# script: # Script body.
		# targets: # On what targets to execute this command. Targets may be identified by their name, or object unique identifier.
		# args: # Script arguments.
		# comments: # Comments string.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_security_zone "Manages security-zone objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_security_zone:
		name: ${2:# Object name.}
		# tags: # Collection of tag identifiers.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_security_zone_facts "Get security-zone objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_security_zone_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# show_membership: # Indicates whether to calculate and show "groups" field for every object in reply.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_service_dce_rpc "Manages service-dce-rpc objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_service_dce_rpc:
		name: ${2:# Object name.}
		# interface_uuid: # Network interface UUID.
		# keep_connections_open_after_policy_installation: # Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.
		# tags: # Collection of tag identifiers.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# groups: # Collection of group identifiers.
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_service_dce_rpc_facts "Get service-dce-rpc objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_service_dce_rpc_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# show_membership: # Indicates whether to calculate and show "groups" field for every object in reply.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_service_group "Manages service-group objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_service_group:
		name: ${2:# Object name.}
		# members: # Collection of Network objects identified by the name or UID.
		# tags: # Collection of tag identifiers.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# groups: # Collection of group identifiers.
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_service_group_facts "Get service-group objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_service_group_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# show_as_ranges: # When true, the service group's matched content is displayed as ranges of port numbers rather than service objects.<br />Objects that are not represented using port numbers are presented as objects.<br />The 'members' parameter is omitted from the response and instead the 'ranges' parameter is displayed.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# dereference_group_members: # Indicates whether to dereference "members" field by details level for every object in reply.
		# show_membership: # Indicates whether to calculate and show "groups" field for every object in reply.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_service_icmp "Manages service-icmp objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_service_icmp:
		name: ${2:# Object name.}
		# icmp_code: # As listed in, <a href="http,//www.iana.org/assignments/icmp-parameters" target="_blank">RFC 792</a>.
		# icmp_type: # As listed in, <a href="http,//www.iana.org/assignments/icmp-parameters" target="_blank">RFC 792</a>.
		# keep_connections_open_after_policy_installation: # Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.
		# tags: # Collection of tag identifiers.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# groups: # Collection of group identifiers.
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_service_icmp6 "Manages service-icmp6 objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_service_icmp6:
		name: ${2:# Object name.}
		# icmp_code: # As listed in, <a href="http,//www.iana.org/assignments/icmp-parameters" target="_blank">RFC 792</a>.
		# icmp_type: # As listed in, <a href="http,//www.iana.org/assignments/icmp-parameters" target="_blank">RFC 792</a>.
		# keep_connections_open_after_policy_installation: # Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.
		# tags: # Collection of tag identifiers.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# groups: # Collection of group identifiers.
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_service_icmp6_facts "Get service-icmp6 objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_service_icmp6_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# show_membership: # Indicates whether to calculate and show "groups" field for every object in reply.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_service_icmp_facts "Get service-icmp objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_service_icmp_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# show_membership: # Indicates whether to calculate and show "groups" field for every object in reply.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_service_other "Manages service-other objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_service_other:
		name: ${2:# Object name.}
		# accept_replies: # Specifies whether Other Service replies are to be accepted.
		# action: # Contains an INSPECT expression that defines the action to take if a rule containing this service is matched. Example, set r_mhandler &open_ssl_handler sets a handler on the connection.
		# aggressive_aging: # Sets short (aggressive) timeouts for idle connections.
		# ip_protocol: # IP protocol number.
		# keep_connections_open_after_policy_installation: # Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.
		# match: # Contains an INSPECT expression that defines the matching criteria. The connection is examined against the expression during the first packet. Example, tcp, dport = 21, direction = 0 matches incoming FTP control connections.
		# match_for_any: # Indicates whether this service is used when 'Any' is set as the rule's service and there are several service objects with the same source port and protocol.
		# override_default_settings: # Indicates whether this service is a Data Domain service which has been overridden.
		# session_timeout: # Time (in seconds) before the session times out.
		# sync_connections_on_cluster: # Enables state-synchronized High Availability or Load Sharing on a ClusterXL or OPSEC-certified cluster.
		# tags: # Collection of tag identifiers.
		# use_default_session_timeout: # Use default virtual session timeout.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# groups: # Collection of group identifiers.
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_service_other_facts "Get service-other objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_service_other_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# show_membership: # Indicates whether to calculate and show "groups" field for every object in reply.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_service_rpc "Manages service-rpc objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_service_rpc:
		name: ${2:# Object name.}
		# keep_connections_open_after_policy_installation: # Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.
		# program_number: # N/A
		# tags: # Collection of tag identifiers.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# groups: # Collection of group identifiers.
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_service_rpc_facts "Get service-rpc objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_service_rpc_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# show_membership: # Indicates whether to calculate and show "groups" field for every object in reply.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_service_sctp "Manages service-sctp objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_service_sctp:
		name: ${2:# Object name.}
		# port: # Port number. To specify a port range add a hyphen between the lowest and the highest port numbers, for example 44-45.
		# aggressive_aging: # Sets short (aggressive) timeouts for idle connections.
		# keep_connections_open_after_policy_installation: # Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.
		# match_for_any: # Indicates whether this service is used when 'Any' is set as the rule's service and there are several service objects with the same source port and protocol.
		# session_timeout: # Time (in seconds) before the session times out.
		# source_port: # Source port number. To specify a port range add a hyphen between the lowest and the highest port numbers, for example 44-45.
		# sync_connections_on_cluster: # Enables state-synchronized High Availability or Load Sharing on a ClusterXL or OPSEC-certified cluster.
		# tags: # Collection of tag identifiers.
		# use_default_session_timeout: # Use default virtual session timeout.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# groups: # Collection of group identifiers.
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_service_sctp_facts "Get service-sctp objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_service_sctp_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# show_membership: # Indicates whether to calculate and show "groups" field for every object in reply.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_service_tcp "Manages service-tcp objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_service_tcp:
		name: ${2:# Object name.}
		# aggressive_aging: # Sets short (aggressive) timeouts for idle connections.
		# keep_connections_open_after_policy_installation: # Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.
		# match_by_protocol_signature: # A value of true enables matching by the selected protocol's signature - the signature identifies the protocol as genuine. Select this option to limit the port to the specified protocol. If the selected protocol does not support matching by signature, this field cannot be set to true.
		# match_for_any: # Indicates whether this service is used when 'Any' is set as the rule's service and there are several service objects with the same source port and protocol.
		# override_default_settings: # Indicates whether this service is a Data Domain service which has been overridden.
		# port: # The number of the port used to provide this service. To specify a port range, place a hyphen between the lowest and highest port numbers, for example 44-55.
		# protocol: # Select the protocol type associated with the service, and by implication, the management server (if any) that enforces Content Security and Authentication for the service. Selecting a Protocol Type invokes the specific protocol handlers for each protocol type, thus enabling higher level of security by parsing the protocol, and higher level of connectivity by tracking dynamic actions (such as opening of ports).
		# session_timeout: # Time (in seconds) before the session times out.
		# source_port: # Port number for the client side service. If specified, only those Source port Numbers will be Accepted, Dropped, or Rejected during packet inspection. Otherwise, the source port is not inspected.
		# sync_connections_on_cluster: # Enables state-synchronized High Availability or Load Sharing on a ClusterXL or OPSEC-certified cluster.
		# tags: # Collection of tag identifiers.
		# use_default_session_timeout: # Use default virtual session timeout.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# groups: # Collection of group identifiers.
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_service_tcp_facts "Get service-tcp objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_service_tcp_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# show_membership: # Indicates whether to calculate and show "groups" field for every object in reply.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_service_udp "Manages service-udp objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_service_udp:
		name: ${2:# Object name.}
		# accept_replies: # N/A
		# aggressive_aging: # Sets short (aggressive) timeouts for idle connections.
		# keep_connections_open_after_policy_installation: # Keep connections open after policy has been installed even if they are not allowed under the new policy. This overrides the settings in the Connection Persistence page. If you change this property, the change will not affect open connections, but only future connections.
		# match_by_protocol_signature: # A value of true enables matching by the selected protocol's signature - the signature identifies the protocol as genuine. Select this option to limit the port to the specified protocol. If the selected protocol does not support matching by signature, this field cannot be set to true.
		# match_for_any: # Indicates whether this service is used when 'Any' is set as the rule's service and there are several service objects with the same source port and protocol.
		# override_default_settings: # Indicates whether this service is a Data Domain service which has been overridden.
		# port: # The number of the port used to provide this service. To specify a port range, place a hyphen between the lowest and highest port numbers, for example 44-55.
		# protocol: # Select the protocol type associated with the service, and by implication, the management server (if any) that enforces Content Security and Authentication for the service. Selecting a Protocol Type invokes the specific protocol handlers for each protocol type, thus enabling higher level of security by parsing the protocol, and higher level of connectivity by tracking dynamic actions (such as opening of ports).
		# session_timeout: # Time (in seconds) before the session times out.
		# source_port: # Port number for the client side service. If specified, only those Source port Numbers will be Accepted, Dropped, or Rejected during packet inspection. Otherwise, the source port is not inspected.
		# sync_connections_on_cluster: # Enables state-synchronized High Availability or Load Sharing on a ClusterXL or OPSEC-certified cluster.
		# tags: # Collection of tag identifiers.
		# use_default_session_timeout: # Use default virtual session timeout.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# groups: # Collection of group identifiers.
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_service_udp_facts "Get service-udp objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_service_udp_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# show_membership: # Indicates whether to calculate and show "groups" field for every object in reply.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_session_facts "Get session objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_session_facts:
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the descending order by the session publish time. This parameter is relevant only for getting few objects.
		# view_published_sessions: # Show a list of published sessions.
		# details_level: uid|standard|full
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_set_domain "Edit existing object using object name or uid." b
- name: $1
	cp_mgmt_set_domain:
		name: ${2:# Object name.}
		# servers: # Domain servers. When this field is provided, 'set-domain' command is executed asynchronously.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# tags: # Collection of tag identifiers. Note, The list of tags can not be modified in a single command together with the domain servers. To modify tags, please use the separate 'set-domain' command, without providing the list of domain servers.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_set_nat_rule "Edit existing object using object name or uid." b
- name: $1
	cp_mgmt_set_nat_rule:
		# rule_number: # Rule number.
		# package: # Name of the package.
		# enabled: # Enable/Disable the rule.
		# install_on: # Which Gateways identified by the name or UID to install the policy on.
		# method: static|hide|nat64|nat46
		# new_position: # New position in the rulebase.
		# original_destination: # Original destination.
		# original_service: # Original service.
		# original_source: # Original source.
		# translated_destination: # Translated  destination.
		# translated_service: # Translated  service.
		# translated_source: # Translated  source.
		# comments: # Comments string.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_set_session "Edit user's current session." b
- name: $1
	cp_mgmt_set_session:
		# description: # Session description.
		# new_name: # New name of the object.
		# tags: # Collection of tag identifiers.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_show_access_section "Retrieve existing object using object name or uid." b
- name: $1
	cp_mgmt_show_access_section:
		# name: # Object name.
		# layer: # Layer that the rule belongs to identified by the name or UID.
		# details_level: uid|standard|full
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_show_https_section "Retrieve existing HTTPS Inspection section using section name or uid and layer name." b
- name: $1
	cp_mgmt_show_https_section:
		# name: # Object name.
		# layer: # Layer that holds the Object. Identified by the Name or UID.
		# details_level: uid|standard|full
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_show_logs "Showing logs according to the given filter." b
- name: $1
	cp_mgmt_show_logs:
		# new_query: # Running a new query.
		# query_id: # Get the next page of last run query with specified limit.
		# ignore_warnings: # Ignore warnings if exist.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_show_nat_section "Retrieve existing object using object name or uid." b
- name: $1
	cp_mgmt_show_nat_section:
		# name: # Object name.
		# package: # Name of the package.
		# details_level: uid|standard|full
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_show_software_package_details "Gets the software package information from the cloud." b
- name: $1
	cp_mgmt_show_software_package_details:
		# name: # The name of the software package.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_show_task "Show task progress and details." b
- name: $1
	cp_mgmt_show_task:
		# task_id: # Unique identifier of one or more tasks.
		# details_level: uid|standard|full
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_show_tasks "Retrieve all tasks and show their progress and details." b
- name: $1
	cp_mgmt_show_tasks:
		# initiator: # Initiator's name. If name isn't specified, tasks from all initiators will be shown.
		# status: successful|failed|in-progress|all
		# from_date: # The date from which tracking tasks is to be performed, by the task's last update date. ISO 8601. If timezone isn't specified in the input, the Management server's timezone is used.
		# to_date: # The date until which tracking tasks is to be performed, by the task's last update date. ISO 8601. If timezone isn't specified in the input, the Management server's timezone is used.
		# limit: # The maximal number of returned results.
		# offset: # Number of the results to initially skip.
		# order: # Sorts results by the given field. By default the results are sorted in the descending order by the task's last update date.
		# details_level: uid|standard|full
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_simple_gateway "Manages simple-gateway objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_simple_gateway:
		name: ${2:# Object name.}
		# ip_address: # IPv4 or IPv6 address. If both addresses are required use ipv4-address and ipv6-address fields explicitly.
		# ipv4_address: # IPv4 address.
		# ipv6_address: # IPv6 address.
		# anti_bot: # Anti-Bot blade enabled.
		# anti_virus: # Anti-Virus blade enabled.
		# application_control: # Application Control blade enabled.
		# content_awareness: # Content Awareness blade enabled.
		# firewall: # Firewall blade enabled.
		# firewall_settings: # N/A
		# interfaces: # Network interfaces. When a gateway is updated with a new interfaces, the existing interfaces are removed.
		# ips: # Intrusion Prevention System blade enabled.
		# logs_settings: # N/A
		# one_time_password: # N/A
		# os_name: # Gateway platform operating system.
		# save_logs_locally: # Save logs locally on the gateway.
		# send_alerts_to_server: # Server(s) to send alerts to.
		# send_logs_to_backup_server: # Backup server(s) to send logs to.
		# send_logs_to_server: # Server(s) to send logs to.
		# tags: # Collection of tag identifiers.
		# threat_emulation: # Threat Emulation blade enabled.
		# threat_extraction: # Threat Extraction blade enabled.
		# url_filtering: # URL Filtering blade enabled.
		# gateway_version: # Gateway platform version.
		# vpn: # VPN blade enabled.
		# vpn_settings: # Gateway VPN settings.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# groups: # Collection of group identifiers.
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_simple_gateway_facts "Get simple-gateway objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_simple_gateway_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# show_membership: # Indicates whether to calculate and show "groups" field for every object in reply.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_tag "Manages tag objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_tag:
		name: ${2:# Object name.}
		# tags: # Collection of tag identifiers.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_tag_facts "Get tag objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_tag_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_threat_exception "Manages threat-exception objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_threat_exception:
		name: ${2:# The name of the exception.}
		# position: # Position in the rulebase.
		# exception_group_uid: # The UID of the exception-group.
		# exception_group_name: # The name of the exception-group.
		# layer: # Layer that the rule belongs to identified by the name or UID.
		# rule_name: # The name of the parent rule.
		# action: # Action-the enforced profile.
		# destination: # Collection of Network objects identified by the name or UID.
		# destination_negate: # True if negate is set for destination.
		# enabled: # Enable/Disable the rule.
		# install_on: # Which Gateways identified by the name or UID to install the policy on.
		# protected_scope: # Collection of objects defining Protected Scope identified by the name or UID.
		# protected_scope_negate: # True if negate is set for Protected Scope.
		# protection_or_site: # Name of the protection or site.
		# service: # Collection of Network objects identified by the name or UID.
		# service_negate: # True if negate is set for Service.
		# source: # Collection of Network objects identified by the name or UID.
		# source_negate: # True if negate is set for source.
		# track: # Packet tracking.
		# comments: # Comments string.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_threat_exception_facts "Get threat-exception objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_threat_exception_facts:
		# name: # The name of the layer containing the parent threat rule. This parameter is relevant only for getting few objects.
		# exception_group_uid: # The UID of the exception-group.
		# exception_group_name: # The name of the exception-group.
		# layer: # Layer that the rule belongs to identified by the name or UID.
		# rule_name: # The name of the parent rule.
		# details_level: uid|standard|full
		# filter: # Search expression to filter the rulebase. The provided text should be exactly the same as it would be given in Smart Console. The logical operators in the expression ('AND', 'OR') should be provided in capital letters. If an operator is not used, the default OR operator applies.
		# filter_settings: # Sets filter preferences.
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# package: # Name of the package.
		# use_object_dictionary: # N/A
		# dereference_group_members: # Indicates whether to dereference "members" field by details level for every object in reply.
		# show_membership: # Indicates whether to calculate and show "groups" field for every object in reply.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_threat_indicator "Manages threat-indicator objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_threat_indicator:
		name: ${2:# Object name.}
		# observables: # The indicator's observables.
		# observables_raw_data: # The contents of a file containing the indicator's observables.
		# action: Inactive|Ask|Prevent|Detect
		# profile_overrides: # Profiles in which to override the indicator's default action.
		# tags: # Collection of tag identifiers.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_threat_indicator_facts "Get threat-indicator objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_threat_indicator_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_threat_layer "Manages threat-layer objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_threat_layer:
		name: ${2:# Object name.}
		# add_default_rule: # Indicates whether to include a default rule in the new layer.
		# tags: # Collection of tag identifiers.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_threat_layer_facts "Get threat-layer objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_threat_layer_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_threat_profile "Manages threat-profile objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_threat_profile:
		name: ${2:# Object name.}
		# active_protections_performance_impact: high|medium|low|very_low
		# active_protections_severity: Critical|High|Medium or above|Low or above
		# confidence_level_high: Inactive|Ask|Prevent|Detect
		# confidence_level_low: Inactive|Ask|Prevent|Detect
		# confidence_level_medium: Inactive|Ask|Prevent|Detect
		# indicator_overrides: # Indicators whose action will be overridden in this profile.
		# ips_settings: # IPS blade settings.
		# malicious_mail_policy_settings: # Malicious Mail Policy for MTA Gateways.
		# overrides: # Overrides per profile for this protection.
		# tags: # Collection of tag identifiers.
		# use_indicators: # Indicates whether the profile should make use of indicators.
		# anti_bot: # Is Anti-Bot blade activated.
		# anti_virus: # Is Anti-Virus blade activated.
		# ips: # Is IPS blade activated.
		# threat_emulation: # Is Threat Emulation blade activated.
		# activate_protections_by_extended_attributes: # Activate protections by these extended attributes.
		# deactivate_protections_by_extended_attributes: # Deactivate protections by these extended attributes.
		# use_extended_attributes: # Whether to activate/deactivate IPS protections according to the extended attributes.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_threat_profile_facts "Get threat-profile objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_threat_profile_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_threat_protection_override "Edit existing object using object name or uid." b
- name: $1
	cp_mgmt_threat_protection_override:
		# name: # Object name.
		# comments: # Protection comments.
		# follow_up: # Tag the protection with pre-defined follow-up flag.
		# overrides: # Overrides per profile for this protection<br> Note, Remove override for Core protections removes only the action's override. Remove override for Threat Cloud protections removes the action, track and packet captures.
		# details_level: uid|standard|full
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_threat_rule "Manages threat-rule objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_threat_rule:
		name: ${2:# Object name.}
		# position: # Position in the rulebase.
		# layer: # Layer that the rule belongs to identified by the name or UID.
		# action: # Action-the enforced profile.
		# destination: # Collection of Network objects identified by the name or UID.
		# destination_negate: # True if negate is set for destination.
		# enabled: # Enable/Disable the rule.
		# install_on: # Which Gateways identified by the name or UID to install the policy on.
		# protected_scope: # Collection of objects defining Protected Scope identified by the name or UID.
		# protected_scope_negate: # True if negate is set for Protected Scope.
		# service: # Collection of Network objects identified by the name or UID.
		# service_negate: # True if negate is set for Service.
		# source: # Collection of Network objects identified by the name or UID.
		# source_negate: # True if negate is set for source.
		# track: # Packet tracking.
		# track_settings: # Threat rule track settings.
		# comments: # Comments string.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_threat_rule_facts "Get threat-rule objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_threat_rule_facts:
		# name: # Object name. Should be unique in the domain.
		# layer: # Layer that the rule belongs to identified by the name or UID.
		# details_level: uid|standard|full
		# filter: # Search expression to filter the rulebase. The provided text should be exactly the same as it would be given in Smart Console. The logical operators in the expression ('AND', 'OR') should be provided in capital letters. If an operator is not used, the default OR operator applies.
		# filter_settings: # Sets filter preferences.
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# package: # Name of the package.
		# use_object_dictionary: # N/A
		# dereference_group_members: # Indicates whether to dereference "members" field by details level for every object in reply.
		# show_membership: # Indicates whether to calculate and show "groups" field for every object in reply.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_time "Manages time objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_time:
		name: ${2:# Object name.}
		# end: # End time. Note, Each gateway may interpret this time differently according to its time zone.
		# end_never: # End never.
		# hours_ranges: # Hours recurrence. Note, Each gateway may interpret this time differently according to its time zone.
		# start: # Starting time. Note, Each gateway may interpret this time differently according to its time zone.
		# start_now: # Start immediately.
		# tags: # Collection of tag identifiers.
		# recurrence: # Days recurrence.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# groups: # Collection of group identifiers.
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_time_facts "Get time objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_time_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_trusted_client "Manages trusted-client objects on Checkpoint over Web Services API" b
- name: $1
	cp_mgmt_trusted_client:
		name: ${2:# Object name.}
		# ip_address: # IPv4 or IPv6 address. If both addresses are required use ipv4-address and ipv6-address fields explicitly.
		# ipv4_address: # IPv4 address.
		# ipv6_address: # IPv6 address.
		# domains_assignment: # Domains to be added to this profile. Use domain name only. See example below, "add-trusted-client (with domain)".
		# ip_address_first: # First IP address in the range. If both IPv4 and IPv6 address ranges are required, use the ipv4-address-first and the ipv6-address-first fields instead.
		# ipv4_address_first: # First IPv4 address in the range.
		# ipv6_address_first: # First IPv6 address in the range.
		# ip_address_last: # Last IP address in the range. If both IPv4 and IPv6 address ranges are required, use the ipv4-address-first and the ipv6-address-first fields instead.
		# ipv4_address_last: # Last IPv4 address in the range.
		# ipv6_address_last: # Last IPv6 address in the range.
		# mask_length: # IPv4 or IPv6 mask length. If both masks are required use mask-length4 and mask-length6 fields explicitly.
		# mask_length4: # IPv4 mask length.
		# mask_length6: # IPv6 mask length.
		# multi_domain_server_trusted_client: # Let this trusted client connect to all Multi-Domain Servers in the deployment.
		# tags: # Collection of tag identifiers.
		# type: any|domain|ipv4 address|ipv4 address range|ipv4 netmask|ipv6 address|ipv6 address range|ipv6 netmask|name|wild cards (ip only)
		# wild_card: # IP wild card (e.g. 192.0.2.*).
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_trusted_client_facts "Get trusted-client objects facts on Checkpoint over Web Services API" b
- name: $1
	cp_mgmt_trusted_client_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# filter: # Search expression to filter objects by. The provided text should be exactly the same as it would be given in SmartConsole Object Explorer. The logical operators in the expression ('AND', 'OR') should be provided in capital letters. The search involves both a IP search and a textual search in name, comment, tags etc.
		# limit: # The maximal number of returned results. This parameter is relevant only for getting few objects.
		# offset: # Number of the results to initially skip. This parameter is relevant only for getting few objects.
		# order: # Sorts the results by search criteria. Automatically sorts the results by Name, in the ascending order. This parameter is relevant only for getting few objects.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_uninstall_software_package "Uninstalls the software package from target machines." b
- name: $1
	cp_mgmt_uninstall_software_package:
		# name: # The name of the software package.
		# targets: # On what targets to execute this command. Targets may be identified by their name, or object unique identifier.
		# cluster_installation_settings: # Installation settings for cluster.
		# concurrency_limit: # The number of targets, on which the same package is installed at the same time.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_verify_policy "Verifies the policy of the selected package." b
- name: $1
	cp_mgmt_verify_policy:
		# policy_package: # Policy package identified by the name or UID.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_verify_software_package "Verifies the software package on target machines." b
- name: $1
	cp_mgmt_verify_software_package:
		# name: # The name of the software package.
		# targets: # On what targets to execute this command. Targets may be identified by their name, or object unique identifier.
		# concurrency_limit: # The number of targets, on which the same package is installed at the same time.
		# download_package: # NOTE, Supported from Check Point version R81
		# download_package_from: automatic|central|target-machine
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_vpn_community_meshed "Manages vpn-community-meshed objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_vpn_community_meshed:
		name: ${2:# Object name.}
		# encryption_method: prefer ikev2 but support ikev1|ikev2 only|ikev1 for ipv4 and ikev2 for ipv6 only
		# encryption_suite: suite-b-gcm-256|custom|vpn b|vpn a|suite-b-gcm-128
		# gateways: # Collection of Gateway objects identified by the name or UID.
		# ike_phase_1: # Ike Phase 1 settings. Only applicable when the encryption-suite is set to [custom].
		# ike_phase_2: # Ike Phase 2 settings. Only applicable when the encryption-suite is set to [custom].
		# shared_secrets: # Shared secrets for external gateways.
		# tags: # Collection of tag identifiers.
		# use_shared_secret: # Indicates whether the shared secret should be used for all external gateways.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_vpn_community_meshed_facts "Get vpn-community-meshed objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_vpn_community_meshed_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_vpn_community_star "Manages vpn-community-star objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_vpn_community_star:
		name: ${2:# Object name.}
		# center_gateways: # Collection of Gateway objects representing center gateways identified by the name or UID.
		# encryption_method: prefer ikev2 but support ikev1|ikev2 only|ikev1 for ipv4 and ikev2 for ipv6 only
		# encryption_suite: suite-b-gcm-256|custom|vpn b|vpn a|suite-b-gcm-128
		# ike_phase_1: # Ike Phase 1 settings. Only applicable when the encryption-suite is set to [custom].
		# ike_phase_2: # Ike Phase 2 settings. Only applicable when the encryption-suite is set to [custom].
		# mesh_center_gateways: # Indicates whether the meshed community is in center.
		# satellite_gateways: # Collection of Gateway objects representing satellite gateways identified by the name or UID.
		# shared_secrets: # Shared secrets for external gateways.
		# tags: # Collection of tag identifiers.
		# use_shared_secret: # Indicates whether the shared secret should be used for all external gateways.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_vpn_community_star_facts "Get vpn-community-star objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_vpn_community_star_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_wildcard "Manages wildcard objects on Check Point over Web Services API" b
- name: $1
	cp_mgmt_wildcard:
		name: ${2:# Object name.}
		# ipv4_address: # IPv4 address.
		# ipv4_mask_wildcard: # IPv4 mask wildcard.
		# ipv6_address: # IPv6 address.
		# ipv6_mask_wildcard: # IPv6 mask wildcard.
		# tags: # Collection of tag identifiers.
		# color: aquamarine|black|blue|crete blue|burlywood|cyan|dark green|khaki|orchid|dark orange|dark sea green|pink|turquoise|dark blue|firebrick|brown|forest green|gold|dark gold|gray|dark gray|light green|lemon chiffon|coral|sea green|sky blue|magenta|purple|slate blue|violet red|navy blue|olive|orange|red|sienna|yellow
		# comments: # Comments string.
		# details_level: uid|standard|full
		# groups: # Collection of group identifiers.
		# ignore_warnings: # Apply changes ignoring warnings.
		# ignore_errors: # Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
		# state: #present|absent
		# auto_publish_session: # Publish the current session if changes have been performed after task completes.
		# wait_for_task: yes
		# wait_for_task_timeout: 30
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet cp_mgmt_wildcard_facts "Get wildcard objects facts on Check Point over Web Services API" b
- name: $1
	cp_mgmt_wildcard_facts:
		# name: # Object name. This parameter is relevant only for getting a specific object.
		# details_level: uid|standard|full
		# limit: # No more than that many results will be returned. This parameter is relevant only for getting few objects.
		# offset: # Skip that many results before beginning to return them. This parameter is relevant only for getting few objects.
		# order: # Sorts results by the given field. By default the results are sorted in the ascending order by name. This parameter is relevant only for getting few objects.
		# version: # Version of checkpoint. If not given one, the latest version taken.
$0
endsnippet

snippet win_chocolatey "Manage packages using chocolatey" b
- name: $1
	win_chocolatey:
		name: ${2:# Name of the package(s) to be installed.}
		# allow_empty_checksums: no
		# allow_multiple: no
		# allow_prerelease: no
		# architecture: #default|x86
		# force: no
		# ignore_checksums: no
		# ignore_dependencies: no
		# remove_dependencies: no
		# install_args: # Arguments to pass to the native installer.
		# override_args: no
		# package_params: # Parameters to pass to the package.
		# choco_args: # Additional parameters to pass to choco.exe
		# pinned: # Whether to pin the Chocolatey package or not.
		# proxy_url: # Proxy URL used to install chocolatey and the package.
		# proxy_username: # Proxy username used to install Chocolatey and the package.
		# proxy_password: # Proxy password used to install Chocolatey and the package.
		# skip_scripts: no
		# source: # Specify the source to retrieve the package from.
		# source_username: # A username to use with I(source) when accessing a feed that requires authentication.
		# source_password: # The password for I(source_username).
		# state: absent|downgrade|upgrade|latest|#present|reinstalled
		# timeout: 2700
		# validate_certs: yes
		# version: # Specific version of the package to be installed.
$0
endsnippet

snippet win_chocolatey_config "Manages Chocolatey config settings" b
- name: $1
	win_chocolatey_config:
		name: ${2:# The name of the config setting to manage.}
		# state: absent|#present
		# value: # Used when C(state=present) that contains the value to set for the config setting.
$0
endsnippet

snippet win_chocolatey_facts "Create a facts collection for Chocolatey" b
- name: $1
$0
endsnippet

snippet win_chocolatey_feature "Manages Chocolatey features" b
- name: $1
	win_chocolatey_feature:
		name: ${2:# The name of the feature to manage.}
		# state: disabled|#enabled
$0
endsnippet

snippet win_chocolatey_source "Manages Chocolatey sources" b
- name: $1
	win_chocolatey_source:
		name: ${2:# The name of the source to configure.}
		# admin_only: # Makes the source visible to Administrators only.
		# allow_self_service: # Allow the source to be used with self-service
		# bypass_proxy: # Bypass the proxy when using this source.
		# certificate: # The path to a .pfx file to use for X509 authenticated feeds.
		# certificate_password: # The password for I(certificate) if required.
		# priority: # The priority order of this source compared to other sources, lower is better.
		# source: # The file/folder/url of the source.
		# source_username: # The username used to access I(source).
		# source_password: # The password for I(source_username).
		# state: absent|disabled|#present
		# update_password: #always|on_create
$0
endsnippet

snippet aci_bd_dhcp_label "Manage DHCP Labels (dhcp:Lbl)" b
- name: $1
	aci_bd_dhcp_label:
		host: ${2:# IP Address or hostname of APIC resolvable by Ansible control host.}
		# bd: # The name of the Bridge Domain.
		# description: # The description for the DHCP Label.
		# dhcp_label: # The name of the DHCP Relay Label.
		# dhcp_option: # Name of the DHCP Option Policy to be associated with the DCHP Relay Policy. This policy need to be present in the same tenant as the bridge domain.
		# scope: #infra|tenant
		# tenant: # The name of the Tenant.
		# state: absent|#present|query
		# port: # Port number to be used for REST connection.
		# username: admin
		# password: # The password to use for authentication.
		# private_key: # Either a PEM-formatted private key file or the private key content used for signature-based authentication.
		# certificate_name: # The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: yes
		# use_ssl: yes
		# validate_certs: yes
		# output_path: # Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.
		# annotation: # User-defined string for annotating an object.
		# owner_key: # User-defined string for the ownerKey attribute of an ACI object.
		# owner_tag: # User-defined string for the ownerTag attribute of an ACI object.
$0
endsnippet

snippet aci_fabric_scheduler "This modules creates ACI schedulers." b
- name: $1
	aci_fabric_scheduler:
		host: ${2:# IP Address or hostname of APIC resolvable by Ansible control host.}
		# name: # The name of the Scheduler.
		# description: # Description for the Scheduler.
		# recurring: # If you want to make the Scheduler a recurring it would be a "True" and for a oneTime execution it would be "False". For a shell just exclude this option from the task
		# windowname: # This is the name for your what recurring or oneTime execution
		# concurCap: # This is the amount of devices that can be executed on at a time
		# maxTime: # This is the amount MAX amount of time a process can be executed
		# date: # This is the date and time that the scheduler will execute
		# hour: # This set the hour of execution
		# minute: # This sets the minute of execution, used in conjunction with hour
		# day: Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday|even-day|odd-day|#every-day
		# state: absent|#present|query
		# name_alias: # The alias for the current object. This relates to the nameAlias field in ACI.
		# port: # Port number to be used for REST connection.
		# username: admin
		# password: # The password to use for authentication.
		# private_key: # Either a PEM-formatted private key file or the private key content used for signature-based authentication.
		# certificate_name: # The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: yes
		# use_ssl: yes
		# validate_certs: yes
		# output_path: # Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.
		# annotation: # User-defined string for annotating an object.
		# owner_key: # User-defined string for the ownerKey attribute of an ACI object.
		# owner_tag: # User-defined string for the ownerTag attribute of an ACI object.
$0
endsnippet

snippet aci_firmware_group "This module creates a firmware group" b
- name: $1
	aci_firmware_group:
		host: ${2:# IP Address or hostname of APIC resolvable by Ansible control host.}
		# group: # This the name of the firmware group
		# firmwarepol: # This is the name of the firmware policy, which was create by aci_firmware_policy. It is important that
		# state: absent|#present|query
		# name_alias: # The alias for the current object. This relates to the nameAlias field in ACI.
		# port: # Port number to be used for REST connection.
		# username: admin
		# password: # The password to use for authentication.
		# private_key: # Either a PEM-formatted private key file or the private key content used for signature-based authentication.
		# certificate_name: # The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: yes
		# use_ssl: yes
		# validate_certs: yes
		# output_path: # Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.
		# annotation: # User-defined string for annotating an object.
		# owner_key: # User-defined string for the ownerKey attribute of an ACI object.
		# owner_tag: # User-defined string for the ownerTag attribute of an ACI object.
$0
endsnippet

snippet aci_firmware_group_node "This modules adds and remove nodes from the firmware group" b
- name: $1
	aci_firmware_group_node:
		host: ${2:# IP Address or hostname of APIC resolvable by Ansible control host.}
		# group: # This is the name of the firmware group
		# node: # The node to be added to the firmware group - the value equals the NodeID
		# state: absent|#present|query
		# name_alias: # The alias for the current object. This relates to the nameAlias field in ACI.
		# port: # Port number to be used for REST connection.
		# username: admin
		# password: # The password to use for authentication.
		# private_key: # Either a PEM-formatted private key file or the private key content used for signature-based authentication.
		# certificate_name: # The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: yes
		# use_ssl: yes
		# validate_certs: yes
		# output_path: # Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.
		# annotation: # User-defined string for annotating an object.
		# owner_key: # User-defined string for the ownerKey attribute of an ACI object.
		# owner_tag: # User-defined string for the ownerTag attribute of an ACI object.
$0
endsnippet

snippet aci_firmware_policy "This creates a firmware policy" b
- name: $1
	aci_firmware_policy:
		host: ${2:# IP Address or hostname of APIC resolvable by Ansible control host.}
		# name: # Name of the firmware policy
		# version: # The version of the firmware associated with this policy. This value is very import as well as constructing
		# ignoreCompat: # Check if compatibility checks should be ignored
		# state: absent|#present|query
		# name_alias: # The alias for the current object. This relates to the nameAlias field in ACI.
		# port: # Port number to be used for REST connection.
		# username: admin
		# password: # The password to use for authentication.
		# private_key: # Either a PEM-formatted private key file or the private key content used for signature-based authentication.
		# certificate_name: # The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: yes
		# use_ssl: yes
		# validate_certs: yes
		# output_path: # Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.
		# annotation: # User-defined string for annotating an object.
		# owner_key: # User-defined string for the ownerKey attribute of an ACI object.
		# owner_tag: # User-defined string for the ownerTag attribute of an ACI object.
$0
endsnippet

snippet aci_interface_policy_cdp "Manage CDP interface policies (cdp:IfPol)" b
- name: $1
	aci_interface_policy_cdp:
		host: ${2:# IP Address or hostname of APIC resolvable by Ansible control host.}
		# cdp_policy: # The CDP interface policy name.
		# description: # The description for the CDP interface policy name.
		# admin_state: # Enable or Disable CDP state.
		# state: absent|#present|query
		# name_alias: # The alias for the current object. This relates to the nameAlias field in ACI.
		# port: # Port number to be used for REST connection.
		# username: admin
		# password: # The password to use for authentication.
		# private_key: # Either a PEM-formatted private key file or the private key content used for signature-based authentication.
		# certificate_name: # The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: yes
		# use_ssl: yes
		# validate_certs: yes
		# output_path: # Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.
		# annotation: # User-defined string for annotating an object.
		# owner_key: # User-defined string for the ownerKey attribute of an ACI object.
		# owner_tag: # User-defined string for the ownerTag attribute of an ACI object.
$0
endsnippet

snippet aci_l2out "Manage Layer2 Out (L2Out) objects." b
- name: $1
	aci_l2out:
		host: ${2:# IP Address or hostname of APIC resolvable by Ansible control host.}
		# tenant: # Name of an existing tenant.
		# l2out: # The name of outer layer2.
		# description: # Description for the L2Out.
		# bd: # Name of the Bridge domain which is associted with the L2Out.
		# domain: # Name of the external L2 Domain that is being associated with L2Out.
		# vlan: # The VLAN which is being associated with the L2Out.
		# state: absent|#present|query
		# name_alias: # The alias for the current object. This relates to the nameAlias field in ACI.
		# port: # Port number to be used for REST connection.
		# username: admin
		# password: # The password to use for authentication.
		# private_key: # Either a PEM-formatted private key file or the private key content used for signature-based authentication.
		# certificate_name: # The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: yes
		# use_ssl: yes
		# validate_certs: yes
		# output_path: # Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.
		# annotation: # User-defined string for annotating an object.
		# owner_key: # User-defined string for the ownerKey attribute of an ACI object.
		# owner_tag: # User-defined string for the ownerTag attribute of an ACI object.
$0
endsnippet

snippet aci_l2out_extepg "Manage External Network Instance (L2Out External EPG) objects (l2extInstP)." b
- name: $1
	aci_l2out_extepg:
		host: ${2:# IP Address or hostname of APIC resolvable by Ansible control host.}
		# tenant: # Name of existing tenant.
		# l2out: # Name of the l2out.
		# extepg: # Name of the external end point group.
		# description: # Description for the l2out.
		# preferred_group: # This depicts whether this External EPG is part of the Preferred Group and can communicate without contracts.
		# qos_class: level1|level2|level3|level4|level5|level6|Unspecified
		# state: absent|#present|query
		# port: # Port number to be used for REST connection.
		# username: admin
		# password: # The password to use for authentication.
		# private_key: # Either a PEM-formatted private key file or the private key content used for signature-based authentication.
		# certificate_name: # The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: yes
		# use_ssl: yes
		# validate_certs: yes
		# output_path: # Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.
		# annotation: # User-defined string for annotating an object.
		# owner_key: # User-defined string for the ownerKey attribute of an ACI object.
		# owner_tag: # User-defined string for the ownerTag attribute of an ACI object.
$0
endsnippet

snippet aci_l2out_extepg_to_contract "Bind Contracts to L2 External End Point Groups (EPGs)" b
- name: $1
	aci_l2out_extepg_to_contract:
		contract_type: ${2:consumer|provider}
		host: ${3:# IP Address or hostname of APIC resolvable by Ansible control host.}
		# tenant: # Name of existing tenant.
		# l2out: # Name of the l2out.
		# extepg: # Name of the external end point group.
		# contract: # Name of the contract.
		# priority: level1|level2|level3|unspecified
		# provider_match: all|at_least_one|at_most_one|none
		# state: absent|#present|query
		# port: # Port number to be used for REST connection.
		# username: admin
		# password: # The password to use for authentication.
		# private_key: # Either a PEM-formatted private key file or the private key content used for signature-based authentication.
		# certificate_name: # The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: yes
		# use_ssl: yes
		# validate_certs: yes
		# output_path: # Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.
		# annotation: # User-defined string for annotating an object.
		# owner_key: # User-defined string for the ownerKey attribute of an ACI object.
		# owner_tag: # User-defined string for the ownerTag attribute of an ACI object.
$0
endsnippet

snippet aci_l2out_logical_interface_path "Manage Layer 2 Outside (L2Out) logical interface path (l2extRsPathL2OutAtt)" b
- name: $1
	aci_l2out_logical_interface_path:
		host: ${2:# IP Address or hostname of APIC resolvable by Ansible control host.}
		# tenant: # Name of an existing tenant.
		# l2out: # Name of an existing L2Out.
		# node_profile: # Name of the node profile.
		# interface_profile: # Name of the interface profile.
		# interface_type: #switch_port|port_channel|vpc
		# pod_id: # The pod number part of the tDn.
		# leaves: # The switch ID(s) that the C(interface) belongs to.
		# interface: # The C(interface) string value part of the tDn.
		# state: absent|#present|query
		# port: # Port number to be used for REST connection.
		# username: admin
		# password: # The password to use for authentication.
		# private_key: # Either a PEM-formatted private key file or the private key content used for signature-based authentication.
		# certificate_name: # The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: yes
		# use_ssl: yes
		# validate_certs: yes
		# output_path: # Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.
		# annotation: # User-defined string for annotating an object.
		# owner_key: # User-defined string for the ownerKey attribute of an ACI object.
		# owner_tag: # User-defined string for the ownerTag attribute of an ACI object.
$0
endsnippet

snippet aci_l2out_logical_interface_profile "Manage Layer 2 Outside (L2Out) interface profiles (l2ext:LIfP)" b
- name: $1
	aci_l2out_logical_interface_profile:
		host: ${2:# IP Address or hostname of APIC resolvable by Ansible control host.}
		# tenant: # Name of an existing tenant.
		# l2out: # Name of an existing L2Out.
		# node_profile: default
		# interface_profile: # Name of the interface profile.
		# state: absent|#present|query
		# port: # Port number to be used for REST connection.
		# username: admin
		# password: # The password to use for authentication.
		# private_key: # Either a PEM-formatted private key file or the private key content used for signature-based authentication.
		# certificate_name: # The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: yes
		# use_ssl: yes
		# validate_certs: yes
		# output_path: # Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.
		# annotation: # User-defined string for annotating an object.
		# owner_key: # User-defined string for the ownerKey attribute of an ACI object.
		# owner_tag: # User-defined string for the ownerTag attribute of an ACI object.
$0
endsnippet

snippet aci_l2out_logical_node_profile "Manage Layer 2 Outside (L2Out) logical node profiles (l2ext:LNodeP)" b
- name: $1
	aci_l2out_logical_node_profile:
		host: ${2:# IP Address or hostname of APIC resolvable by Ansible control host.}
		# tenant: # Name of an existing tenant.
		# l2out: # Name of an existing L2Out.
		# node_profile: # Name of the node profile.
		# state: absent|#present|query
		# port: # Port number to be used for REST connection.
		# username: admin
		# password: # The password to use for authentication.
		# private_key: # Either a PEM-formatted private key file or the private key content used for signature-based authentication.
		# certificate_name: # The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: yes
		# use_ssl: yes
		# validate_certs: yes
		# output_path: # Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.
		# annotation: # User-defined string for annotating an object.
		# owner_key: # User-defined string for the ownerKey attribute of an ACI object.
		# owner_tag: # User-defined string for the ownerTag attribute of an ACI object.
$0
endsnippet

snippet aci_l3out_bgp_peer "Manage Layer 3 Outside (L3Out) BGP Peers (bgp:PeerP)" b
- name: $1
	aci_l3out_bgp_peer:
		tenant: ${2:# Name of an existing tenant.}
		l3out: ${3:# Name of an existing L3Out.}
		node_profile: ${4:# Name of the node profile.}
		interface_profile: ${5:# Name of the interface profile.}
		pod_id: ${6:# Pod to build the interface on.}
		node_id: ${7:# Node to build the interface on for Port-channels and single ports.}
		path_ep: ${8:# Path to interface}
		peer_ip: ${9:# IP address of the BGP peer.}
		host: ${10:# IP Address or hostname of APIC resolvable by Ansible control host.}
		# remote_asn: # Autonomous System Number of the BGP peer.
		# bgp_controls: send-com|send-ext-com|allow-self-as|as-override|dis-peer-as-check|nh-self
		# peer_controls: bfd|dis-conn-check
		# address_type_controls: af-ucast|af-mcast
		# private_asn_controls: remove-exclusive|remove-all|replace-as
		# ttl: # eBGP Multihop Time To Live
		# weight: # Weight for BGP routes from this neighbor
		# admin_state: enabled|disabled
		# allow_self_as_count: # Number of allowed self AS.
		# state: absent|#present|query
		# port: # Port number to be used for REST connection.
		# username: admin
		# password: # The password to use for authentication.
		# private_key: # Either a PEM-formatted private key file or the private key content used for signature-based authentication.
		# certificate_name: # The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: yes
		# use_ssl: yes
		# validate_certs: yes
		# output_path: # Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.
		# annotation: # User-defined string for annotating an object.
		# owner_key: # User-defined string for the ownerKey attribute of an ACI object.
		# owner_tag: # User-defined string for the ownerTag attribute of an ACI object.
$0
endsnippet

snippet aci_l3out_extepg_to_contract "Bind Contracts to External End Point Groups (EPGs)" b
- name: $1
	aci_l3out_extepg_to_contract:
		contract_type: ${2:consumer|provider}
		host: ${3:# IP Address or hostname of APIC resolvable by Ansible control host.}
		# tenant: # Name of existing tenant.
		# l3out: # Name of the l3out.
		# extepg: # Name of the external end point group.
		# contract: # Name of the contract.
		# priority: level1|level2|level3|unspecified
		# provider_match: all|at_least_one|at_most_one|none
		# state: absent|#present|query
		# port: # Port number to be used for REST connection.
		# username: admin
		# password: # The password to use for authentication.
		# private_key: # Either a PEM-formatted private key file or the private key content used for signature-based authentication.
		# certificate_name: # The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: yes
		# use_ssl: yes
		# validate_certs: yes
		# output_path: # Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.
		# annotation: # User-defined string for annotating an object.
		# owner_key: # User-defined string for the ownerKey attribute of an ACI object.
		# owner_tag: # User-defined string for the ownerTag attribute of an ACI object.
$0
endsnippet

snippet aci_l3out_interface "Manage Layer 3 Outside (L3Out) interfaces (l3ext:RsPathL3OutAtt)" b
- name: $1
	aci_l3out_interface:
		tenant: ${2:# Name of an existing tenant.}
		l3out: ${3:# Name of an existing L3Out.}
		node_profile: ${4:# Name of the node profile.}
		interface_profile: ${5:# Name of the interface profile.}
		pod_id: ${6:# Pod to build the interface on.}
		node_id: ${7:# Node to build the interface on for Port-channels and single ports.}
		path_ep: ${8:# Path to interface}
		host: ${9:# IP Address or hostname of APIC resolvable by Ansible control host.}
		# encap: # encapsulation on the interface (e.g. "vlan-500")
		# addr: # IP address.
		# interface_type: l3-port|sub-interface|ext-svi
		# mode: regular|native|untagged
		# state: absent|#present|query
		# port: # Port number to be used for REST connection.
		# username: admin
		# password: # The password to use for authentication.
		# private_key: # Either a PEM-formatted private key file or the private key content used for signature-based authentication.
		# certificate_name: # The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: yes
		# use_ssl: yes
		# validate_certs: yes
		# output_path: # Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.
		# annotation: # User-defined string for annotating an object.
		# owner_key: # User-defined string for the ownerKey attribute of an ACI object.
		# owner_tag: # User-defined string for the ownerTag attribute of an ACI object.
$0
endsnippet

snippet aci_l3out_logical_interface_profile "Manage Layer 3 Outside (L3Out) logical interface profiles (l3ext:LIfP)" b
- name: $1
	aci_l3out_logical_interface_profile:
		host: ${2:# IP Address or hostname of APIC resolvable by Ansible control host.}
		# tenant: # Name of an existing tenant.
		# l3out: # Name of an existing L3Out.
		# node_profile: # Name of the node profile.
		# interface_profile: # Name of the interface profile.
		# nd_policy: # Name of the neighbor discovery interface policy.
		# egress_dpp_policy: # Name of the egress data plane policing policy.
		# ingress_dpp_policy: # Name of the ingress data plane policing policy.
		# state: absent|#present|query
		# port: # Port number to be used for REST connection.
		# username: admin
		# password: # The password to use for authentication.
		# private_key: # Either a PEM-formatted private key file or the private key content used for signature-based authentication.
		# certificate_name: # The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: yes
		# use_ssl: yes
		# validate_certs: yes
		# output_path: # Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.
		# annotation: # User-defined string for annotating an object.
		# owner_key: # User-defined string for the ownerKey attribute of an ACI object.
		# owner_tag: # User-defined string for the ownerTag attribute of an ACI object.
$0
endsnippet

snippet aci_l3out_logical_node "Manage Layer 3 Outside (L3Out) logical node profile nodes (l3ext:RsNodeL3OutAtt)" b
- name: $1
	aci_l3out_logical_node:
		host: ${2:# IP Address or hostname of APIC resolvable by Ansible control host.}
		# tenant: # Name of an existing tenant.
		# l3out: # Name of an existing L3Out.
		# node_profile: # Name of the node profile.
		# pod_id: # Existing podId.
		# node_id: # Existing nodeId.
		# router_id: # Router ID in dotted decimal notation.
		# router_id_as_loopback: #yes|no
		# state: absent|#present|query
		# port: # Port number to be used for REST connection.
		# username: admin
		# password: # The password to use for authentication.
		# private_key: # Either a PEM-formatted private key file or the private key content used for signature-based authentication.
		# certificate_name: # The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: yes
		# use_ssl: yes
		# validate_certs: yes
		# output_path: # Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.
		# annotation: # User-defined string for annotating an object.
		# owner_key: # User-defined string for the ownerKey attribute of an ACI object.
		# owner_tag: # User-defined string for the ownerTag attribute of an ACI object.
$0
endsnippet

snippet aci_l3out_logical_node_profile "Manage Layer 3 Outside (L3Out) logical node profiles (l3extLNodeP:lnodep)" b
- name: $1
	aci_l3out_logical_node_profile:
		host: ${2:# IP Address or hostname of APIC resolvable by Ansible control host.}
		# node_profile: # Name of the node profile.
		# description: # Description for the node profile.
		# tenant: # Name of an existing tenant.
		# l3out: # Name of an existing L3Out.
		# dscp: AF11|AF12|AF13|AF21|AF22|AF23|AF31|AF32|AF33|AF41|AF42|AF43|CS0|CS1|CS2|CS3|CS4|CS5|CS6|CS7|EF|VA|unspecified
		# state: absent|#present|query
		# name_alias: # The alias for the current object. This relates to the nameAlias field in ACI.
		# port: # Port number to be used for REST connection.
		# username: admin
		# password: # The password to use for authentication.
		# private_key: # Either a PEM-formatted private key file or the private key content used for signature-based authentication.
		# certificate_name: # The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: yes
		# use_ssl: yes
		# validate_certs: yes
		# output_path: # Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.
		# annotation: # User-defined string for annotating an object.
		# owner_key: # User-defined string for the ownerKey attribute of an ACI object.
		# owner_tag: # User-defined string for the ownerTag attribute of an ACI object.
$0
endsnippet

snippet aci_l3out_static_routes_nexthop "Manage nexthops for static routes (ip:NexthopP)" b
- name: $1
	aci_l3out_static_routes_nexthop:
		host: ${2:# IP Address or hostname of APIC resolvable by Ansible control host.}
		# tenant: # Name of an existing tenant.
		# l3out: # Name of an existing L3Out.
		# node_profile: # Name of the node profile.
		# pod_id: # Existing podId.
		# node_id: # Existing nodeId.
		# prefix: # The IP prefix
		# nexthop: # The nexthop for the prefix
		# state: absent|#present|query
		# port: # Port number to be used for REST connection.
		# username: admin
		# password: # The password to use for authentication.
		# private_key: # Either a PEM-formatted private key file or the private key content used for signature-based authentication.
		# certificate_name: # The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: yes
		# use_ssl: yes
		# validate_certs: yes
		# output_path: # Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.
		# annotation: # User-defined string for annotating an object.
		# owner_key: # User-defined string for the ownerKey attribute of an ACI object.
		# owner_tag: # User-defined string for the ownerTag attribute of an ACI object.
$0
endsnippet

snippet aci_maintenance_group "This creates an ACI maintenance group" b
- name: $1
	aci_maintenance_group:
		host: ${2:# IP Address or hostname of APIC resolvable by Ansible control host.}
		# group: # This is the name of the group
		# policy: # This is the name of the policy that was created using aci_maintenance_policy
		# state: absent|#present|query
		# name_alias: # The alias for the current object. This relates to the nameAlias field in ACI.
		# port: # Port number to be used for REST connection.
		# username: admin
		# password: # The password to use for authentication.
		# private_key: # Either a PEM-formatted private key file or the private key content used for signature-based authentication.
		# certificate_name: # The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: yes
		# use_ssl: yes
		# validate_certs: yes
		# output_path: # Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.
		# annotation: # User-defined string for annotating an object.
		# owner_key: # User-defined string for the ownerKey attribute of an ACI object.
		# owner_tag: # User-defined string for the ownerTag attribute of an ACI object.
$0
endsnippet

snippet aci_maintenance_group_node "Manage maintenance group nodes" b
- name: $1
	aci_maintenance_group_node:
		host: ${2:# IP Address or hostname of APIC resolvable by Ansible control host.}
		# group: # The maintenance group name that you want to add the node to.
		# node: # The node to be added to the maintenance group.
		# state: absent|#present|query
		# name_alias: # The alias for the current object. This relates to the nameAlias field in ACI.
		# port: # Port number to be used for REST connection.
		# username: admin
		# password: # The password to use for authentication.
		# private_key: # Either a PEM-formatted private key file or the private key content used for signature-based authentication.
		# certificate_name: # The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: yes
		# use_ssl: yes
		# validate_certs: yes
		# output_path: # Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.
		# annotation: # User-defined string for annotating an object.
		# owner_key: # User-defined string for the ownerKey attribute of an ACI object.
		# owner_tag: # User-defined string for the ownerTag attribute of an ACI object.
$0
endsnippet

snippet aci_maintenance_policy "Manage firmware maintenance policies" b
- name: $1
	aci_maintenance_policy:
		host: ${2:# IP Address or hostname of APIC resolvable by Ansible control host.}
		# name: # The name for the maintenance policy.
		# runmode: #pauseOnlyOnFailures|pauseNever
		# graceful: # Whether the system will bring down the nodes gracefully during an upgrade, which reduces traffic lost.
		# scheduler: # The name of scheduler that is applied to the policy.
		# adminst: triggered|#untriggered
		# ignoreCompat: # To check whether compatibility checks should be ignored
		# state: absent|#present|query
		# name_alias: # The alias for the current object. This relates to the nameAlias field in ACI.
		# port: # Port number to be used for REST connection.
		# username: admin
		# password: # The password to use for authentication.
		# private_key: # Either a PEM-formatted private key file or the private key content used for signature-based authentication.
		# certificate_name: # The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: yes
		# use_ssl: yes
		# validate_certs: yes
		# output_path: # Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.
		# annotation: # User-defined string for annotating an object.
		# owner_key: # User-defined string for the ownerKey attribute of an ACI object.
		# owner_tag: # User-defined string for the ownerTag attribute of an ACI object.
$0
endsnippet

snippet aci_vmm_controller "Manage VMM Controller for virtual domains profiles (vmm:CtrlrP)" b
- name: $1
	aci_vmm_controller:
		host: ${2:# IP Address or hostname of APIC resolvable by Ansible control host.}
		# name: # Name of VMM Controller.
		# controller_hostname: # Hostname or IP of the controller.
		# dvs_version: unmanaged|5.1|5.5|6.0|6.5|6.6|7.0
		# stats_collection: enabled|#disabled
		# domain: # Name of the virtual domain profile.
		# state: absent|#present|query
		# credentials: # Name of the VMM credentials to be used
		# inband_management_epg: # Name of the management EPG to be used by the controller. Only supports in-band management EPGs for now.
		# name_alias: # The alias for the current object. This relates to the nameAlias field in ACI.
		# datacenter: # Name of the data center, as seen in vCenter
		# vm_provider: cloudfoundry|kubernetes|microsoft|openshift|openstack|redhat|vmware
		# port: # Port number to be used for REST connection.
		# username: admin
		# password: # The password to use for authentication.
		# private_key: # Either a PEM-formatted private key file or the private key content used for signature-based authentication.
		# certificate_name: # The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: yes
		# use_ssl: yes
		# validate_certs: yes
		# output_path: # Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.
		# annotation: # User-defined string for annotating an object.
		# owner_key: # User-defined string for the ownerKey attribute of an ACI object.
		# owner_tag: # User-defined string for the ownerTag attribute of an ACI object.
$0
endsnippet

snippet aci_vmm_credential "Manage virtual domain credential profiles (vmm:UsrAccP)" b
- name: $1
	aci_vmm_credential:
		host: ${2:# IP Address or hostname of APIC resolvable by Ansible control host.}
		# name: # Name of the credential profile.
		# credential_password: # VMM controller password.
		# credential_username: # VMM controller username.
		# description: # Description for the tenant.
		# domain: # Name of the virtual domain profile.
		# state: absent|#present|query
		# name_alias: # The alias for the current object. This relates to the nameAlias field in ACI.
		# vm_provider: cloudfoundry|kubernetes|microsoft|openshift|openstack|redhat|vmware
		# port: # Port number to be used for REST connection.
		# username: admin
		# password: # The password to use for authentication.
		# private_key: # Either a PEM-formatted private key file or the private key content used for signature-based authentication.
		# certificate_name: # The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: yes
		# use_ssl: yes
		# validate_certs: yes
		# output_path: # Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.
		# annotation: # User-defined string for annotating an object.
		# owner_key: # User-defined string for the ownerKey attribute of an ACI object.
		# owner_tag: # User-defined string for the ownerTag attribute of an ACI object.
$0
endsnippet

snippet aci_vmm_vswitch_policy "Manage vSwitch policy for VMware virtual domains profiles (vmm:DomP)" b
- name: $1
	aci_vmm_vswitch_policy:
		host: ${2:# IP Address or hostname of APIC resolvable by Ansible control host.}
		# port_channel_policy: # Name of the fabric access port-channel policy.
		# lldp_policy: # Name of the fabric access LLDP policy.
		# cdp_policy: # Name of the fabric access CDP policy.
		# mtu_policy: # VMWare only.
		# domain: # Name of the virtual domain profile.
		# enhanced_lag: # List of enhanced LAG policies if vSwitch needs to be connected via VPC.
		# stp_policy: # SCVMM only.
		# netflow_exporter: # Parameters for the netflow exporter policy
		# state: absent|#present|query
		# vm_provider: cloudfoundry|kubernetes|microsoft|openshift|openstack|redhat|vmware
		# port: # Port number to be used for REST connection.
		# username: admin
		# password: # The password to use for authentication.
		# private_key: # Either a PEM-formatted private key file or the private key content used for signature-based authentication.
		# certificate_name: # The X.509 certificate name attached to the APIC AAA user used for signature-based authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: yes
		# use_ssl: yes
		# validate_certs: yes
		# output_path: # Path to a file that will be used to dump the ACI JSON configuration objects generated by the module.
		# annotation: # User-defined string for annotating an object.
		# owner_key: # User-defined string for the ownerKey attribute of an ACI object.
		# owner_tag: # User-defined string for the ownerTag attribute of an ACI object.
$0
endsnippet

snippet intersight_boot_order_policy "Boot Order policy configuration for Cisco Intersight" b
- name: $1
	intersight_boot_order_policy:
		name: ${2:# The name assigned to the Boot Order policy.}
		api_private_key: ${3:# Filename (absolute path) or string of PEM formatted private key data to be used for Intersight API authentication.}
		api_key_id: ${4:# Public API Key ID associated with the private key.}
		# state: #present|absent
		# organization: default
		# tags: # List of tags in Key:<user-defined key> Value:<user-defined value> format.
		# description: # The user-defined description of the Boot Order policy.
		# configured_boot_mode: #Legacy|Uefi
		# uefi_enable_secure_boot: no
		# boot_devices: # List of Boot Devices configured on the endpoint.
		# api_uri: https://intersight.com/api/v1
		# validate_certs: yes
		# use_proxy: yes
$0
endsnippet

snippet intersight_imc_access_policy "IMC Access Policy configuration for Cisco Intersight" b
- name: $1
	intersight_imc_access_policy:
		name: ${2:# The name assigned to the IMC Access Policy.}
		vlan_id: ${3:# VLAN to be used for server access over Inband network.}
		ip_pool: ${4:# IP Pool used to assign IP address and other required network settings.}
		api_private_key: ${5:# Filename (absolute path) or string of PEM formatted private key data to be used for Intersight API authentication.}
		api_key_id: ${6:# Public API Key ID associated with the private key.}
		# state: #present|absent
		# organization: default
		# tags: # List of tags in Key:<user-defined key> Value:<user-defined value> format.
		# descrption: # The user-defined description of the IMC access policy.
		# api_uri: https://intersight.com/api/v1
		# validate_certs: yes
		# use_proxy: yes
$0
endsnippet

snippet intersight_info "Gather information about Intersight" b
- name: $1
	intersight_info:
		server_names: ${2:# Server names to retrieve information from.}
		api_private_key: ${3:# Filename (absolute path) or string of PEM formatted private key data to be used for Intersight API authentication.}
		api_key_id: ${4:# Public API Key ID associated with the private key.}
		# api_uri: https://intersight.com/api/v1
		# validate_certs: yes
		# use_proxy: yes
$0
endsnippet

snippet intersight_ntp_policy "NTP policy configuration for Cisco Intersight" b
- name: $1
	intersight_ntp_policy:
		name: ${2:# The name assigned to the NTP policy.}
		api_private_key: ${3:# Filename (absolute path) or string of PEM formatted private key data to be used for Intersight API authentication.}
		api_key_id: ${4:# Public API Key ID associated with the private key.}
		# state: #present|absent
		# organization: default
		# tags: # List of tags in Key:<user-defined key> Value:<user-defined value> format.
		# description: # The user-defined description of the NTP policy.
		# enable: yes
		# ntp_servers: # List of NTP servers configured on the endpoint.
		# timezone: # Timezone of services on the endpoint.
		# api_uri: https://intersight.com/api/v1
		# validate_certs: yes
		# use_proxy: yes
$0
endsnippet

snippet intersight_rest_api "REST API configuration for Cisco Intersight" b
- name: $1
	intersight_rest_api:
		resource_path: ${2:# Resource URI being configured related to api_uri.}
		api_private_key: ${3:# Filename (absolute path) or string of PEM formatted private key data to be used for Intersight API authentication.}
		api_key_id: ${4:# Public API Key ID associated with the private key.}
		# query_params: # Query parameters for the Intersight API query languange.
		# update_method: #patch|post
		# api_body: # The paylod for API requests used to modify resources.
		# return_list: no
		# state: #present|absent
		# api_uri: https://intersight.com/api/v1
		# validate_certs: yes
		# use_proxy: yes
$0
endsnippet

snippet intersight_server_profile "Server Profile configuration for Cisco Intersight" b
- name: $1
	intersight_server_profile:
		name: ${2:# The name assigned to the Server Profile.}
		api_private_key: ${3:# Filename (absolute path) or string of PEM formatted private key data to be used for Intersight API authentication.}
		api_key_id: ${4:# Public API Key ID associated with the private key.}
		# state: #present|absent
		# organization: default
		# target_platform: #Standalone|FIAttached
		# tags: # List of tags in Key:<user-defined key> Value:<user-defined value> format.
		# description: # The user-defined description of the Server Profile.
		# assigned_server: # Managed Obect ID (MOID) of assigned server.
		# boot_order_policy: # Name of Boot Order Policy to associate with this profile.
		# imc_access_policy: # Name of IMC Access Policy to associate with this profile.
		# lan_connectivity_policy: # Name of LAN Connectivity Policy to associate with this profile.
		# local_user_policy: # Name of Local User Policy to associate with this profile.
		# ntp_policy: # Name of NTP Policy to associate with this profile.
		# storage_policy: # Name of Storage Policy to associate with this profile.
		# virtual_media_policy: # Name of Virtual Media Policy to associate with this profile.
		# api_uri: https://intersight.com/api/v1
		# validate_certs: yes
		# use_proxy: yes
$0
endsnippet

snippet intersight_target_claim "Target claim configuraiton for Cisco Intersight" b
- name: $1
	intersight_target_claim:
		device_id: ${2:# Device id (serial number) of target}
		api_private_key: ${3:# Filename (absolute path) or string of PEM formatted private key data to be used for Intersight API authentication.}
		api_key_id: ${4:# Public API Key ID associated with the private key.}
		# claim_code: # Claim code required for registering a new Target
		# state: #present|absent
		# api_uri: https://intersight.com/api/v1
		# validate_certs: yes
		# use_proxy: yes
$0
endsnippet

snippet intersight_virtual_media_policy "Virtual Media policy configuration for Cisco Intersight" b
- name: $1
	intersight_virtual_media_policy:
		name: ${2:# The name assigned to the NTP policy.}
		api_private_key: ${3:# Filename (absolute path) or string of PEM formatted private key data to be used for Intersight API authentication.}
		api_key_id: ${4:# Public API Key ID associated with the private key.}
		# state: #present|absent
		# organization: default
		# tags: # List of tags in Key:<user-defined key> Value:<user-defined value> format.
		# descrption: # The user-defined description of the NTP policy.
		# enable: yes
		# encryption: no
		# low_power_usb: yes
		# cdd_virtual_media: # CDD Virtual Media image mapping options.
		# hdd_virtual_media: # HDD Virtual Media image mapping options.
		# api_uri: https://intersight.com/api/v1
		# validate_certs: yes
		# use_proxy: yes
$0
endsnippet

snippet meraki_admin "Manage administrators in the Meraki cloud" b
- name: $1
	meraki_admin:
		state: ${2:absent|present|query}
		auth_key: ${3:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# name: # Name of the dashboard administrator.
		# email: # Email address for the dashboard administrator.
		# org_access: full|none|read-only
		# tags: # Tags the administrator has privileges on.
		# networks: # List of networks the administrator has privileges on.
		# org_name: # Name of organization.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_alert "Manage alerts in the Meraki cloud" b
- name: $1
	meraki_alert:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: #present|query
		# net_name: # Name of a network.
		# net_id: # ID number of a network.
		# default_destinations: # Properties for destinations when alert specific destinations aren't specified.
		# alerts: # Alert-specific configuration for each type.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_config_template "Manage configuration templates in the Meraki cloud" b
- name: $1
	meraki_config_template:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: absent|#query|present
		# org_name: # Name of organization containing the configuration template.
		# org_id: # ID of organization associated to a configuration template.
		# config_template: # Name of the configuration template within an organization to manipulate.
		# net_name: # Name of the network to bind or unbind configuration template to.
		# net_id: # ID of the network to bind or unbind configuration template to.
		# auto_bind: # Optional boolean indicating whether the network's switches should automatically bind to profiles of the same model.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_mx_content_filtering "Edit Meraki MX content filtering policies" b
- name: $1
	meraki_mx_content_filtering:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable MERAKI_KEY is not set.}
		# net_name: # Name of a network.
		# net_id: # ID number of a network.
		# state: #present|query
		# allowed_urls: # List of URL patterns which should be allowed.
		# blocked_urls: # List of URL patterns which should be blocked.
		# blocked_categories: # List of content categories which should be blocked.
		# category_list_size: top sites|full list
		# subset: categories|policy
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_device "Manage devices in the Meraki cloud" b
- name: $1
	meraki_device:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: absent|present|#query
		# net_name: # Name of a network.
		# net_id: # ID of a network.
		# serial: # Serial number of a device to query.
		# hostname: # Hostname of network device to search for.
		# model: # Model of network device to search for.
		# tags: # Space delimited list of tags to assign to device.
		# lat: # Latitude of device's geographic location.
		# lng: # Longitude of device's geographic location.
		# address: # Postal address of device's location.
		# move_map_marker: # Whether or not to set the latitude and longitude of a device based on the new address.
		# lldp_cdp_timespan: # Timespan, in seconds, used to query LLDP and CDP information.
		# note: # Informational notes about a device.
		# query: lldp_cdp|uplink
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_firewalled_services "Edit firewall policies for administrative network services" b
- name: $1
	meraki_firewalled_services:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable MERAKI_KEY is not set.}
		# net_name: # Name of a network.
		# net_id: # ID number of a network.
		# org_name: # Name of organization associated to a network.
		# org_id: # ID of organization associated to a network.
		# state: #present|query
		# service: ICMP|SNMP|web
		# access: blocked|restricted|unrestricted
		# allowed_ips: # List of IP addresses allowed to access a service.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_mx_intrusion_prevention "Manage intrustion prevention in the Meraki cloud" b
- name: $1
	meraki_mx_intrusion_prevention:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: absent|#present|query
		# net_name: # Name of a network.
		# net_id: # ID number of a network.
		# mode: detection|disabled|prevention
		# ids_rulesets: connectivity|balanced|security
		# allowed_rules: # List of IDs related to rules which are allowed for the organization.
		# protected_networks: # Set included/excluded networks for Intrusion Prevention.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_mx_malware "Manage Malware Protection in the Meraki cloud" b
- name: $1
	meraki_mx_malware:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: absent|present|#query
		# net_name: # Name of network which configuration is applied to.
		# net_id: # ID of network which configuration is applied to.
		# allowed_urls: # List of URLs to whitelist.
		# allowed_files: # List of files to whitelist.
		# mode: disabled|enabled
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_management_interface "Configure Meraki management interfaces" b
- name: $1
	meraki_management_interface:
		serial: ${2:# serial number of the device to configure.}
		auth_key: ${3:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: absent|#query|present
		# org_name: # Name of organization containing the configuration template.
		# org_id: # ID of organization associated to a configuration template.
		# net_name: # Name of the network to bind or unbind configuration template to.
		# net_id: # ID of the network to bind or unbind configuration template to.
		# wan1: # Management interface details for management interface.
		# wan2: # Management interface details for management interface.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_mr_l3_firewall "Manage MR access point layer 3 firewalls in the Meraki cloud" b
- name: $1
	meraki_mr_l3_firewall:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: #present|query
		# net_name: # Name of network containing access points.
		# net_id: # ID of network containing access points.
		# number: # Number of SSID to apply firewall rule to.
		# ssid_name: # Name of SSID to apply firewall rule to.
		# allow_lan_access: yes
		# rules: # List of firewall rules.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_mr_radio "Manage device radio settings for Meraki wireless networks" b
- name: $1
	meraki_mr_radio:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: #present|query
		# serial: # Serial number of a device to query.
		# rf_profile_id: # The ID of an RF profile to assign to the device.
		# rf_profile_name: # The name of an RF profile to assign to the device.
		# net_name: # Name of a network.
		# net_id: # ID of a network.
		# five_ghz_settings: # Manual radio settings for 5 GHz.
		# two_four_ghz_settings: # Manual radio settings for 2.4 GHz.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_mr_rf_profile "Manage RF profiles for Meraki wireless networks" b
- name: $1
	meraki_mr_rf_profile:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: #present|query|absent
		# net_name: # Name of network.
		# net_id: # ID of network.
		# profile_id: # Unique identifier of existing RF profile.
		# band_selection_type: ssid|ap
		# min_bitrate_type: band|ssid
		# name: # The unique name of the new profile.
		# client_balancing_enabled: # Steers client to best available access point.
		# ap_band_settings: # Settings that will be enabled if selectionType is set to 'ap'.
		# five_ghz_settings: # Settings related to 5Ghz band.
		# two_four_ghz_settings: # Settings related to 2.4Ghz band
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_mr_settings "Manage general settings for Meraki wireless networks" b
- name: $1
	meraki_mr_settings:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: #present|query
		# net_name: # Name of network.
		# net_id: # ID of network.
		# upgrade_strategy: minimize_upgrade_time|minimize_client_downtime
		# ipv6_bridge_enabled: # Toggle for enabling or disabling IPv6 bridging in a network.
		# led_lights_on: # Toggle for enabling or disabling LED lights on all APs in the network.
		# location_analytics_enabled: # Toggle for enabling or disabling location analytics for your network.
		# meshing_enabled: # T
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_mr_ssid "Manage wireless SSIDs in the Meraki cloud" b
- name: $1
	meraki_mr_ssid:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: absent|query|#present
		# number: # SSID number within network.
		# name: # Name of SSID.
		# net_name: # Name of network.
		# net_id: # ID of network.
		# enabled: # Enable or disable SSID network.
		# auth_mode: open|psk|open-with-radius|8021x-meraki|8021x-radius
		# encryption_mode: wpa|eap|wpa-eap
		# psk: # Password for wireless network.
		# wpa_encryption_mode: WPA1 and WPA2|WPA2 only|WPA3 Transition Mode|WPA3 only
		# splash_page: None|Click-through splash page|Billing|Password-protected with Meraki RADIUS|Password-protected with custom RADIUS|Password-protected with Active Directory|Password-protected with LDAP|SMS authentication|Systems Manager Sentry|Facebook Wi-Fi|Google OAuth|Sponsored guest|Cisco ISE
		# radius_servers: # List of RADIUS servers.
		# radius_proxy_enabled: # Enable or disable RADIUS Proxy on SSID.
		# radius_coa_enabled: # Enable or disable RADIUS CoA (Change of Authorization) on SSID.
		# radius_failover_policy: Deny access|Allow access
		# radius_load_balancing_policy: Strict priority order|Round robin
		# radius_accounting_enabled: # Enable or disable RADIUS accounting.
		# radius_accounting_servers: # List of RADIUS servers for RADIUS accounting.
		# ip_assignment_mode: NAT mode|Bridge mode|Layer 3 roaming|Layer 3 roaming with a concentrator|VPN
		# use_vlan_tagging: # Set whether to use VLAN tagging.
		# default_vlan_id: # Default VLAN ID.
		# vlan_id: # ID number of VLAN on SSID.
		# ap_tags_vlan_ids: # List of VLAN tags.
		# walled_garden_enabled: # Enable or disable walled garden functionality.
		# walled_garden_ranges: # List of walled garden ranges.
		# min_bitrate: 1|2|5.5|6|9|11|12|18|24|36|48|54
		# band_selection: Dual band operation|5 GHz band only|Dual band operation with Band Steering
		# per_client_bandwidth_limit_up: # Maximum bandwidth in Mbps devices on SSID can upload.
		# per_client_bandwidth_limit_down: # Maximum bandwidth in Mbps devices on SSID can download.
		# concentrator_network_id: # The concentrator to use for 'Layer 3 roaming with a concentrator' or 'VPN'.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_ms_access_list "Manage access lists for Meraki switches in the Meraki cloud" b
- name: $1
	meraki_ms_access_list:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: absent|present|#query
		# net_name: # Name of network which configuration is applied to.
		# net_id: # ID of network which configuration is applied to.
		# rules: # List of access control rules.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_ms_l3_interface "Manage routed interfaces on MS switches" b
- name: $1
	meraki_ms_l3_interface:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: #present|query|absent
		# serial: # Serial number of MS switch hosting the layer 3 interface.
		# vlan_id: # The VLAN this routed interface is on.
		# default_gateway: # The next hop for any traffic that isn't going to a directly connected subnet or over a static route.
		# interface_ip: # The IP address this switch will use for layer 3 routing on this VLAN or subnet.
		# interface_id: # Uniqiue identification number for layer 3 interface.
		# multicast_routing: disabled|enabled|IGMP snooping querier
		# name: # A friendly name or description for the interface or VLAN.
		# subnet: # The network that this routed interface is on, in CIDR notation.
		# ospf_settings: # The OSPF routing settings of the interface.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_ms_link_aggregation "Manage link aggregations on MS switches" b
- name: $1
	meraki_ms_link_aggregation:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: absent|query|#present
		# net_name: # Name of network.
		# net_id: # ID of network.
		# lag_id: # ID of lag to query or modify.
		# switch_ports: # List of switchports to include in link aggregation.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_ms_ospf "Manage OSPF configuration on MS switches" b
- name: $1
	meraki_ms_ospf:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: #present|query
		# net_name: # Name of network containing OSPF configuration.
		# net_id: # ID of network containing OSPF configuration.
		# enabled: # Enable or disable OSPF on the network.
		# hello_timer: # Time interval, in seconds, at which hello packets will be sent to OSPF neighbors to maintain connectivity.
		# dead_timer: # Time interval to determine when the peer will be declared inactive.
		# md5_authentication_enabled: # Whether to enable or disable MD5 authentication.
		# md5_authentication_key: # MD5 authentication credentials.
		# areas: # List of areas in OSPF network.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_ms_stack "Modify switch stacking configuration in Meraki." b
- name: $1
	meraki_ms_stack:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: #present|query|absent
		# net_name: # Name of network which MX firewall is in.
		# net_id: # ID of network which MX firewall is in.
		# stack_id: # ID of stack which is to be modified or deleted.
		# serials: # List of switch serial numbers which should be included or removed from a stack.
		# name: # Name of stack.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_ms_stack_l3_interface "Manage routed interfaces on MS switches" b
- name: $1
	meraki_ms_stack_l3_interface:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: #present|query|absent
		# net_name: # Name of network which configuration is applied to.
		# net_id: # ID of network which configuration is applied to.
		# stack_id: # The unique identifier of the stack.
		# vlan_id: # The VLAN this routed interface is on.
		# default_gateway: # The next hop for any traffic that isn't going to a directly connected subnet or over a static route.
		# interface_ip: # The IP address this switch will use for layer 3 routing on this VLAN or subnet.
		# interface_id: # Uniqiue identification number for layer 3 interface.
		# multicast_routing: disabled|enabled|IGMP snooping querier
		# name: # A friendly name or description for the interface or VLAN.
		# subnet: # The network that this routed interface is on, in CIDR notation.
		# ospf_settings: # The OSPF routing settings of the interface.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_ms_storm_control "Manage storm control configuration on a switch in the Meraki cloud" b
- name: $1
	meraki_ms_storm_control:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: #query|present
		# net_name: # Name of network.
		# net_id: # ID of network.
		# broadcast_threshold: # Percentage (1 to 99) of total available port bandwidth for broadcast traffic type.
		# multicast_threshold: # Percentage (1 to 99) of total available port bandwidth for multicast traffic type.
		# unknown_unicast_threshold: # Percentage (1 to 99) of total available port bandwidth for unknown unicast traffic type.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_ms_switchport "Manage switchports on a switch in the Meraki cloud" b
- name: $1
	meraki_ms_switchport:
		serial: ${2:# Serial nubmer of the switch.}
		auth_key: ${3:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: #query|present
		# access_policy_type: Open|Custom access policy|MAC allow list|Sticky MAC allow list
		# access_policy_number: # Number of the access policy to apply.
		# allowed_vlans: all
		# enabled: yes
		# isolation_enabled: no
		# link_negotiation: #Auto negotiate|100 Megabit (auto)|100 Megabit full duplex (forced)
		# name: # Switchport description.
		# number: # Port number.
		# poe_enabled: yes
		# rstp_enabled: yes
		# stp_guard: #disabled|root guard|bpdu guard|loop guard
		# tags: # List of tags to assign to a port.
		# type: #access|trunk
		# vlan: # VLAN number assigned to port.
		# voice_vlan: # VLAN number assigned to a port for voice traffic.
		# voice_vlan_state: absent|#present
		# mac_allow_list: # MAC addresses list that are allowed on a port.
		# sticky_mac_allow_list: # MAC addresses list that are allowed on a port.
		# sticky_mac_allow_list_limit: # The number of MAC addresses allowed in the sticky port allow list.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_mx_content_filtering "Edit Meraki MX content filtering policies" b
- name: $1
	meraki_mx_content_filtering:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable MERAKI_KEY is not set.}
		# net_name: # Name of a network.
		# net_id: # ID number of a network.
		# state: #present|query
		# allowed_urls: # List of URL patterns which should be allowed.
		# blocked_urls: # List of URL patterns which should be blocked.
		# blocked_categories: # List of content categories which should be blocked.
		# category_list_size: top sites|full list
		# subset: categories|policy
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_mx_intrusion_prevention "Manage intrustion prevention in the Meraki cloud" b
- name: $1
	meraki_mx_intrusion_prevention:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: absent|#present|query
		# net_name: # Name of a network.
		# net_id: # ID number of a network.
		# mode: detection|disabled|prevention
		# ids_rulesets: connectivity|balanced|security
		# allowed_rules: # List of IDs related to rules which are allowed for the organization.
		# protected_networks: # Set included/excluded networks for Intrusion Prevention.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_mx_l2_interface "Configure MX layer 2 interfaces" b
- name: $1
	meraki_mx_l2_interface:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: #present|query
		# net_name: # Name of a network.
		# net_id: # ID number of a network.
		# org_id: # ID of organization associated to a network.
		# number: # ID number of MX port.
		# vlan: # Native VLAN when the port is in Trunk mode.
		# access_policy: open|8021x-radius|mac-radius|hybris-radius
		# allowed_vlans: # Comma-delimited list of the VLAN ID's allowed on the port, or 'all' to permit all VLAN's on the port.
		# port_type: access|trunk
		# drop_untagged_traffic: # Trunk port can Drop all Untagged traffic. When true, no VLAN is required.
		# enabled: # Enabled state of port.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_mx_l3_firewall "Manage MX appliance layer 3 firewalls in the Meraki cloud" b
- name: $1
	meraki_mx_l3_firewall:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: #present|query
		# net_name: # Name of network which MX firewall is in.
		# net_id: # ID of network which MX firewall is in.
		# rules: # List of firewall rules.
		# syslog_default_rule: # Whether to log hits against the default firewall rule.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_mx_l7_firewall "Manage MX appliance layer 7 firewalls in the Meraki cloud" b
- name: $1
	meraki_mx_l7_firewall:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: #present|query
		# net_name: # Name of network which MX firewall is in.
		# net_id: # ID of network which MX firewall is in.
		# rules: # List of layer 7 firewall rules.
		# categories: # When C(True), specifies that applications and application categories should be queried instead of firewall rules.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_mx_malware "Manage Malware Protection in the Meraki cloud" b
- name: $1
	meraki_mx_malware:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: absent|present|#query
		# net_name: # Name of network which configuration is applied to.
		# net_id: # ID of network which configuration is applied to.
		# allowed_urls: # List of URLs to whitelist.
		# allowed_files: # List of files to whitelist.
		# mode: disabled|enabled
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_mx_nat "Manage NAT rules in Meraki cloud" b
- name: $1
	meraki_mx_nat:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: #present|query
		# net_name: # Name of a network.
		# net_id: # ID number of a network.
		# org_id: # ID of organization associated to a network.
		# subset: 1:1|1:many|#all|port_forwarding
		# one_to_one: # List of 1:1 NAT rules.
		# one_to_many: # List of 1:many NAT rules.
		# port_forwarding: # List of port forwarding rules.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_mx_site_to_site_firewall "Manage MX appliance firewall rules for site-to-site VPNs" b
- name: $1
	meraki_mx_site_to_site_firewall:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: #present|query
		# rules: # List of firewall rules.
		# syslog_default_rule: # Whether to log hits against the default firewall rule.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_mx_site_to_site_vpn "Manage AutoVPN connections in Meraki" b
- name: $1
	meraki_mx_site_to_site_vpn:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: #present|query
		# net_name: # Name of network which MX firewall is in.
		# net_id: # ID of network which MX firewall is in.
		# mode: none|hub|spoke
		# hubs: # List of hubs to assign to a spoke.
		# subnets: # List of subnets to advertise over VPN.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_mx_static_route "Manage static routes in the Meraki cloud" b
- name: $1
	meraki_mx_static_route:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: absent|query|#present
		# net_name: # Name of a network.
		# net_id: # ID number of a network.
		# name: # Descriptive name of the static route.
		# subnet: # CIDR notation based subnet for static route.
		# gateway_ip: # IP address of the gateway for the subnet.
		# route_id: # Unique ID of static route.
		# fixed_ip_assignments: # List of fixed MAC to IP bindings for DHCP.
		# reserved_ip_ranges: # List of IP ranges reserved for static IP assignments.
		# enabled: # Indicates whether static route is enabled within a network.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_mx_uplink_bandwidth "Manage uplinks on Meraki MX appliances" b
- name: $1
	meraki_mx_uplink_bandwidth:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: absent|present|#query
		# org_name: # Name of organization associated to a network.
		# org_id: # ID of organization associated to a network.
		# net_name: # Name of network which VLAN is in or should be in.
		# net_id: # ID of network which VLAN is in or should be in.
		# wan1: # Configuration of WAN1 uplink
		# wan2: # Configuration of WAN2 uplink
		# cellular: # Configuration of cellular uplink
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_mx_uplink_bandwidth "Manage uplinks on Meraki MX appliances" b
- name: $1
	meraki_mx_uplink_bandwidth:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: absent|present|#query
		# org_name: # Name of organization associated to a network.
		# org_id: # ID of organization associated to a network.
		# net_name: # Name of network which VLAN is in or should be in.
		# net_id: # ID of network which VLAN is in or should be in.
		# wan1: # Configuration of WAN1 uplink
		# wan2: # Configuration of WAN2 uplink
		# cellular: # Configuration of cellular uplink
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_mx_vlan "Manage VLANs in the Meraki cloud" b
- name: $1
	meraki_mx_vlan:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: absent|present|#query
		# net_name: # Name of network which VLAN is in or should be in.
		# net_id: # ID of network which VLAN is in or should be in.
		# vlan_id: # ID number of VLAN.
		# name: # Name of VLAN.
		# subnet: # CIDR notation of network subnet.
		# appliance_ip: # IP address of appliance.
		# dns_nameservers: # Semi-colon delimited list of DNS IP addresses.
		# reserved_ip_range: # IP address ranges which should be reserve and not distributed via DHCP.
		# vpn_nat_subnet: # The translated VPN subnet if VPN and VPN subnet translation are enabled on the VLAN.
		# fixed_ip_assignments: # Static IP address assignments to be distributed via DHCP by MAC address.
		# dhcp_handling: Run a DHCP server|Relay DHCP to another server|Do not respond to DHCP requests|none|server|relay
		# dhcp_relay_server_ips: # IP addresses to forward DHCP packets to.
		# dhcp_lease_time: 30 minutes|1 hour|4 hours|12 hours|1 day|1 week
		# dhcp_boot_options_enabled: # Enable DHCP boot options
		# dhcp_boot_next_server: # DHCP boot option to direct boot clients to the server to load boot file from.
		# dhcp_boot_filename: # Filename to boot from for DHCP boot
		# dhcp_options: # List of DHCP option values
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_mx_nat "Manage NAT rules in Meraki cloud" b
- name: $1
	meraki_mx_nat:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: #present|query
		# net_name: # Name of a network.
		# net_id: # ID number of a network.
		# org_id: # ID of organization associated to a network.
		# subset: 1:1|1:many|#all|port_forwarding
		# one_to_one: # List of 1:1 NAT rules.
		# one_to_many: # List of 1:many NAT rules.
		# port_forwarding: # List of port forwarding rules.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_network "Manage networks in the Meraki cloud" b
- name: $1
	meraki_network:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: absent|#present|query
		# net_name: # Name of a network.
		# net_id: # ID number of a network.
		# type: appliance|switch|wireless
		# tags: # List of tags to assign to network.
		# timezone: # Timezone associated to network.
		# enable_vlans: # Boolean value specifying whether VLANs should be supported on a network.
		# local_status_page_enabled: # -
		# remote_status_page_enabled: # Enables access to the device status page (U(http://device LAN IP)).
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_organization "Manage organizations in the Meraki cloud" b
- name: $1
	meraki_organization:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: absent|#present|query
		# clone: # Organization to clone to a new organization.
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# delete_confirm: # ID of organization required for confirmation before deletion.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_mx_site_to_site_vpn "Manage AutoVPN connections in Meraki" b
- name: $1
	meraki_mx_site_to_site_vpn:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: #present|query
		# net_name: # Name of network which MX firewall is in.
		# net_id: # ID of network which MX firewall is in.
		# mode: none|hub|spoke
		# hubs: # List of hubs to assign to a spoke.
		# subnets: # List of subnets to advertise over VPN.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_snmp "Manage organizations in the Meraki cloud" b
- name: $1
	meraki_snmp:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: query|#present
		# v2c_enabled: # Specifies whether SNMPv2c is enabled.
		# v3_enabled: # Specifies whether SNMPv3 is enabled.
		# v3_auth_mode: MD5|SHA
		# v3_auth_pass: # Authentication password for SNMPv3.
		# v3_priv_mode: DES|AES128
		# v3_priv_pass: # Privacy password for SNMPv3.
		# peer_ips: # List of IP addresses which can perform SNMP queries.
		# net_name: # Name of network.
		# net_id: # ID of network.
		# access: community|none|users
		# community_string: # SNMP community string.
		# users: # Information about users with access to SNMP.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_mr_ssid "Manage wireless SSIDs in the Meraki cloud" b
- name: $1
	meraki_mr_ssid:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: absent|query|#present
		# number: # SSID number within network.
		# name: # Name of SSID.
		# net_name: # Name of network.
		# net_id: # ID of network.
		# enabled: # Enable or disable SSID network.
		# auth_mode: open|psk|open-with-radius|8021x-meraki|8021x-radius
		# encryption_mode: wpa|eap|wpa-eap
		# psk: # Password for wireless network.
		# wpa_encryption_mode: WPA1 and WPA2|WPA2 only|WPA3 Transition Mode|WPA3 only
		# splash_page: None|Click-through splash page|Billing|Password-protected with Meraki RADIUS|Password-protected with custom RADIUS|Password-protected with Active Directory|Password-protected with LDAP|SMS authentication|Systems Manager Sentry|Facebook Wi-Fi|Google OAuth|Sponsored guest|Cisco ISE
		# radius_servers: # List of RADIUS servers.
		# radius_proxy_enabled: # Enable or disable RADIUS Proxy on SSID.
		# radius_coa_enabled: # Enable or disable RADIUS CoA (Change of Authorization) on SSID.
		# radius_failover_policy: Deny access|Allow access
		# radius_load_balancing_policy: Strict priority order|Round robin
		# radius_accounting_enabled: # Enable or disable RADIUS accounting.
		# radius_accounting_servers: # List of RADIUS servers for RADIUS accounting.
		# ip_assignment_mode: NAT mode|Bridge mode|Layer 3 roaming|Layer 3 roaming with a concentrator|VPN
		# use_vlan_tagging: # Set whether to use VLAN tagging.
		# default_vlan_id: # Default VLAN ID.
		# vlan_id: # ID number of VLAN on SSID.
		# ap_tags_vlan_ids: # List of VLAN tags.
		# walled_garden_enabled: # Enable or disable walled garden functionality.
		# walled_garden_ranges: # List of walled garden ranges.
		# min_bitrate: 1|2|5.5|6|9|11|12|18|24|36|48|54
		# band_selection: Dual band operation|5 GHz band only|Dual band operation with Band Steering
		# per_client_bandwidth_limit_up: # Maximum bandwidth in Mbps devices on SSID can upload.
		# per_client_bandwidth_limit_down: # Maximum bandwidth in Mbps devices on SSID can download.
		# concentrator_network_id: # The concentrator to use for 'Layer 3 roaming with a concentrator' or 'VPN'.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_mx_static_route "Manage static routes in the Meraki cloud" b
- name: $1
	meraki_mx_static_route:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: absent|query|#present
		# net_name: # Name of a network.
		# net_id: # ID number of a network.
		# name: # Descriptive name of the static route.
		# subnet: # CIDR notation based subnet for static route.
		# gateway_ip: # IP address of the gateway for the subnet.
		# route_id: # Unique ID of static route.
		# fixed_ip_assignments: # List of fixed MAC to IP bindings for DHCP.
		# reserved_ip_ranges: # List of IP ranges reserved for static IP assignments.
		# enabled: # Indicates whether static route is enabled within a network.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_ms_access_list "Manage access lists for Meraki switches in the Meraki cloud" b
- name: $1
	meraki_ms_access_list:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: absent|present|#query
		# net_name: # Name of network which configuration is applied to.
		# net_id: # ID of network which configuration is applied to.
		# rules: # List of access control rules.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_ms_stack "Modify switch stacking configuration in Meraki." b
- name: $1
	meraki_ms_stack:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: #present|query|absent
		# net_name: # Name of network which MX firewall is in.
		# net_id: # ID of network which MX firewall is in.
		# stack_id: # ID of stack which is to be modified or deleted.
		# serials: # List of switch serial numbers which should be included or removed from a stack.
		# name: # Name of stack.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_ms_storm_control "Manage storm control configuration on a switch in the Meraki cloud" b
- name: $1
	meraki_ms_storm_control:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: #query|present
		# net_name: # Name of network.
		# net_id: # ID of network.
		# broadcast_threshold: # Percentage (1 to 99) of total available port bandwidth for broadcast traffic type.
		# multicast_threshold: # Percentage (1 to 99) of total available port bandwidth for multicast traffic type.
		# unknown_unicast_threshold: # Percentage (1 to 99) of total available port bandwidth for unknown unicast traffic type.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_ms_switchport "Manage switchports on a switch in the Meraki cloud" b
- name: $1
	meraki_ms_switchport:
		serial: ${2:# Serial nubmer of the switch.}
		auth_key: ${3:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: #query|present
		# access_policy_type: Open|Custom access policy|MAC allow list|Sticky MAC allow list
		# access_policy_number: # Number of the access policy to apply.
		# allowed_vlans: all
		# enabled: yes
		# isolation_enabled: no
		# link_negotiation: #Auto negotiate|100 Megabit (auto)|100 Megabit full duplex (forced)
		# name: # Switchport description.
		# number: # Port number.
		# poe_enabled: yes
		# rstp_enabled: yes
		# stp_guard: #disabled|root guard|bpdu guard|loop guard
		# tags: # List of tags to assign to a port.
		# type: #access|trunk
		# vlan: # VLAN number assigned to port.
		# voice_vlan: # VLAN number assigned to a port for voice traffic.
		# voice_vlan_state: absent|#present
		# mac_allow_list: # MAC addresses list that are allowed on a port.
		# sticky_mac_allow_list: # MAC addresses list that are allowed on a port.
		# sticky_mac_allow_list_limit: # The number of MAC addresses allowed in the sticky port allow list.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_syslog "Manage syslog server settings in the Meraki cloud." b
- name: $1
	meraki_syslog:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable MERAKI_KEY is not set.}
		# state: #present|query
		# net_name: # Name of a network.
		# net_id: # ID number of a network.
		# servers: # List of syslog server settings
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_mx_vlan "Manage VLANs in the Meraki cloud" b
- name: $1
	meraki_mx_vlan:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: absent|present|#query
		# net_name: # Name of network which VLAN is in or should be in.
		# net_id: # ID of network which VLAN is in or should be in.
		# vlan_id: # ID number of VLAN.
		# name: # Name of VLAN.
		# subnet: # CIDR notation of network subnet.
		# appliance_ip: # IP address of appliance.
		# dns_nameservers: # Semi-colon delimited list of DNS IP addresses.
		# reserved_ip_range: # IP address ranges which should be reserve and not distributed via DHCP.
		# vpn_nat_subnet: # The translated VPN subnet if VPN and VPN subnet translation are enabled on the VLAN.
		# fixed_ip_assignments: # Static IP address assignments to be distributed via DHCP by MAC address.
		# dhcp_handling: Run a DHCP server|Relay DHCP to another server|Do not respond to DHCP requests|none|server|relay
		# dhcp_relay_server_ips: # IP addresses to forward DHCP packets to.
		# dhcp_lease_time: 30 minutes|1 hour|4 hours|12 hours|1 day|1 week
		# dhcp_boot_options_enabled: # Enable DHCP boot options
		# dhcp_boot_next_server: # DHCP boot option to direct boot clients to the server to load boot file from.
		# dhcp_boot_filename: # Filename to boot from for DHCP boot
		# dhcp_options: # List of DHCP option values
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet meraki_webhook "Manage webhooks configured in the Meraki cloud" b
- name: $1
	meraki_webhook:
		auth_key: ${2:# Authentication key provided by the dashboard. Required if environmental variable C(MERAKI_KEY) is not set.}
		# state: absent|present|#query
		# net_name: # Name of network which configuration is applied to.
		# net_id: # ID of network which configuration is applied to.
		# name: # Name of webhook.
		# shared_secret: # Secret password to use when accessing webhook.
		# url: # URL to access when calling webhook.
		# webhook_id: # Unique ID of webhook.
		# test: test
		# test_id: # ID of webhook test query.
		# host: api.meraki.com
		# use_proxy: no
		# use_https: yes
		# output_format: #snakecase|camelcase
		# output_level: debug|#normal
		# timeout: 30
		# validate_certs: yes
		# org_name: # Name of organization.
		# org_id: # ID of organization.
		# rate_limit_retry_time: 165
		# internal_error_retry_time: 60
$0
endsnippet

snippet mso_backup "Manages backups" b
- name: $1
	mso_backup:
		# location_type: #local|remote
		# backup: # The name given to the backup
		# remote_location: # The remote location's name for the backup to be stored
		# remote_path: # This path is relative to the remote location.
		# description: # Brief information about the backup.
		# destination: # Location where to download the backup to
		# state: absent|#present|query|upload|restore|download|move
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_dhcp_option_policy "Manage DHCP Option policies." b
- name: $1
	mso_dhcp_option_policy:
		# dhcp_option_policy: # Name of the DHCP Option Policy
		# description: # Description of the DHCP Option Policy
		# tenant: # Tenant where the DHCP Option Policy is located.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_dhcp_option_policy_option "Manage DHCP options in a DHCP Option policy." b
- name: $1
	mso_dhcp_option_policy_option:
		dhcp_option_policy: ${2:# Name of the DHCP Option Policy}
		# name: # Name of the option in the DHCP Option Policy
		# id: # Id of the option in the DHCP Option Policy
		# data: # Data of the DHCP option in the DHCP Option Policy
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_dhcp_relay_policy "Manage DHCP Relay policies." b
- name: $1
	mso_dhcp_relay_policy:
		# dhcp_relay_policy: # Name of the DHCP Relay Policy
		# description: # Description of the DHCP Relay Policy
		# tenant: # Tenant where the DHCP Relay Policy is located.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_dhcp_relay_policy_provider "Manage DHCP providers in a DHCP Relay policy." b
- name: $1
	mso_dhcp_relay_policy_provider:
		dhcp_relay_policy: ${2:# Name of the DHCP Relay Policy}
		# ip: # IP address of the DHCP Server
		# tenant: # Tenant where the DHCP provider is located.
		# schema: # Schema where the DHCP provider is configured
		# template: # template where the DHCP provider is configured
		# application_profile: # Application Profile where the DHCP provider is configured
		# endpoint_group: # EPG where the DHCP provider is configured
		# external_endpoint_group: # External EPG where the DHCP provider is configured
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_label "Manage labels" b
- name: $1
	mso_label:
		# label: # The name of the label.
		# type: #site
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_rest "Direct access to the Cisco MSO REST API" b
- name: $1
	mso_rest:
		path: ${2:# URI being used to execute API calls.}
		# method: delete|#get|post|put|patch
		# content: # Sets the payload of the API request directly.
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_role "Manage roles" b
- name: $1
	mso_role:
		# role: # The name of the role.
		# display_name: # The name of the role to be displayed in the web UI.
		# description: # The description of the role.
		# read_permissions: backup-db|manage-audit-records|manage-labels|manage-roles|manage-schemas|manage-sites|manage-tenants|manage-tenant-schemas|manage-users|platform-logs|view-all-audit-records|view-labels|view-roles|view-schemas|view-sites|view-tenants|view-tenant-schemas|view-users
		# write_permissions: backup-db|manage-audit-records|manage-labels|manage-roles|manage-schemas|manage-sites|manage-tenants|manage-tenant-schemas|manage-users|platform-logs|view-all-audit-records|view-labels|view-roles|view-schemas|view-sites|view-tenants|view-tenant-schemas|view-users
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema "Manage schemas" b
- name: $1
	mso_schema:
		# schema: # The name of the schema.
		# state: absent|#query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_clone "Clone schemas" b
- name: $1
	mso_schema_clone:
		# source_schema: # The name of the source_schema.
		# destination_schema: # The name of the destination_schema.
		# state: #clone
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_site "Manage sites in schemas" b
- name: $1
	mso_schema_site:
		schema: ${2:# The name of the schema.}
		# site: # The name of the site to manage.
		# template: # The name of the template.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_site_anp "Manage site-local Application Network Profiles (ANPs) in schema template" b
- name: $1
	mso_schema_site_anp:
		schema: ${2:# The name of the schema.}
		site: ${3:# The name of the site.}
		template: ${4:# The name of the template.}
		# anp: # The name of the ANP to manage.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_site_anp_epg "Manage site-local Endpoint Groups (EPGs) in schema template" b
- name: $1
	mso_schema_site_anp_epg:
		schema: ${2:# The name of the schema.}
		site: ${3:# The name of the site.}
		template: ${4:# The name of the template.}
		anp: ${5:# The name of the ANP.}
		# epg: # The name of the EPG to manage.
		# private_link_label: # The private link label used to represent this subnet.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_site_anp_epg_domain "Manage site-local EPG domains in schema template" b
- name: $1
	mso_schema_site_anp_epg_domain:
		schema: ${2:# The name of the schema.}
		site: ${3:# The name of the site.}
		template: ${4:# The name of the template.}
		anp: ${5:# The name of the ANP.}
		epg: ${6:# The name of the EPG.}
		# domain_association_type: vmmDomain|l3ExtDomain|l2ExtDomain|physicalDomain|fibreChannelDomain
		# domain_profile: # The domain profile name.
		# deployment_immediacy: immediate|lazy
		# resolution_immediacy: immediate|lazy|pre-provision
		# micro_seg_vlan_type: # Virtual LAN type for microsegmentation. This attribute can only be used with vmmDomain domain association.
		# micro_seg_vlan: # Virtual LAN for microsegmentation. This attribute can only be used with vmmDomain domain association.
		# port_encap_vlan_type: # Virtual LAN type for port encap. This attribute can only be used with vmmDomain domain association.
		# port_encap_vlan: # Virtual LAN type for port encap. This attribute can only be used with vmmDomain domain association.
		# vlan_encap_mode: static|dynamic
		# allow_micro_segmentation: # Specifies microsegmentation is enabled or not. This attribute can only be used with vmmDomain domain association.
		# switch_type: # Which switch type to use with this domain association. This attribute can only be used with vmmDomain domain association.
		# switching_mode: # Which switching mode to use with this domain association. This attribute can only be used with vmmDomain domain association.
		# enhanced_lagpolicy_name: # EPG enhanced lagpolicy name. This attribute can only be used with vmmDomain domain association.
		# enhanced_lagpolicy_dn: # Distinguished name of EPG lagpolicy. This attribute can only be used with vmmDomain domain association.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_site_anp_epg_selector "Manage site-local EPG selector in schema templates" b
- name: $1
	mso_schema_site_anp_epg_selector:
		schema: ${2:# The name of the schema.}
		site: ${3:# The name of the site.}
		template: ${4:# The name of the template.}
		anp: ${5:# The name of the ANP.}
		epg: ${6:# The name of the EPG to manage.}
		# selector: # The name of the selector.
		# expressions: # Expressions associated to this selector.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_site_anp_epg_staticleaf "Manage site-local EPG static leafs in schema template" b
- name: $1
	mso_schema_site_anp_epg_staticleaf:
		schema: ${2:# The name of the schema.}
		site: ${3:# The name of the site.}
		template: ${4:# The name of the template.}
		anp: ${5:# The name of the ANP.}
		epg: ${6:# The name of the EPG.}
		# pod: # The pod of the static leaf.
		# leaf: # The path of the static leaf.
		# vlan: # The VLAN id of the static leaf.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_site_anp_epg_staticport "Manage site-local EPG static ports in schema template" b
- name: $1
	mso_schema_site_anp_epg_staticport:
		schema: ${2:# The name of the schema.}
		site: ${3:# The name of the site.}
		template: ${4:# The name of the template.}
		anp: ${5:# The name of the ANP.}
		epg: ${6:# The name of the EPG.}
		# type: #port|vpc|dpc
		# pod: # The pod of the static port.
		# leaf: # The leaf of the static port.
		# fex: # The fex id of the static port.
		# path: # The path of the static port.
		# vlan: # The port encap VLAN id of the static port.
		# deployment_immediacy: immediate|#lazy
		# mode: native|regular|#untagged
		# primary_micro_segment_vlan: # Primary micro-seg VLAN of static port.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_site_anp_epg_subnet "Manage site-local EPG subnets in schema template" b
- name: $1
	mso_schema_site_anp_epg_subnet:
		schema: ${2:# The name of the schema.}
		site: ${3:# The name of the site.}
		template: ${4:# The name of the template.}
		anp: ${5:# The name of the ANP.}
		epg: ${6:# The name of the EPG.}
		subnet: ${7:# The IP range in CIDR notation.}
		# description: # The description of this subnet.
		# scope: #private|public
		# shared: no
		# no_default_gateway: no
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_site_bd "Manage site-local Bridge Domains (BDs) in schema template" b
- name: $1
	mso_schema_site_bd:
		schema: ${2:# The name of the schema.}
		site: ${3:# The name of the site.}
		template: ${4:# The name of the template.}
		# bd: # The name of the BD to manage.
		# host_route: # Whether host-based routing is enabled.
		# svi_mac: # SVI MAC Address
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_site_bd_l3out "Manage site-local BD l3out's in schema template" b
- name: $1
	mso_schema_site_bd_l3out:
		schema: ${2:# The name of the schema.}
		site: ${3:# The name of the site.}
		template: ${4:# The name of the template.}
		bd: ${5:# The name of the BD.}
		# l3out: # The name of the l3out.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_site_bd_subnet "Manage site-local BD subnets in schema template" b
- name: $1
	mso_schema_site_bd_subnet:
		schema: ${2:# The name of the schema.}
		site: ${3:# The name of the site.}
		template: ${4:# The name of the template.}
		bd: ${5:# The name of the BD.}
		# subnet: # The IP range in CIDR notation.
		# description: # The description of this subnet.
		# scope: private|public
		# shared: no
		# no_default_gateway: no
		# querier: no
		# is_virtual_ip: no
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_site_external_epg "Manage External EPG in schema of sites" b
- name: $1
	mso_schema_site_external_epg:
		schema: ${2:# The name of the schema.}
		template: ${3:# The name of the template to change.}
		site: ${4:# The name of the site.}
		# l3out: # The L3Out associated with the external epg.
		# external_epg: # The name of the External EPG to be managed.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_site_external_epg_selector "Manage External EPG selector in schema of cloud sites" b
- name: $1
	mso_schema_site_external_epg_selector:
		schema: ${2:# The name of the schema.}
		template: ${3:# The name of the template to change.}
		external_epg: ${4:# The name of the External EPG to be managed.}
		site: ${5:# The name of the cloud site.}
		# selector: # The name of the selector.
		# expressions: # Expressions associated to this selector.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_site_l3out "Manage site-local layer3 Out (L3Outs) in schema template" b
- name: $1
	mso_schema_site_l3out:
		schema: ${2:# The name of the schema.}
		site: ${3:# The name of the site.}
		template: ${4:# The name of the template.}
		# vrf: # The VRF associated to this L3out.
		# l3out: # The name of the l3out to manage.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_site_vrf "Manage site-local VRFs in schema template" b
- name: $1
	mso_schema_site_vrf:
		schema: ${2:# The name of the schema.}
		site: ${3:# The name of the site.}
		template: ${4:# The name of the template.}
		# vrf: # The name of the VRF to manage.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_site_vrf_region "Manage site-local VRF regions in schema template" b
- name: $1
	mso_schema_site_vrf_region:
		schema: ${2:# The name of the schema.}
		site: ${3:# The name of the site.}
		template: ${4:# The name of the template.}
		vrf: ${5:# The name of the VRF.}
		# region: # The name of the region to manage.
		# vpn_gateway_router: # Whether VPN Gateway Router is enabled or not.
		# container_overlay: # The name of the context profile type.
		# underlay_context_profile: # The name of the context profile type.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_site_vrf_region_cidr "Manage site-local VRF region CIDRs in schema template" b
- name: $1
	mso_schema_site_vrf_region_cidr:
		schema: ${2:# The name of the schema.}
		site: ${3:# The name of the site.}
		template: ${4:# The name of the template.}
		vrf: ${5:# The name of the VRF.}
		region: ${6:# The name of the region.}
		# cidr: # The name of the region CIDR to manage.
		# primary: yes
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_site_vrf_region_cidr_subnet "Manage site-local VRF regions in schema template" b
- name: $1
	mso_schema_site_vrf_region_cidr_subnet:
		schema: ${2:# The name of the schema.}
		site: ${3:# The name of the site.}
		template: ${4:# The name of the template.}
		vrf: ${5:# The name of the VRF.}
		region: ${6:# The name of the region.}
		cidr: ${7:# The IP range of for the region CIDR.}
		# subnet: # The IP subnet of this region CIDR.
		# private_link_label: # The private link label used to represent this subnet.
		# zone: # The name of the zone for the region CIDR subnet.
		# vgw: # Whether this subnet is used for the Azure Gateway in Azure.
		# hosted_vrf: # The name of hosted vrf associated with region CIDR subnet.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_site_vrf_region_hub_network "Manage site-local VRF region hub network in schema template" b
- name: $1
	mso_schema_site_vrf_region_hub_network:
		schema: ${2:# The name of the schema.}
		site: ${3:# The name of the site.}
		template: ${4:# The name of the template.}
		vrf: ${5:# The name of the VRF.}
		region: ${6:# The name of the region.}
		# hub_network: # The hub network to be managed.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_template "Manage templates in schemas" b
- name: $1
	mso_schema_template:
		tenant: ${2:# The tenant used for this template.}
		schema: ${3:# The name of the schema.}
		# schema_description: # The description of Schema is supported on versions of MSO that are 3.3 or greater.
		# template_description: # The description of template is supported on versions of MSO that are 3.3 or greater.
		# template: # The name of the template.
		# display_name: # The name as displayed on the MSO web interface.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_template_anp "Manage Application Network Profiles (ANPs) in schema templates" b
- name: $1
	mso_schema_template_anp:
		schema: ${2:# The name of the schema.}
		template: ${3:# The name of the template.}
		# anp: # The name of the ANP to manage.
		# description: # The description of ANP is supported on versions of MSO that are 3.3 or greater.
		# display_name: # The name as displayed on the MSO web interface.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_template_anp_epg "Manage Endpoint Groups (EPGs) in schema templates" b
- name: $1
	mso_schema_template_anp_epg:
		schema: ${2:# The name of the schema.}
		template: ${3:# The name of the template.}
		anp: ${4:# The name of the ANP.}
		# epg: # The name of the EPG to manage.
		# display_name: # The name as displayed on the MSO web interface.
		# description: # The description as displayed on the MSO web interface.
		# bd: # The BD associated to this ANP.
		# vrf: # The VRF associated to this ANP.
		# subnets: # The subnets associated to this ANP.
		# useg_epg: # Whether this is a USEG EPG.
		# intra_epg_isolation: enforced|unenforced
		# intersite_multicast_source: # Whether intersite multicast source is enabled.
		# proxy_arp: # Whether proxy arp is enabled.
		# preferred_group: # Whether this EPG is added to preferred group or not.
		# qos_level: # Quality of Service (QoS) allows you to classify the network traffic in the fabric.
		# epg_type: application|service
		# deployment_type: cloud_native|cloud_native_managed|third_party
		# access_type: private|public|public_and_private
		# service_type: # The service_type parameter refers to the type of cloud services.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_template_anp_epg_contract "Manage EPG contracts in schema templates" b
- name: $1
	mso_schema_template_anp_epg_contract:
		schema: ${2:# The name of the schema.}
		template: ${3:# The name of the template to change.}
		anp: ${4:# The name of the ANP.}
		epg: ${5:# The name of the EPG to manage.}
		# contract: # A contract associated to this EPG.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_template_anp_epg_selector "Manage EPG selector in schema templates" b
- name: $1
	mso_schema_template_anp_epg_selector:
		schema: ${2:# The name of the schema.}
		template: ${3:# The name of the template to change.}
		anp: ${4:# The name of the ANP.}
		epg: ${5:# The name of the EPG to manage.}
		# selector: # The name of the selector.
		# expressions: # Expressions associated to this selector.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_template_anp_epg_subnet "Manage EPG subnets in schema templates" b
- name: $1
	mso_schema_template_anp_epg_subnet:
		schema: ${2:# The name of the schema.}
		template: ${3:# The name of the template to change.}
		anp: ${4:# The name of the ANP.}
		epg: ${5:# The name of the EPG to manage.}
		subnet: ${6:# The IP range in CIDR notation.}
		# description: # The description of this subnet.
		# scope: #private|public
		# shared: no
		# no_default_gateway: no
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_template_bd "Manage Bridge Domains (BDs) in schema templates" b
- name: $1
	mso_schema_template_bd:
		schema: ${2:# The name of the schema.}
		template: ${3:# The name of the template.}
		# bd: # The name of the BD to manage.
		# display_name: # The name as displayed on the MSO web interface.
		# description: # The description of BD is supported on versions of MSO that are 3.3 or greater.
		# vrf: # The VRF associated to this BD. This is required only when creating a new BD.
		# dhcp_policy: # The DHCP Policy
		# dhcp_policies: # A list DHCP Policies to be assciated with the BD
		# subnets: # The subnets associated to this BD.
		# intersite_bum_traffic: # Whether to allow intersite BUM traffic.
		# optimize_wan_bandwidth: # Whether to optimize WAN bandwidth.
		# layer2_stretch: yes
		# layer2_unknown_unicast: flood|proxy
		# layer3_multicast: # Whether to enable L3 multicast.
		# unknown_multicast_flooding: flood|optimized_flooding
		# multi_destination_flooding: flood_in_bd|drop|encap-flood
		# ipv6_unknown_multicast_flooding: flood|optimized_flooding
		# arp_flooding: # ARP Flooding
		# virtual_mac_address: # Virtual MAC Address
		# unicast_routing: # Unicast Routing
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_template_bd_dhcp_policy "Manage BD DHCP Policy in schema templates" b
- name: $1
	mso_schema_template_bd_dhcp_policy:
		schema: ${2:# The name of the schema.}
		template: ${3:# The name of the template to change.}
		bd: ${4:# The name of the BD to manage.}
		# dhcp_policy: # The DHCP Policy
		# version: # The version of DHCP Relay Policy.
		# dhcp_option_policy: # The DHCP Option Policy.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_template_bd_subnet "Manage BD subnets in schema templates" b
- name: $1
	mso_schema_template_bd_subnet:
		schema: ${2:# The name of the schema.}
		template: ${3:# The name of the template to change.}
		bd: ${4:# The name of the BD to manage.}
		# subnet: # The IP range in CIDR notation.
		# description: # The description of this subnet.
		# is_virtual_ip: no
		# scope: private|public
		# shared: no
		# no_default_gateway: no
		# querier: no
		# primary: no
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_template_clone "Clone templates" b
- name: $1
	mso_schema_template_clone:
		# source_schema: # The name of the source_schema.
		# destination_schema: # The name of the destination_schema.
		# destination_tenant: # The name of the destination_schema.
		# source_template_name: # The name of the source template.
		# destination_template_name: # The name of the destination template.
		# destination_template_display_name: # The display name of the destination template.
		# state: #clone
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_template_contract_filter "Manage contract filters in schema templates" b
- name: $1
	mso_schema_template_contract_filter:
		schema: ${2:# The name of the schema.}
		template: ${3:# The name of the template.}
		contract: ${4:# The name of the contract to manage.}
		# description: # The description of contract is supported on versions of MSO that are 3.3 or greater.
		# contract_display_name: # The name as displayed on the MSO web interface.
		# contract_filter_type: #both-way|one-way
		# contract_scope: application-profile|global|tenant|vrf
		# filter: # The filter to associate with this contract.
		# filter_template: # The template name in which the filter is located.
		# filter_schema: # The schema name in which the filter is located.
		# filter_type: #both-way|consumer-to-provider|provider-to-consumer
		# filter_directives: log|none|policy_compression
		# qos_level: # The Contract QoS Level parameter is supported on versions of MSO that are 3.3 or greater.
		# action: permit|deny
		# priority: default|lowest_priority|medium_priority|highest_priority
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_template_deploy "Deploy schema templates to sites" b
- name: $1
	mso_schema_template_deploy:
		schema: ${2:# The name of the schema.}
		template: ${3:# The name of the template.}
		# site: # The name of the site B(to undeploy).
		# state: #deploy|status|undeploy
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_template_deploy_status "Check query of objects before deployment to site" b
- name: $1
	mso_schema_template_deploy_status:
		# schema: # The name of the schema.
		# template: # The name of the template.
		# site: # The name of the site.
		# state: #query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_template_external_epg "Manage external EPGs in schema templates" b
- name: $1
	mso_schema_template_external_epg:
		schema: ${2:# The name of the schema.}
		template: ${3:# The name of the template.}
		# external_epg: # The name of the external EPG to manage.
		# description: # The description of external EPG is supported on versions of MSO that are 3.3 or greater.
		# type: #on-premise|cloud
		# display_name: # The name as displayed on the MSO web interface.
		# vrf: # The VRF associated with the external epg.
		# l3out: # The L3Out associated with the external epg.
		# anp: # The anp associated with the external epg.
		# preferred_group: # Preferred Group is enabled for this External EPG or not.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_template_external_epg_contract "Manage Extrnal EPG contracts in schema templates" b
- name: $1
	mso_schema_template_external_epg_contract:
		schema: ${2:# The name of the schema.}
		template: ${3:# The name of the template to change.}
		external_epg: ${4:# The name of the EPG to manage.}
		# contract: # A contract associated to this EPG.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_template_external_epg_selector "Manage External EPG selector in schema templates" b
- name: $1
	mso_schema_template_external_epg_selector:
		schema: ${2:# The name of the schema.}
		template: ${3:# The name of the template to change.}
		external_epg: ${4:# The name of the External EPG to be managed.}
		# selector: # The name of the selector.
		# expressions: # Expressions associated to this selector.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_template_external_epg_subnet "Manage External EPG subnets in schema templates" b
- name: $1
	mso_schema_template_external_epg_subnet:
		schema: ${2:# The name of the schema.}
		template: ${3:# The name of the template to change.}
		external_epg: ${4:# The name of the External EPG to manage.}
		# subnet: # The IP range in CIDR notation.
		# scope: # The scope parameter contains two sections 1. Route Control and 2. External EPG Classification.
		# aggregate: # The aggregate option aggregates shared routes for the subnet.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_template_external_epg "Manage external EPGs in schema templates" b
- name: $1
	mso_schema_template_external_epg:
		schema: ${2:# The name of the schema.}
		template: ${3:# The name of the template.}
		# external_epg: # The name of the external EPG to manage.
		# description: # The description of external EPG is supported on versions of MSO that are 3.3 or greater.
		# type: #on-premise|cloud
		# display_name: # The name as displayed on the MSO web interface.
		# vrf: # The VRF associated with the external epg.
		# l3out: # The L3Out associated with the external epg.
		# anp: # The anp associated with the external epg.
		# preferred_group: # Preferred Group is enabled for this External EPG or not.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_template_filter_entry "Manage filter entries in schema templates" b
- name: $1
	mso_schema_template_filter_entry:
		schema: ${2:# The name of the schema.}
		template: ${3:# The name of the template.}
		filter: ${4:# The name of the filter to manage.}
		# filter_description: 
		# filter_display_name: # The name as displayed on the MSO web interface.
		# entry: # The filter entry name to manage.
		# display_name: # The name as displayed on the MSO web interface.
		# filter_entry_description: 
		# ethertype: arp|fcoe|ip|ipv4|ipv6|mac-security|mpls-unicast|trill|unspecified
		# ip_protocol: eigrp|egp|icmp|icmpv6|igmp|igp|l2tp|ospfigp|pim|tcp|udp|unspecified
		# tcp_session_rules: acknowledgement|established|finish|synchronize|reset|unspecified
		# source_from: # The source port range from.
		# source_to: # The source port range to.
		# destination_from: # The destination port range from.
		# destination_to: # The destination port range to.
		# arp_flag: reply|request|unspecified
		# stateful: # Whether this filter entry is stateful.
		# fragments_only: # Whether this filter entry only matches fragments.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_template_l3out "Manage l3outs in schema templates" b
- name: $1
	mso_schema_template_l3out:
		schema: ${2:# The name of the schema.}
		template: ${3:# The name of the template.}
		# l3out: # The name of the l3out to manage.
		# description: # The description of l3out is supported on versions of MSO that are 3.3 or greater.
		# display_name: # The name as displayed on the MSO web interface.
		# vrf: # The VRF associated to this L3out.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_template_migrate "Migrate Bridge Domains (BDs) and EPGs between templates" b
- name: $1
	mso_schema_template_migrate:
		schema: ${2:# The name of the schema.}
		template: ${3:# The name of the template.}
		target_schema: ${4:# The name of the target_schema.}
		target_template: ${5:# The name of the target_template.}
		# bds: # The name of the BDs to migrate.
		# epgs: # The name of the EPGs and the ANP it is in to migrate.
		# state: present
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_template_vrf "Manage VRFs in schema templates" b
- name: $1
	mso_schema_template_vrf:
		schema: ${2:# The name of the schema.}
		template: ${3:# The name of the template.}
		# vrf: # The name of the VRF to manage.
		# display_name: # The name as displayed on the MSO web interface.
		# layer3_multicast: # Whether to enable L3 multicast.
		# vzany: # Whether to enable vzAny.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_template_vrf_contract "Manage vrf contracts in schema templates" b
- name: $1
	mso_schema_template_vrf_contract:
		schema: ${2:# The name of the schema.}
		template: ${3:# The name of the template to change.}
		vrf: ${4:# The name of the VRF.}
		# contract: # A contract associated to this VRF.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_schema_validate "Validate the schema before deploying it to site" b
- name: $1
	mso_schema_validate:
		schema: ${2:# The name of the schema.}
		# state: #query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_site "Manage sites" b
- name: $1
	mso_site:
		# apic_password: # The password for the APICs.
		# apic_site_id: # The site ID of the APICs.
		# apic_username: admin
		# apic_login_domain: # The AAA login domain for the username for the APICs.
		# site: # The name of the site.
		# labels: # The labels for this site.
		# location: # Location of the site.
		# urls: # A list of URLs to reference the APICs.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_tenant "Manage tenants" b
- name: $1
	mso_tenant:
		# tenant: # The name of the tenant.
		# display_name: # The name of the tenant to be displayed in the web UI.
		# description: # The description for this tenant.
		# users: # A list of associated users for this tenant.
		# sites: # A list of associated sites for this tenant.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_tenant_site "Manage tenants with cloud sites." b
- name: $1
	mso_tenant_site:
		tenant: ${2:# The name of the tenant.}
		# site: # The name of the site.
		# cloud_account: # Required for cloud site.
		# security_domains: []
		# aws_account_org: no
		# aws_trusted: # AWS account's access in trusted mode. Credentials are required, when set to false.
		# aws_access_key: # AWS account's access key id. This is required when aws_trusted is set to false.
		# azure_access_type: managed|unmanaged|#shared
		# azure_active_directory_id: # Azure account's active directory id.
		# azure_active_directory_name: # Azure account's active directory name. Example being 'CiscoINSBUAd' as active directory name.
		# azure_subscription_id: # Azure account's subscription id.
		# azure_application_id: # Azure account's application id.
		# azure_credential_name: # Azure account's credential name.
		# secret_key: # secret key of AWS for untrusted account. Required when aws_trusted is set to false.
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_user "Manage users" b
- name: $1
	mso_user:
		# user: # The name of the user.
		# user_password: # The password of the user.
		# first_name: # The first name of the user.
		# last_name: # The last name of the user.
		# email: # The email address of the user.
		# phone: # The phone number of the user.
		# account_status: active|inactive
		# domain: # The domain this user belongs to.
		# roles: # The roles for this user and their access types (read or write).
		# state: absent|#present|query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet mso_version "Get version of MSO" b
- name: $1
	mso_version:
		# state: #query
		# host: # IP Address or hostname of the ACI Multi Site Orchestrator host.
		# port: # Port number to be used for the REST connection.
		# username: # The username to use for authentication.
		# password: # The password to use for authentication.
		# output_level: debug|info|#normal
		# timeout: 30
		# use_proxy: # If C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
		# use_ssl: # If C(no), an HTTP connection will be used instead of the default HTTPS connection.
		# validate_certs: # If C(no), SSL certificates will not be validated.
		# login_domain: # The login domain name to use for authentication.
$0
endsnippet

snippet ucs_disk_group_policy "Configures disk group policies on Cisco UCS Manager" b
- name: $1
	ucs_disk_group_policy:
		name: ${2:# The name of the disk group policy.}
		hostname: ${3:# IP address or hostname of Cisco UCS Manager.}
		password: ${4:# Password for Cisco UCS Manager authentication.}
		# state: #present|absent
		# description: # The user-defined description of the storage profile.
		# raid_level: #stripe|mirror|mirror-stripe|stripe-parity|stripe-dual-parity|stripe-parity-stripe|stripe-dual-parity-stripe
		# configuration_mode: #automatic|manual
		# num_drives: 1
		# drive_type: #unspecified|HDD|SSD
		# num_ded_hot_spares: unspecified
		# num_glob_hot_spares: unspecified
		# min_drive_size: unspecified
		# use_remaining_disks: yes|#no
		# manual_disks: # List of manually configured disks.
		# virtual_drive: # Configuration of virtual drive options.
		# org_dn: org-root
		# username: admin
		# port: # Port number to be used during connection (by default uses 443 for https and 80 for http connection).
		# use_ssl: yes
		# use_proxy: yes
		# proxy: # If use_proxy is no, specfies proxy to be used for connection. e.g. 'http://proxy.xy.z:8080'
$0
endsnippet

snippet ucs_dns_server "Configure DNS servers on Cisco UCS Manager" b
- name: $1
	ucs_dns_server:
		hostname: ${2:# IP address or hostname of Cisco UCS Manager.}
		password: ${3:# Password for Cisco UCS Manager authentication.}
		# state: absent|#present
		# dns_server: # DNS server IP address.
		# description: # A user-defined description of the DNS server.
		# delegate_to: localhost
		# username: admin
		# port: # Port number to be used during connection (by default uses 443 for https and 80 for http connection).
		# use_ssl: yes
		# use_proxy: yes
		# proxy: # If use_proxy is no, specfies proxy to be used for connection. e.g. 'http://proxy.xy.z:8080'
$0
endsnippet

snippet ucs_graphics_card_policy "Manages UCS Graphics Card Policies on UCS Manager" b
- name: $1
	ucs_graphics_card_policy:
		name: ${2:# The name of the organization.}
		hostname: ${3:# IP address or hostname of Cisco UCS Manager.}
		password: ${4:# Password for Cisco UCS Manager authentication.}
		# state: absent|#present
		# description: # A user-defined description of the organization.
		# graphics_card_mode: any-configuration|compute|graphics
		# org_dn: org-root
		# username: admin
		# port: # Port number to be used during connection (by default uses 443 for https and 80 for http connection).
		# use_ssl: yes
		# use_proxy: yes
		# proxy: # If use_proxy is no, specfies proxy to be used for connection. e.g. 'http://proxy.xy.z:8080'
$0
endsnippet

snippet ucs_ip_pool "Configures IP address pools on Cisco UCS Manager" b
- name: $1
	ucs_ip_pool:
		name: ${2:# The name of the IP address pool.}
		hostname: ${3:# IP address or hostname of Cisco UCS Manager.}
		password: ${4:# Password for Cisco UCS Manager authentication.}
		# state: #present|absent
		# description: # The user-defined description of the IP address pool.
		# order: #default|sequential
		# ip_blocks: # List of IPv4 blocks used by the IP Pool.
		# ipv6_blocks: # List of IPv6 blocks used by the IP Pool.
		# org_dn: org-root
		# username: admin
		# port: # Port number to be used during connection (by default uses 443 for https and 80 for http connection).
		# use_ssl: yes
		# use_proxy: yes
		# proxy: # If use_proxy is no, specfies proxy to be used for connection. e.g. 'http://proxy.xy.z:8080'
$0
endsnippet

snippet ucs_managed_objects "Configures Managed Objects on Cisco UCS Manager" b
- name: $1
	ucs_managed_objects:
		objects: ${2:# List of managed objects to configure.  Each managed object has suboptions the specify the Python SDK module, class, and properties to configure.}
		hostname: ${3:# IP address or hostname of Cisco UCS Manager.}
		password: ${4:# Password for Cisco UCS Manager authentication.}
		# state: absent|#present
		# username: admin
		# port: # Port number to be used during connection (by default uses 443 for https and 80 for http connection).
		# use_ssl: yes
		# use_proxy: yes
		# proxy: # If use_proxy is no, specfies proxy to be used for connection. e.g. 'http://proxy.xy.z:8080'
$0
endsnippet

snippet ucs_org "Manages UCS Organizations for UCS Manager" b
- name: $1
	ucs_org:
		hostname: ${2:# IP address or hostname of Cisco UCS Manager.}
		password: ${3:# Password for Cisco UCS Manager authentication.}
		# state: absent|#present
		# org_name: # The name of the organization.
		# parent_org_path: root
		# description: # A user-defined description of the organization.
		# delegate_to: localhost
		# username: admin
		# port: # Port number to be used during connection (by default uses 443 for https and 80 for http connection).
		# use_ssl: yes
		# use_proxy: yes
		# proxy: # If use_proxy is no, specfies proxy to be used for connection. e.g. 'http://proxy.xy.z:8080'
$0
endsnippet

snippet ucs_query "Queries UCS Manager objects by class or distinguished name" b
- name: $1
	ucs_query:
		hostname: ${2:# IP address or hostname of Cisco UCS Manager.}
		password: ${3:# Password for Cisco UCS Manager authentication.}
		# class_ids: # One or more UCS Manager Class IDs to query.
		# distinguished_names: # One or more UCS Manager Distinguished Names to query.
		# delegate_to: localhost
		# username: admin
		# port: # Port number to be used during connection (by default uses 443 for https and 80 for http connection).
		# use_ssl: yes
		# use_proxy: yes
		# proxy: # If use_proxy is no, specfies proxy to be used for connection. e.g. 'http://proxy.xy.z:8080'
$0
endsnippet

snippet ucs_scrub_policy "Manages UCS Scrub Policies on UCS Manager" b
- name: $1
	ucs_scrub_policy:
		name: ${2:# The name of the organization.}
		hostname: ${3:# IP address or hostname of Cisco UCS Manager.}
		password: ${4:# Password for Cisco UCS Manager authentication.}
		# state: absent|#present
		# description: # A user-defined description of the organization.
		# bios_settings_scrub: True|False
		# disk_scrub: True|False
		# flex_flash_scrub: True|False
		# persistent_memory_scrub: True|False
		# org_dn: org-root
		# username: admin
		# port: # Port number to be used during connection (by default uses 443 for https and 80 for http connection).
		# use_ssl: yes
		# use_proxy: yes
		# proxy: # If use_proxy is no, specfies proxy to be used for connection. e.g. 'http://proxy.xy.z:8080'
$0
endsnippet

snippet ucs_serial_over_lan_policy "Manages UCS Serial Over Lan Policies on UCS Manager" b
- name: $1
	ucs_serial_over_lan_policy:
		name: ${2:# The name of the serial over lan policy.}
		hostname: ${3:# IP address or hostname of Cisco UCS Manager.}
		password: ${4:# Password for Cisco UCS Manager authentication.}
		# state: absent|#present
		# description: # A user-defined description of the serial over lan policy.
		# admin_state: disable|enable
		# speed: 9600|19200|38400|57600|115200
		# org_dn: org-root
		# username: admin
		# port: # Port number to be used during connection (by default uses 443 for https and 80 for http connection).
		# use_ssl: yes
		# use_proxy: yes
		# proxy: # If use_proxy is no, specfies proxy to be used for connection. e.g. 'http://proxy.xy.z:8080'
$0
endsnippet

snippet ucs_server_maintenance "Creates Server Maintenance Policy on Cisco UCS Manager" b
- name: $1
	ucs_server_maintenance:
		name: ${2:# The name assigned to the Server Maintenance Policy.}
		uptime_disr: ${3:immediate|timer-automatic|user-ack}
		hostname: ${4:# IP address or hostname of Cisco UCS Manager.}
		password: ${5:# Password for Cisco UCS Manager authentication.}
		# state: #present|absent
		# description: # A description of the Server Maintenance Package Policy.
		# trigger_config: on-next-boot
		# username: admin
		# port: # Port number to be used during connection (by default uses 443 for https and 80 for http connection).
		# use_ssl: yes
		# use_proxy: yes
		# proxy: # If use_proxy is no, specfies proxy to be used for connection. e.g. 'http://proxy.xy.z:8080'
$0
endsnippet

snippet ucs_service_profile_association "Configures Service Profile Association on Cisco UCS Manager" b
- name: $1
	ucs_service_profile_association:
		service_profile_name: ${2:# The name of the Service Profile being associated or disassociated.}
		server_assignment: ${3:server|pool}
		hostname: ${4:# IP address or hostname of Cisco UCS Manager.}
		password: ${5:# Password for Cisco UCS Manager authentication.}
		# state: #present|absent
		# server_dn: # The Distinguished Name (dn) of the server object used for pre-provisioning or selecting an existing server.
		# server_pool_name: # Name of the server pool used for server pool based assignment.
		# restrict_migration: yes|#no
		# org_dn: org-root
		# username: admin
		# port: # Port number to be used during connection (by default uses 443 for https and 80 for http connection).
		# use_ssl: yes
		# use_proxy: yes
		# proxy: # If use_proxy is no, specfies proxy to be used for connection. e.g. 'http://proxy.xy.z:8080'
$0
endsnippet

snippet ucs_service_profile_from_template "Configures Service Profiles from templates on Cisco UCS Manager" b
- name: $1
	ucs_service_profile_from_template:
		name: ${2:# The name of the service profile.}
		source_template: ${3:# The name of the service profile template used to create this serivce profile.}
		hostname: ${4:# IP address or hostname of Cisco UCS Manager.}
		password: ${5:# Password for Cisco UCS Manager authentication.}
		# state: #present|absent
		# power_state: up|down
		# user_label: # The User Label you want to assign to this service profile.
		# org_dn: org-root
		# description: # Optional
		# username: admin
		# port: # Port number to be used during connection (by default uses 443 for https and 80 for http connection).
		# use_ssl: yes
		# use_proxy: yes
		# proxy: # If use_proxy is no, specfies proxy to be used for connection. e.g. 'http://proxy.xy.z:8080'
$0
endsnippet

snippet ucs_service_profile_template "Configures Service Profile Templates on Cisco UCS Manager" b
- name: $1
	ucs_service_profile_template:
		name: ${2:# The name of the service profile template.}
		hostname: ${3:# IP address or hostname of Cisco UCS Manager.}
		password: ${4:# Password for Cisco UCS Manager authentication.}
		# state: #present|absent
		# template_type: #initial-template|updating-template
		# uuid_pool: default
		# description: # A user-defined description of the service profile template.
		# storage_profile: # The name of the storage profile you want to associate with service profiles created from this template
		# local_disk_policy: # The name of the local disk policy you want to associate with service profiles created from this template.
		# lan_connectivity_policy: # The name of the LAN connectivity policy you want to associate with service profiles created from this template.
		# iqn_pool: # The name of the IQN pool (initiator) you want to apply to all iSCSI vNICs for service profiles created from this template.
		# san_connectivity_policy: # The name of the SAN connectivity policy you want to associate with service profiles created from this template.
		# vmedia_policy: # The name of the vMedia policy you want to associate with service profiles created from this template.
		# boot_policy: default
		# maintenance_policy: # The name of the maintenance policy you want to associate with service profiles created from this template.
		# server_pool: # The name of the server pool you want to associate with this service profile template.
		# server_pool_qualification: # The name of the server pool policy qualificaiton you want to use for this service profile template.
		# power_state: #up|down
		# host_firmware_package: # The name of the host firmware package you want to associate with service profiles created from this template.
		# bios_policy: # The name of the BIOS policy you want to associate with service profiles created from this template.
		# ipmi_access_profile: # The name of the IPMI access profile you want to associate with service profiles created from this template.
		# sol_policy: # The name of the Serial over LAN (SoL) policy you want to associate with service profiles created from this template.
		# mgmt_ip_state: none|#pooled
		# mgmt_ip_pool: ext-mgmt
		# power_control_policy: default
		# power_sync_policy: # The name of the power sync policy you want to associate with service profiles created from this template.
		# scrub_policy: # The name of the scrub policy you want to associate with service profiles created from this template.
		# kvm_mgmt_policy: # The name of the KVM management policy you want to associate with service profiles created from this template.
		# graphics_card_policy: # The name of the graphics card policy you want to associate with service profiles created from this template.
		# threshold_policy: default
		# user_label: # The User Label you want to assign to service profiles created from this template.
		# mgmt_interface_mode: |in-band
		# mgmt_vnet_name: # A VLAN selected from the associated VLAN group.
		# mgmt_inband_pool_name: # How the inband management IPv4 address is derived for the server associated with this service profile.
		# org_dn: org-root
		# username: admin
		# port: # Port number to be used during connection (by default uses 443 for https and 80 for http connection).
		# use_ssl: yes
		# use_proxy: yes
		# proxy: # If use_proxy is no, specfies proxy to be used for connection. e.g. 'http://proxy.xy.z:8080'
$0
endsnippet

snippet ucs_sp_vnic_order "Configures vNIC order for service profiles and templates on Cisco UCS Manager" b
- name: $1
	ucs_sp_vnic_order:
		hostname: ${2:# IP address or hostname of Cisco UCS Manager.}
		password: ${3:# Password for Cisco UCS Manager authentication.}
		# sp_name: # D
		# vnics: # L
		# org_dn: # r
		# username: admin
		# port: # Port number to be used during connection (by default uses 443 for https and 80 for http connection).
		# use_ssl: yes
		# use_proxy: yes
		# proxy: # If use_proxy is no, specfies proxy to be used for connection. e.g. 'http://proxy.xy.z:8080'
$0
endsnippet

snippet ucs_system_qos "Configures system QoS settings" b
- name: $1
	ucs_system_qos:
		priority: ${2:best-effort|bronze|fc|gold|platinum|silver}
		cos: ${3:any|0-6}
		weight: ${4:best-effort|none|0-10}
		hostname: ${5:# IP address or hostname of Cisco UCS Manager.}
		password: ${6:# Password for Cisco UCS Manager authentication.}
		# admin_state: disabled|#enabled
		# mtu: fc|#normal|0-4294967295
		# multicast_optimize: false|no|true|yes
		# drop: #drop|no-drop
		# username: admin
		# port: # Port number to be used during connection (by default uses 443 for https and 80 for http connection).
		# use_ssl: yes
		# use_proxy: yes
		# proxy: # If use_proxy is no, specfies proxy to be used for connection. e.g. 'http://proxy.xy.z:8080'
$0
endsnippet

snippet ucs_vlan_find "Find VLANs on Cisco UCS Manager" b
- name: $1
	ucs_vlan_find:
		hostname: ${2:# IP address or hostname of Cisco UCS Manager.}
		password: ${3:# Password for Cisco UCS Manager authentication.}
		# pattern: # Regex pattern to find within the name property of the fabricVlan class.
		# fabric: #common|A|B
		# vlanid: # The unique string identifier assigned to the VLAN.
		# username: admin
		# port: # Port number to be used during connection (by default uses 443 for https and 80 for http connection).
		# use_ssl: yes
		# use_proxy: yes
		# proxy: # If use_proxy is no, specfies proxy to be used for connection. e.g. 'http://proxy.xy.z:8080'
$0
endsnippet

snippet ucs_vlan_to_group "Add VLANs to a VLAN Group. Requires VLAN and VLAN Group to already be created on UCS prior to running module." b
- name: $1
	ucs_vlan_to_group:
		vlanname: ${2:# The name assigned to the VLAN.}
		vlangroup: ${3:# The name assigned to the VLAN Group.}
		hostname: ${4:# IP address or hostname of Cisco UCS Manager.}
		password: ${5:# Password for Cisco UCS Manager authentication.}
		# state: #present|absent
		# username: admin
		# port: # Port number to be used during connection (by default uses 443 for https and 80 for http connection).
		# use_ssl: yes
		# use_proxy: yes
		# proxy: # If use_proxy is no, specfies proxy to be used for connection. e.g. 'http://proxy.xy.z:8080'
$0
endsnippet

snippet aws_direct_connect_confirm_connection "Confirms the creation of a hosted DirectConnect connection." b
- name: $1
	aws_direct_connect_confirm_connection:
		# name: # The name of the Direct Connect connection.
		# connection_id: # The ID of the Direct Connect connection.
		# debug_botocore_endpoint_logs: no
		# ec2_url: # URL to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints). Ignored for modules where region is required. Must be specified for all other modules if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used.
		# aws_secret_key: # C(AWS secret key). If not set then the value of the C(AWS_SECRET_ACCESS_KEY), C(AWS_SECRET_KEY), or C(EC2_SECRET_KEY) environment variable is used.
		# aws_access_key: # C(AWS access key). If not set then the value of the C(AWS_ACCESS_KEY_ID), C(AWS_ACCESS_KEY) or C(EC2_ACCESS_KEY) environment variable is used.
		# security_token: # C(AWS STS security token). If not set then the value of the C(AWS_SECURITY_TOKEN) or C(EC2_SECURITY_TOKEN) environment variable is used.
		# aws_ca_bundle: # The location of a CA Bundle to use when validating SSL certificates.
		# validate_certs: yes
		# profile: # Using I(profile) will override I(aws_access_key), I(aws_secret_key) and I(security_token) and support for passing them at the same time as I(profile) has been deprecated.
		# aws_config: # A dictionary to modify the botocore configuration.
		# region: # The AWS region to use. If not specified then the value of the AWS_REGION or EC2_REGION environment variable, if any, is used. See U(http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region)
$0
endsnippet

snippet vmware_host_facts "Gathers facts about remote ESXi hostsystem" b
- name: $1
	vmware_host_facts:
		# esxi_hostname: # ESXi hostname.
		# show_tag: no
		# schema: #summary|vsphere
		# properties: # Specify the properties to retrieve.
		# hostname: # The hostname or IP address of the vSphere vCenter or ESXi server.
		# username: # The username of the vSphere vCenter or ESXi server.
		# password: # The password of the vSphere vCenter or ESXi server.
		# validate_certs: yes
		# port: 443
		# proxy_host: # Address of a proxy that will receive all HTTPS requests and relay them.
		# proxy_port: # Port of the HTTP proxy that will receive all HTTPS requests and relay them.
$0
endsnippet

snippet cyberark_account "Module for CyberArk Account object creation, deletion, and modification using PAS Web Services SDK." b
- name: $1
	cyberark_account:
		state: ${2:#present|absent}
		logging_level: ${3:NOTSET|DEBUG|INFO}
		api_base_url: ${4:# A string containing the base URL of the server hosting CyberArk's Privileged Account Security Web Services SDK.}
		cyberark_session: ${5:# Dictionary set by a CyberArk authentication containing the different values to perform actions on a logged-on CyberArk session, please see M(cyberark_authentication) module for an example of cyberark_session.}
		safe: ${6:# The safe in the Vault where the privileged account is to be located.}
		# logging_file: /tmp/ansible_cyberark.log
		# validate_certs: yes
		# identified_by: username,address,platform_id
		# platform_id: # The PolicyID of the Platform that is to be managing the account
		# address: # The address of the endpoint where the privileged account is located.
		# name: # The ObjectID of the account
		# secret_type: #password|key
		# secret: # The initial password for the creation of the account
		# new_secret: # The new secret/password to be stored in CyberArk Vault.
		# username: # The username associated with the account.
		# secret_management: # Set of parameters associated with the management of the credential.
		# remote_machines_access: # Set of parameters for defining PSM endpoint access targets.
		# platform_account_properties: # Object containing key-value pairs to associate with the account, as defined by the account platform. These properties are validated against the mandatory and optional properties of the specified platform's definition. Optional properties that do not exist on the account will not be returned here. Internal properties are not returned.
$0
endsnippet

snippet cyberark_credential "Credential retrieval using AAM Central Credential Provider." b
- name: $1
	cyberark_credential:
		api_base_url: ${2:# A string containing the base URL of the server hosting the Central Credential Provider.}
		app_id: ${3:# A string containing the Application ID authorized for retrieving the credential.}
		query: ${4:# A string containing details of the object being queried;}
		# validate_certs: yes
		# connection_timeout: 30
		# query_format: #Exact|Regexp
		# fail_request_on_password_change: no
		# client_cert: # A string containing the file location and name of the client certificate used for authentication.
		# client_key: # A string containing the file location and name of the private key of the client certificate used for authentication.
		# reason: # Reason for requesting credential if required by policy;
$0
endsnippet

snippet os10_command "Run commands on devices running Dell EMC SmartFabric OS10" b
- name: $1
	os10_command:
		commands: ${2:# List of commands to send to the remote OS10 device over the configured provider. The resulting output from the command is returned. If the I(wait_for) argument is provided, the module is not returned until the condition is satisfied or the number of retries has expired.}
		# wait_for: # List of conditions to evaluate against the output of the command. The task will wait for each condition to be true before moving forward. If the conditional is not true within the configured number of I(retries), the task fails. See examples.
		# match: #all|any
		# retries: 10
		# interval: 1
		# provider: # A dict object containing connection details.
$0
endsnippet

snippet os10_config "Manage Dell EMC SmartFabric OS10 configuration sections" b
- name: $1
	os10_config:
		# lines: # The ordered set of commands that should be configured in the section.  The commands must be the exact same commands as found in the device running-config. Be sure to note the configuration command syntax as some commands are automatically modified by the device config parser. This argument is mutually exclusive with I(src).
		# parents: # The ordered set of parents that uniquely identify the section or hierarchy the commands should be checked against.  If the parents argument is omitted, the commands are checked against the set of top level or global commands.
		# src: # Specifies the source path to the file that contains the configuration or configuration template to load.  The path to the source file can either be the full path on the Ansible control host or a relative path from the playbook or role root directory. This argument is mutually exclusive with I(lines).
		# before: # The ordered set of commands to push on to the command stack if a change needs to be made.  This allows the playbook designer the opportunity to perform configuration commands prior to pushing any changes without affecting how the set of commands are matched against the system.
		# after: # The ordered set of commands to append to the end of the command stack if a change needs to be made.  Just like with I(before) this allows the playbook designer to append a set of commands to be executed after the command set.
		# match: #line|strict|exact|none
		# replace: #line|block
		# update: #merge|check
		# save: no
		# config: # The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing against the contents of source.  There are times when it is not desirable to have the task get the current running-config for every task in a playbook.  The I(config) argument allows the implementer to pass in the configuration to use as the base config for comparison.
		# backup: no
		# backup_options: # This is a dict object containing configurable options related to backup file path. The value of this option is read only when C(backup) is set to I(yes), if C(backup) is set to I(no) this option will be silently ignored.
		# provider: # A dict object containing connection details.
$0
endsnippet

snippet os10_facts "Collect facts from devices running Dell EMC SmartFabric OS10" b
- name: $1
	os10_facts:
		# gather_subset: ['!config']
		# provider: # A dict object containing connection details.
$0
endsnippet

snippet os6_command "Run commands on devices running Dell EMC OS6" b
- name: $1
	os6_command:
		commands: ${2:# List of commands to send to the remote os6 device over the configured provider. The resulting output from the command is returned. If the I(wait_for) argument is provided, the module is not returned until the condition is satisfied or the number of retries has expired.}
		# wait_for: # List of conditions to evaluate against the output of the command. The task will wait for each condition to be true before moving forward. If the conditional is not true within the configured number of I(retries), the task fails. See examples.
		# match: #all|any
		# retries: 10
		# interval: 1
		# provider: # A dict object containing connection details.
$0
endsnippet

snippet os6_config "Manage Dell EMC OS6 configuration sections" b
- name: $1
	os6_config:
		# lines: # The ordered set of commands that should be configured in the section.  The commands must be the exact same commands as found in the device running-config. Be sure to note the configuration command syntax as some commands are automatically modified by the device config parser. This argument is mutually exclusive with I(src).
		# parents: # The ordered set of parents that uniquely identify the section or hierarchy the commands should be checked against.  If the parents argument is omitted, the commands are checked against the set of top level or global commands.
		# src: # Specifies the source path to the file that contains the configuration or configuration template to load.  The path to the source file can either be the full path on the Ansible control host or a relative path from the playbook or role root directory. This argument is mutually exclusive with I(lines).
		# before: # The ordered set of commands to push on to the command stack if a change needs to be made.  This allows the playbook designer the opportunity to perform configuration commands prior to pushing any changes without affecting how the set of commands are matched against the system.
		# after: # The ordered set of commands to append to the end of the command stack if a change needs to be made.  Just like with I(before) this allows the playbook designer to append a set of commands to be executed after the command set.
		# match: #line|strict|exact|none
		# replace: #line|block
		# update: #merge|check
		# save: no
		# config: # The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing against the contents of source.  There are times when it is not desirable to have the task get the current running-config for every task in a playbook.  The I(config) argument allows the implementer to pass in the configuration to use as the base config for comparison.
		# backup: no
		# backup_options: # This is a dict object containing configurable options related to backup file path. The value of this option is read only when C(backup) is set to I(yes), if C(backup) is set to I(no) this option will be silently ignored.
		# provider: # A dict object containing connection details.
$0
endsnippet

snippet os6_facts "Collect facts from devices running Dell EMC OS6" b
- name: $1
	os6_facts:
		# gather_subset: ['!config']
		# provider: # A dict object containing connection details.
$0
endsnippet

snippet os9_command "Run commands on remote devices running Dell OS9" b
- name: $1
	os9_command:
		commands: ${2:# List of commands to send to the remote os9 device over the configured provider. The resulting output from the command is returned. If the I(wait_for) argument is provided, the module is not returned until the condition is satisfied or the number of retries has expired.}
		# wait_for: # List of conditions to evaluate against the output of the command. The task will wait for each condition to be true before moving forward. If the conditional is not true within the configured number of I(retries), the task fails. See examples.
		# match: #all|any
		# retries: 10
		# interval: 1
		# provider: # A dict object containing connection details.
$0
endsnippet

snippet os9_config "Manage Dell EMC Networking OS9 configuration sections" b
- name: $1
	os9_config:
		# lines: # The ordered set of commands that should be configured in the section.  The commands must be the exact same commands as found in the device running-config. Be sure to note the configuration command syntax as some commands are automatically modified by the device config parser. This argument is mutually exclusive with I(src).
		# parents: # The ordered set of parents that uniquely identify the section or hierarchy the commands should be checked against.  If the parents argument is omitted, the commands are checked against the set of top level or global commands.
		# src: # Specifies the source path to the file that contains the configuration or configuration template to load.  The path to the source file can either be the full path on the Ansible control host or a relative path from the playbook or role root directory. This argument is mutually exclusive with I(lines).
		# before: # The ordered set of commands to push on to the command stack if a change needs to be made.  This allows the playbook designer the opportunity to perform configuration commands prior to pushing any changes without affecting how the set of commands are matched against the system.
		# after: # The ordered set of commands to append to the end of the command stack if a change needs to be made.  Just like with I(before) this allows the playbook designer to append a set of commands to be executed after the command set.
		# match: #line|strict|exact|none
		# replace: #line|block
		# update: #merge|check
		# save: no
		# config: # The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing against the contents of source.  There are times when it is not desirable to have the task get the current running-config for every task in a playbook.  The I(config) argument allows the implementer to pass in the configuration to use as the base config for comparison.
		# backup: no
		# backup_options: # This is a dict object containing configurable options related to backup file path. The value of this option is read only when C(backup) is set to I(yes), if C(backup) is set to I(no) this option will be silently ignored.
		# provider: # A dict object containing connection details.
$0
endsnippet

snippet os9_facts "Collect facts from remote devices running Dell EMC Networking OS9" b
- name: $1
	os9_facts:
		# gather_subset: ['!config']
		# provider: # A dict object containing connection details.
$0
endsnippet

snippet fmgr_adom_options "no description" b
- name: $1
	fmgr_adom_options:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# adom_options: # t
$0
endsnippet

snippet fmgr_antivirus_mmschecksum "Configure MMS content checksum list." b
- name: $1
	fmgr_antivirus_mmschecksum:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# antivirus_mmschecksum: # t
$0
endsnippet

snippet fmgr_antivirus_mmschecksum_entries "modify this MMS content checksum list" b
- name: $1
	fmgr_antivirus_mmschecksum_entries:
		state: ${2:present|absent}
		adom: ${3:# t}
		mms-checksum: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# antivirus_mmschecksum_entries: # t
$0
endsnippet

snippet fmgr_antivirus_notification "Configure AntiVirus notification lists." b
- name: $1
	fmgr_antivirus_notification:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# antivirus_notification: # t
$0
endsnippet

snippet fmgr_antivirus_notification_entries "modify this antivirus notification list" b
- name: $1
	fmgr_antivirus_notification_entries:
		state: ${2:present|absent}
		adom: ${3:# t}
		notification: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# antivirus_notification_entries: # t
$0
endsnippet

snippet fmgr_antivirus_profile "Configure AntiVirus profiles." b
- name: $1
	fmgr_antivirus_profile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# antivirus_profile: # t
$0
endsnippet

snippet fmgr_antivirus_profile_cifs "Configure CIFS AntiVirus options." b
- name: $1
	fmgr_antivirus_profile_cifs:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# antivirus_profile_cifs: # t
$0
endsnippet

snippet fmgr_antivirus_profile_contentdisarm "AV Content Disarm and Reconstruction settings." b
- name: $1
	fmgr_antivirus_profile_contentdisarm:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# antivirus_profile_contentdisarm: # t
$0
endsnippet

snippet fmgr_antivirus_profile_ftp "Configure FTP AntiVirus options." b
- name: $1
	fmgr_antivirus_profile_ftp:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# antivirus_profile_ftp: # t
$0
endsnippet

snippet fmgr_antivirus_profile_http "Configure HTTP AntiVirus options." b
- name: $1
	fmgr_antivirus_profile_http:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# antivirus_profile_http: # t
$0
endsnippet

snippet fmgr_antivirus_profile_imap "Configure IMAP AntiVirus options." b
- name: $1
	fmgr_antivirus_profile_imap:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# antivirus_profile_imap: # t
$0
endsnippet

snippet fmgr_antivirus_profile_mapi "Configure MAPI AntiVirus options." b
- name: $1
	fmgr_antivirus_profile_mapi:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# antivirus_profile_mapi: # t
$0
endsnippet

snippet fmgr_antivirus_profile_nacquar "Configure AntiVirus quarantine settings." b
- name: $1
	fmgr_antivirus_profile_nacquar:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# antivirus_profile_nacquar: # t
$0
endsnippet

snippet fmgr_antivirus_profile_nntp "Configure NNTP AntiVirus options." b
- name: $1
	fmgr_antivirus_profile_nntp:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# antivirus_profile_nntp: # t
$0
endsnippet

snippet fmgr_antivirus_profile_outbreakprevention "Configure Virus Outbreak Prevention settings." b
- name: $1
	fmgr_antivirus_profile_outbreakprevention:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# antivirus_profile_outbreakprevention: # t
$0
endsnippet

snippet fmgr_antivirus_profile_pop3 "Configure POP3 AntiVirus options." b
- name: $1
	fmgr_antivirus_profile_pop3:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# antivirus_profile_pop3: # t
$0
endsnippet

snippet fmgr_antivirus_profile_smb "Configure SMB AntiVirus options." b
- name: $1
	fmgr_antivirus_profile_smb:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# antivirus_profile_smb: # t
$0
endsnippet

snippet fmgr_antivirus_profile_smtp "Configure SMTP AntiVirus options." b
- name: $1
	fmgr_antivirus_profile_smtp:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# antivirus_profile_smtp: # t
$0
endsnippet

snippet fmgr_antivirus_profile_ssh "Configure SFTP and SCP AntiVirus options." b
- name: $1
	fmgr_antivirus_profile_ssh:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# antivirus_profile_ssh: # t
$0
endsnippet

snippet fmgr_apcfgprofile "Configure AP local configuration profiles." b
- name: $1
	fmgr_apcfgprofile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# apcfgprofile: # t
$0
endsnippet

snippet fmgr_apcfgprofile_commandlist "AP local configuration command list." b
- name: $1
	fmgr_apcfgprofile_commandlist:
		state: ${2:present|absent}
		adom: ${3:# t}
		apcfg-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# apcfgprofile_commandlist: # t
$0
endsnippet

snippet fmgr_application_categories "no description" b
- name: $1
	fmgr_application_categories:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# application_categories: # t
$0
endsnippet

snippet fmgr_application_custom "Configure custom application signatures." b
- name: $1
	fmgr_application_custom:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# application_custom: # t
$0
endsnippet

snippet fmgr_application_group "Configure firewall application groups." b
- name: $1
	fmgr_application_group:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# application_group: # t
$0
endsnippet

snippet fmgr_application_list "Configure application control lists." b
- name: $1
	fmgr_application_list:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# application_list: # t
$0
endsnippet

snippet fmgr_application_list_defaultnetworkservices "Default network service entries." b
- name: $1
	fmgr_application_list_defaultnetworkservices:
		state: ${2:present|absent}
		adom: ${3:# t}
		list: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# application_list_defaultnetworkservices: # t
$0
endsnippet

snippet fmgr_application_list_entries "Application list entries." b
- name: $1
	fmgr_application_list_entries:
		state: ${2:present|absent}
		adom: ${3:# t}
		list: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# application_list_entries: # t
$0
endsnippet

snippet fmgr_application_list_entries_parameters "Application parameters." b
- name: $1
	fmgr_application_list_entries_parameters:
		state: ${2:present|absent}
		adom: ${3:# t}
		list: ${4:# t}
		entries: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# application_list_entries_parameters: # t
$0
endsnippet

snippet fmgr_application_list_entries_parameters_members "Parameter tuple members." b
- name: $1
	fmgr_application_list_entries_parameters_members:
		state: ${2:present|absent}
		adom: ${3:# t}
		list: ${4:# t}
		entries: ${5:# t}
		parameters: ${6:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# application_list_entries_parameters_members: # t
$0
endsnippet

snippet fmgr_authentication_scheme "Configure Authentication Schemes." b
- name: $1
	fmgr_authentication_scheme:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# authentication_scheme: # t
$0
endsnippet

snippet fmgr_bleprofile "Configure Bluetooth Low Energy profile." b
- name: $1
	fmgr_bleprofile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# bleprofile: # t
$0
endsnippet

snippet fmgr_bonjourprofile "Configure Bonjour profiles." b
- name: $1
	fmgr_bonjourprofile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# bonjourprofile: # t
$0
endsnippet

snippet fmgr_bonjourprofile_policylist "Bonjour policy list." b
- name: $1
	fmgr_bonjourprofile_policylist:
		state: ${2:present|absent}
		adom: ${3:# t}
		bonjour-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# bonjourprofile_policylist: # t
$0
endsnippet

snippet fmgr_certificate_template "no description" b
- name: $1
	fmgr_certificate_template:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# certificate_template: # t
$0
endsnippet

snippet fmgr_cifs_domaincontroller "Define known domain controller servers." b
- name: $1
	fmgr_cifs_domaincontroller:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# cifs_domaincontroller: # t
$0
endsnippet

snippet fmgr_cifs_profile "Configure CIFS profile." b
- name: $1
	fmgr_cifs_profile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# cifs_profile: # t
$0
endsnippet

snippet fmgr_cifs_profile_filefilter "File filter." b
- name: $1
	fmgr_cifs_profile_filefilter:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# cifs_profile_filefilter: # t
$0
endsnippet

snippet fmgr_cifs_profile_filefilter_entries "File filter entries." b
- name: $1
	fmgr_cifs_profile_filefilter_entries:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# cifs_profile_filefilter_entries: # t
$0
endsnippet

snippet fmgr_cifs_profile_serverkeytab "Server keytab." b
- name: $1
	fmgr_cifs_profile_serverkeytab:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# cifs_profile_serverkeytab: # t
$0
endsnippet

snippet fmgr_clone "Clone an object in FortiManager." b
- name: $1
	fmgr_clone:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# clone: # t
$0
endsnippet

snippet fmgr_credentialstore_domaincontroller "Define known domain controller servers." b
- name: $1
	fmgr_credentialstore_domaincontroller:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# credentialstore_domaincontroller: # t
$0
endsnippet

snippet fmgr_devprof_device_profile_fortianalyzer "no description" b
- name: $1
	fmgr_devprof_device_profile_fortianalyzer:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_device_profile_fortianalyzer: # t
$0
endsnippet

snippet fmgr_devprof_device_profile_fortiguard "no description" b
- name: $1
	fmgr_devprof_device_profile_fortiguard:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_device_profile_fortiguard: # t
$0
endsnippet

snippet fmgr_devprof_import "no description" b
- name: $1
	fmgr_devprof_import:
		adom: ${2:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_import: # t
$0
endsnippet

snippet fmgr_devprof_log_fortianalyzer_setting "Global FortiAnalyzer settings." b
- name: $1
	fmgr_devprof_log_fortianalyzer_setting:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_log_fortianalyzer_setting: # t
$0
endsnippet

snippet fmgr_devprof_log_fortianalyzercloud_setting "Global FortiAnalyzer Cloud settings." b
- name: $1
	fmgr_devprof_log_fortianalyzercloud_setting:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_log_fortianalyzercloud_setting: # t
$0
endsnippet

snippet fmgr_devprof_log_syslogd_filter "Filters for remote system server." b
- name: $1
	fmgr_devprof_log_syslogd_filter:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_log_syslogd_filter: # t
$0
endsnippet

snippet fmgr_devprof_log_syslogd_setting "Global settings for remote syslog server." b
- name: $1
	fmgr_devprof_log_syslogd_setting:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_log_syslogd_setting: # t
$0
endsnippet

snippet fmgr_devprof_system_centralmanagement "Configure central management." b
- name: $1
	fmgr_devprof_system_centralmanagement:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_centralmanagement: # t
$0
endsnippet

snippet fmgr_devprof_system_centralmanagement_serverlist "Additional severs that the FortiGate can use for updates" b
- name: $1
	fmgr_devprof_system_centralmanagement_serverlist:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_centralmanagement_serverlist: # t
$0
endsnippet

snippet fmgr_devprof_system_dns "Configure DNS." b
- name: $1
	fmgr_devprof_system_dns:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_dns: # t
$0
endsnippet

snippet fmgr_devprof_system_emailserver "Configure the email server used by the FortiGate various things." b
- name: $1
	fmgr_devprof_system_emailserver:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_emailserver: # t
$0
endsnippet

snippet fmgr_devprof_system_global "Configure global attributes." b
- name: $1
	fmgr_devprof_system_global:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_global: # t
$0
endsnippet

snippet fmgr_devprof_system_ntp "Configure system NTP information." b
- name: $1
	fmgr_devprof_system_ntp:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_ntp: # t
$0
endsnippet

snippet fmgr_devprof_system_ntp_ntpserver "Configure the FortiGate to connect to any available third-party NTP server." b
- name: $1
	fmgr_devprof_system_ntp_ntpserver:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_ntp_ntpserver: # t
$0
endsnippet

snippet fmgr_devprof_system_replacemsg_admin "Replacement messages." b
- name: $1
	fmgr_devprof_system_replacemsg_admin:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_replacemsg_admin: # t
$0
endsnippet

snippet fmgr_devprof_system_replacemsg_alertmail "Replacement messages." b
- name: $1
	fmgr_devprof_system_replacemsg_alertmail:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_replacemsg_alertmail: # t
$0
endsnippet

snippet fmgr_devprof_system_replacemsg_auth "Replacement messages." b
- name: $1
	fmgr_devprof_system_replacemsg_auth:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_replacemsg_auth: # t
$0
endsnippet

snippet fmgr_devprof_system_replacemsg_devicedetectionportal "Replacement messages." b
- name: $1
	fmgr_devprof_system_replacemsg_devicedetectionportal:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_replacemsg_devicedetectionportal: # t
$0
endsnippet

snippet fmgr_devprof_system_replacemsg_ec "Replacement messages." b
- name: $1
	fmgr_devprof_system_replacemsg_ec:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_replacemsg_ec: # t
$0
endsnippet

snippet fmgr_devprof_system_replacemsg_fortiguardwf "Replacement messages." b
- name: $1
	fmgr_devprof_system_replacemsg_fortiguardwf:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_replacemsg_fortiguardwf: # t
$0
endsnippet

snippet fmgr_devprof_system_replacemsg_ftp "Replacement messages." b
- name: $1
	fmgr_devprof_system_replacemsg_ftp:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_replacemsg_ftp: # t
$0
endsnippet

snippet fmgr_devprof_system_replacemsg_http "Replacement messages." b
- name: $1
	fmgr_devprof_system_replacemsg_http:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_replacemsg_http: # t
$0
endsnippet

snippet fmgr_devprof_system_replacemsg_mail "Replacement messages." b
- name: $1
	fmgr_devprof_system_replacemsg_mail:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_replacemsg_mail: # t
$0
endsnippet

snippet fmgr_devprof_system_replacemsg_mms "Replacement messages." b
- name: $1
	fmgr_devprof_system_replacemsg_mms:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_replacemsg_mms: # t
$0
endsnippet

snippet fmgr_devprof_system_replacemsg_nacquar "Replacement messages." b
- name: $1
	fmgr_devprof_system_replacemsg_nacquar:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_replacemsg_nacquar: # t
$0
endsnippet

snippet fmgr_devprof_system_replacemsg_nntp "Replacement messages." b
- name: $1
	fmgr_devprof_system_replacemsg_nntp:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_replacemsg_nntp: # t
$0
endsnippet

snippet fmgr_devprof_system_replacemsg_spam "Replacement messages." b
- name: $1
	fmgr_devprof_system_replacemsg_spam:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_replacemsg_spam: # t
$0
endsnippet

snippet fmgr_devprof_system_replacemsg_sslvpn "Replacement messages." b
- name: $1
	fmgr_devprof_system_replacemsg_sslvpn:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_replacemsg_sslvpn: # t
$0
endsnippet

snippet fmgr_devprof_system_replacemsg_trafficquota "Replacement messages." b
- name: $1
	fmgr_devprof_system_replacemsg_trafficquota:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_replacemsg_trafficquota: # t
$0
endsnippet

snippet fmgr_devprof_system_replacemsg_utm "Replacement messages." b
- name: $1
	fmgr_devprof_system_replacemsg_utm:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_replacemsg_utm: # t
$0
endsnippet

snippet fmgr_devprof_system_replacemsg_webproxy "Replacement messages." b
- name: $1
	fmgr_devprof_system_replacemsg_webproxy:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_replacemsg_webproxy: # t
$0
endsnippet

snippet fmgr_devprof_system_snmp_community "SNMP community configuration." b
- name: $1
	fmgr_devprof_system_snmp_community:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_snmp_community: # t
$0
endsnippet

snippet fmgr_devprof_system_snmp_community_hosts "Configure IPv4 SNMP managers" b
- name: $1
	fmgr_devprof_system_snmp_community_hosts:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		community: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_snmp_community_hosts: # t
$0
endsnippet

snippet fmgr_devprof_system_snmp_community_hosts6 "Configure IPv6 SNMP managers." b
- name: $1
	fmgr_devprof_system_snmp_community_hosts6:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		community: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_snmp_community_hosts6: # t
$0
endsnippet

snippet fmgr_devprof_system_snmp_sysinfo "SNMP system info configuration." b
- name: $1
	fmgr_devprof_system_snmp_sysinfo:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_snmp_sysinfo: # t
$0
endsnippet

snippet fmgr_devprof_system_snmp_user "SNMP user configuration." b
- name: $1
	fmgr_devprof_system_snmp_user:
		state: ${2:present|absent}
		adom: ${3:# t}
		devprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# devprof_system_snmp_user: # t
$0
endsnippet

snippet fmgr_dlp_filepattern "Configure file patterns used by DLP blocking." b
- name: $1
	fmgr_dlp_filepattern:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dlp_filepattern: # t
$0
endsnippet

snippet fmgr_dlp_filepattern_entries "Configure file patterns used by DLP blocking." b
- name: $1
	fmgr_dlp_filepattern_entries:
		state: ${2:present|absent}
		adom: ${3:# t}
		filepattern: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dlp_filepattern_entries: # t
$0
endsnippet

snippet fmgr_dlp_fpsensitivity "Create self-explanatory DLP sensitivity levels to be used when setting sensitivity under config fp-doc-source." b
- name: $1
	fmgr_dlp_fpsensitivity:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dlp_fpsensitivity: # t
$0
endsnippet

snippet fmgr_dlp_sensitivity "Create self-explanatory DLP sensitivity levels to be used when setting sensitivity under config fp-doc-source." b
- name: $1
	fmgr_dlp_sensitivity:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dlp_sensitivity: # t
$0
endsnippet

snippet fmgr_dlp_sensor "Configure DLP sensors." b
- name: $1
	fmgr_dlp_sensor:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dlp_sensor: # t
$0
endsnippet

snippet fmgr_dlp_sensor_filter "Set up DLP filters for this sensor." b
- name: $1
	fmgr_dlp_sensor_filter:
		state: ${2:present|absent}
		adom: ${3:# t}
		sensor: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dlp_sensor_filter: # t
$0
endsnippet

snippet fmgr_dnsfilter_domainfilter "Configure DNS domain filters." b
- name: $1
	fmgr_dnsfilter_domainfilter:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dnsfilter_domainfilter: # t
$0
endsnippet

snippet fmgr_dnsfilter_domainfilter_entries "DNS domain filter entries." b
- name: $1
	fmgr_dnsfilter_domainfilter_entries:
		state: ${2:present|absent}
		adom: ${3:# t}
		domain-filter: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dnsfilter_domainfilter_entries: # t
$0
endsnippet

snippet fmgr_dnsfilter_profile "Configure DNS domain filter profiles." b
- name: $1
	fmgr_dnsfilter_profile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dnsfilter_profile: # t
$0
endsnippet

snippet fmgr_dnsfilter_profile_dnstranslation "DNS translation settings." b
- name: $1
	fmgr_dnsfilter_profile_dnstranslation:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dnsfilter_profile_dnstranslation: # t
$0
endsnippet

snippet fmgr_dnsfilter_profile_domainfilter "Domain filter settings." b
- name: $1
	fmgr_dnsfilter_profile_domainfilter:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dnsfilter_profile_domainfilter: # t
$0
endsnippet

snippet fmgr_dnsfilter_profile_ftgddns "FortiGuard DNS Filter settings." b
- name: $1
	fmgr_dnsfilter_profile_ftgddns:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dnsfilter_profile_ftgddns: # t
$0
endsnippet

snippet fmgr_dnsfilter_profile_ftgddns_filters "FortiGuard DNS domain filters." b
- name: $1
	fmgr_dnsfilter_profile_ftgddns_filters:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dnsfilter_profile_ftgddns_filters: # t
$0
endsnippet

snippet fmgr_dvm_cmd_add_device "Add a device to the Device Manager database." b
- name: $1
	fmgr_dvm_cmd_add_device:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvm_cmd_add_device: # t
$0
endsnippet

snippet fmgr_dvm_cmd_add_devlist "Add multiple devices to the Device Manager database." b
- name: $1
	fmgr_dvm_cmd_add_devlist:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvm_cmd_add_devlist: # t
$0
endsnippet

snippet fmgr_dvm_cmd_changehaseq "Modify HA sequence to promote a slave to become the master of the cluster." b
- name: $1
	fmgr_dvm_cmd_changehaseq:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvm_cmd_changehaseq: # t
$0
endsnippet

snippet fmgr_dvm_cmd_del_device "Delete a device." b
- name: $1
	fmgr_dvm_cmd_del_device:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvm_cmd_del_device: # t
$0
endsnippet

snippet fmgr_dvm_cmd_del_devlist "Delete a list of devices." b
- name: $1
	fmgr_dvm_cmd_del_devlist:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvm_cmd_del_devlist: # t
$0
endsnippet

snippet fmgr_dvm_cmd_discover_device "Probe a remote device and retrieve its device information and system status." b
- name: $1
	fmgr_dvm_cmd_discover_device:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvm_cmd_discover_device: # t
$0
endsnippet

snippet fmgr_dvm_cmd_import_devlist "Import a list of ADOMs and devices." b
- name: $1
	fmgr_dvm_cmd_import_devlist:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvm_cmd_import_devlist: # t
$0
endsnippet

snippet fmgr_dvm_cmd_reload_devlist "Retrieve a list of devices." b
- name: $1
	fmgr_dvm_cmd_reload_devlist:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvm_cmd_reload_devlist: # t
$0
endsnippet

snippet fmgr_dvm_cmd_update_device "Refresh the FGFM connection and system information of a device." b
- name: $1
	fmgr_dvm_cmd_update_device:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvm_cmd_update_device: # t
$0
endsnippet

snippet fmgr_dvm_cmd_update_devlist "Refresh FGFM connection and system information for a list of devices." b
- name: $1
	fmgr_dvm_cmd_update_devlist:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvm_cmd_update_devlist: # t
$0
endsnippet

snippet fmgr_dvmdb_adom "ADOM table, most attributes are read-only and can only be changed internally." b
- name: $1
	fmgr_dvmdb_adom:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvmdb_adom: # t
$0
endsnippet

snippet fmgr_dvmdb_adom_objectmember "ADOM table, most attributes are read-only and can only be changed internally." b
- name: $1
	fmgr_dvmdb_adom_objectmember:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvmdb_adom_objectmember: # t
$0
endsnippet

snippet fmgr_dvmdb_device "Device table, most attributes are read-only and can only be changed internally." b
- name: $1
	fmgr_dvmdb_device:
		state: ${2:present|absent}
		adom: ${3:# t}
		device: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvmdb_device: # t
$0
endsnippet

snippet fmgr_dvmdb_device_replace_sn "Replace devices serial number with new value." b
- name: $1
	fmgr_dvmdb_device_replace_sn:
		adom: ${2:# t}
		device_name: ${3:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvmdb_device_replace_sn: # t
$0
endsnippet

snippet fmgr_dvmdb_device_vdom "Device VDOM table." b
- name: $1
	fmgr_dvmdb_device_vdom:
		state: ${2:present|absent}
		adom: ${3:# t}
		device: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvmdb_device_vdom: # t
$0
endsnippet

snippet fmgr_dvmdb_folder "no description" b
- name: $1
	fmgr_dvmdb_folder:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvmdb_folder: # t
$0
endsnippet

snippet fmgr_dvmdb_group "Device group table." b
- name: $1
	fmgr_dvmdb_group:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvmdb_group: # t
$0
endsnippet

snippet fmgr_dvmdb_group_objectmember "Device group table." b
- name: $1
	fmgr_dvmdb_group_objectmember:
		state: ${2:present|absent}
		adom: ${3:# t}
		group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvmdb_group_objectmember: # t
$0
endsnippet

snippet fmgr_dvmdb_metafields_adom "no description" b
- name: $1
	fmgr_dvmdb_metafields_adom:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvmdb_metafields_adom: # t
$0
endsnippet

snippet fmgr_dvmdb_metafields_device "no description" b
- name: $1
	fmgr_dvmdb_metafields_device:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvmdb_metafields_device: # t
$0
endsnippet

snippet fmgr_dvmdb_metafields_group "no description" b
- name: $1
	fmgr_dvmdb_metafields_group:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvmdb_metafields_group: # t
$0
endsnippet

snippet fmgr_dvmdb_revision "ADOM revision table." b
- name: $1
	fmgr_dvmdb_revision:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvmdb_revision: # t
$0
endsnippet

snippet fmgr_dvmdb_script "Script table." b
- name: $1
	fmgr_dvmdb_script:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvmdb_script: # t
$0
endsnippet

snippet fmgr_dvmdb_script_execute "Run script." b
- name: $1
	fmgr_dvmdb_script_execute:
		adom: ${2:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvmdb_script_execute: # t
$0
endsnippet

snippet fmgr_dvmdb_script_objectmember "Script table." b
- name: $1
	fmgr_dvmdb_script_objectmember:
		state: ${2:present|absent}
		adom: ${3:# t}
		script: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvmdb_script_objectmember: # t
$0
endsnippet

snippet fmgr_dvmdb_script_scriptschedule "Script schedule table." b
- name: $1
	fmgr_dvmdb_script_scriptschedule:
		state: ${2:present|absent}
		adom: ${3:# t}
		script: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvmdb_script_scriptschedule: # t
$0
endsnippet

snippet fmgr_dvmdb_workflow_approve "no description" b
- name: $1
	fmgr_dvmdb_workflow_approve:
		adom: ${2:# t}
		session_id: ${3:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvmdb_workflow_approve: # t
$0
endsnippet

snippet fmgr_dvmdb_workflow_discard "no description" b
- name: $1
	fmgr_dvmdb_workflow_discard:
		adom: ${2:# t}
		session_id: ${3:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
$0
endsnippet

snippet fmgr_dvmdb_workflow_drop "no description" b
- name: $1
	fmgr_dvmdb_workflow_drop:
		adom: ${2:# t}
		session_id: ${3:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
$0
endsnippet

snippet fmgr_dvmdb_workflow_reject "no description" b
- name: $1
	fmgr_dvmdb_workflow_reject:
		adom: ${2:# t}
		session_id: ${3:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvmdb_workflow_reject: # t
$0
endsnippet

snippet fmgr_dvmdb_workflow_repair "no description" b
- name: $1
	fmgr_dvmdb_workflow_repair:
		adom: ${2:# t}
		session_id: ${3:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvmdb_workflow_repair: # t
$0
endsnippet

snippet fmgr_dvmdb_workflow_revert "no description" b
- name: $1
	fmgr_dvmdb_workflow_revert:
		adom: ${2:# t}
		session_id: ${3:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvmdb_workflow_revert: # t
$0
endsnippet

snippet fmgr_dvmdb_workflow_review "no description" b
- name: $1
	fmgr_dvmdb_workflow_review:
		adom: ${2:# t}
		session_id: ${3:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
$0
endsnippet

snippet fmgr_dvmdb_workflow_save "no description" b
- name: $1
	fmgr_dvmdb_workflow_save:
		adom: ${2:# t}
		session_id: ${3:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
$0
endsnippet

snippet fmgr_dvmdb_workflow_start "Continue a workflow session." b
- name: $1
	fmgr_dvmdb_workflow_start:
		adom: ${2:# t}
		session_id: ${3:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvmdb_workflow_start: # t
$0
endsnippet

snippet fmgr_dvmdb_workflow_submit "no description" b
- name: $1
	fmgr_dvmdb_workflow_submit:
		adom: ${2:# t}
		session_id: ${3:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dvmdb_workflow_submit: # t
$0
endsnippet

snippet fmgr_dvmdb_workspace_commit "Commit change" b
- name: $1
	fmgr_dvmdb_workspace_commit:
		adom: ${2:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
$0
endsnippet

snippet fmgr_dvmdb_workspace_commit_dev "Commit change" b
- name: $1
	fmgr_dvmdb_workspace_commit_dev:
		adom: ${2:# t}
		device_name: ${3:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
$0
endsnippet

snippet fmgr_dvmdb_workspace_commit_obj "Commit change" b
- name: $1
	fmgr_dvmdb_workspace_commit_obj:
		adom: ${2:# t}
		object_url_name: ${3:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
$0
endsnippet

snippet fmgr_dvmdb_workspace_commit_pkg "Commit change" b
- name: $1
	fmgr_dvmdb_workspace_commit_pkg:
		adom: ${2:# t}
		package_path_name: ${3:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
$0
endsnippet

snippet fmgr_dvmdb_workspace_lock "Lock an entire ADOM." b
- name: $1
	fmgr_dvmdb_workspace_lock:
		adom: ${2:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
$0
endsnippet

snippet fmgr_dvmdb_workspace_lock_dev "Lock a device." b
- name: $1
	fmgr_dvmdb_workspace_lock_dev:
		adom: ${2:# t}
		device_name: ${3:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
$0
endsnippet

snippet fmgr_dvmdb_workspace_lock_obj "Lock a specific object, where the url contains the full path to the object" b
- name: $1
	fmgr_dvmdb_workspace_lock_obj:
		adom: ${2:# t}
		object_url_name: ${3:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
$0
endsnippet

snippet fmgr_dvmdb_workspace_lock_pkg "Lock a specific package, where the url includes both the folder" b
- name: $1
	fmgr_dvmdb_workspace_lock_pkg:
		adom: ${2:# t}
		package_path_name: ${3:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
$0
endsnippet

snippet fmgr_dvmdb_workspace_unlock "Unlock an entire ADOM." b
- name: $1
	fmgr_dvmdb_workspace_unlock:
		adom: ${2:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
$0
endsnippet

snippet fmgr_dvmdb_workspace_unlock_dev "Unlock a device." b
- name: $1
	fmgr_dvmdb_workspace_unlock_dev:
		adom: ${2:# t}
		device_name: ${3:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
$0
endsnippet

snippet fmgr_dvmdb_workspace_unlock_obj "Unlock a specific object, where the url contains the full path to the object" b
- name: $1
	fmgr_dvmdb_workspace_unlock_obj:
		adom: ${2:# t}
		object_url_name: ${3:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
$0
endsnippet

snippet fmgr_dvmdb_workspace_unlock_pkg "Unlock a specific package, where the url includes both the folder" b
- name: $1
	fmgr_dvmdb_workspace_unlock_pkg:
		adom: ${2:# t}
		package_path_name: ${3:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
$0
endsnippet

snippet fmgr_dynamic_address "no description" b
- name: $1
	fmgr_dynamic_address:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dynamic_address: # t
$0
endsnippet

snippet fmgr_dynamic_address_dynamicaddrmapping "no description" b
- name: $1
	fmgr_dynamic_address_dynamicaddrmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		address: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dynamic_address_dynamicaddrmapping: # t
$0
endsnippet

snippet fmgr_dynamic_certificate_local "no description" b
- name: $1
	fmgr_dynamic_certificate_local:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dynamic_certificate_local: # t
$0
endsnippet

snippet fmgr_dynamic_certificate_local_dynamicmapping "no description" b
- name: $1
	fmgr_dynamic_certificate_local_dynamicmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		local: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dynamic_certificate_local_dynamicmapping: # t
$0
endsnippet

snippet fmgr_dynamic_input_interface "no description" b
- name: $1
	fmgr_dynamic_input_interface:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dynamic_input_interface: # t
$0
endsnippet

snippet fmgr_dynamic_input_interface_dynamicmapping "no description" b
- name: $1
	fmgr_dynamic_input_interface_dynamicmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		interface: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dynamic_input_interface_dynamicmapping: # t
$0
endsnippet

snippet fmgr_dynamic_interface "no description" b
- name: $1
	fmgr_dynamic_interface:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dynamic_interface: # t
$0
endsnippet

snippet fmgr_dynamic_interface_dynamicmapping "no description" b
- name: $1
	fmgr_dynamic_interface_dynamicmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		interface: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dynamic_interface_dynamicmapping: # t
$0
endsnippet

snippet fmgr_dynamic_interface_platformmapping "no description" b
- name: $1
	fmgr_dynamic_interface_platformmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		interface: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dynamic_interface_platformmapping: # t
$0
endsnippet

snippet fmgr_dynamic_ippool "no description" b
- name: $1
	fmgr_dynamic_ippool:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dynamic_ippool: # t
$0
endsnippet

snippet fmgr_dynamic_multicast_interface "no description" b
- name: $1
	fmgr_dynamic_multicast_interface:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dynamic_multicast_interface: # t
$0
endsnippet

snippet fmgr_dynamic_multicast_interface_dynamicmapping "no description" b
- name: $1
	fmgr_dynamic_multicast_interface_dynamicmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		interface: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dynamic_multicast_interface_dynamicmapping: # t
$0
endsnippet

snippet fmgr_dynamic_vip "no description" b
- name: $1
	fmgr_dynamic_vip:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dynamic_vip: # t
$0
endsnippet

snippet fmgr_dynamic_virtualwanlink_members "no description" b
- name: $1
	fmgr_dynamic_virtualwanlink_members:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dynamic_virtualwanlink_members: # t
$0
endsnippet

snippet fmgr_dynamic_virtualwanlink_members_dynamicmapping "no description" b
- name: $1
	fmgr_dynamic_virtualwanlink_members_dynamicmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		members: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dynamic_virtualwanlink_members_dynamicmapping: # t
$0
endsnippet

snippet fmgr_dynamic_virtualwanlink_neighbor "no description" b
- name: $1
	fmgr_dynamic_virtualwanlink_neighbor:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dynamic_virtualwanlink_neighbor: # t
$0
endsnippet

snippet fmgr_dynamic_virtualwanlink_neighbor_dynamicmapping "no description" b
- name: $1
	fmgr_dynamic_virtualwanlink_neighbor_dynamicmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		neighbor: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dynamic_virtualwanlink_neighbor_dynamicmapping: # t
$0
endsnippet

snippet fmgr_dynamic_virtualwanlink_server "no description" b
- name: $1
	fmgr_dynamic_virtualwanlink_server:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dynamic_virtualwanlink_server: # t
$0
endsnippet

snippet fmgr_dynamic_virtualwanlink_server_dynamicmapping "no description" b
- name: $1
	fmgr_dynamic_virtualwanlink_server_dynamicmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		server: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dynamic_virtualwanlink_server_dynamicmapping: # t
$0
endsnippet

snippet fmgr_dynamic_vpntunnel "no description" b
- name: $1
	fmgr_dynamic_vpntunnel:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dynamic_vpntunnel: # t
$0
endsnippet

snippet fmgr_dynamic_vpntunnel_dynamicmapping "no description" b
- name: $1
	fmgr_dynamic_vpntunnel_dynamicmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		vpntunnel: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# dynamic_vpntunnel_dynamicmapping: # t
$0
endsnippet

snippet fmgr_emailfilter_blockallowlist "Configure anti-spam block/allow list." b
- name: $1
	fmgr_emailfilter_blockallowlist:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# emailfilter_blockallowlist: # t
$0
endsnippet

snippet fmgr_emailfilter_blockallowlist_entries "Anti-spam block/allow entries." b
- name: $1
	fmgr_emailfilter_blockallowlist_entries:
		state: ${2:present|absent}
		adom: ${3:# t}
		block-allow-list: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# emailfilter_blockallowlist_entries: # t
$0
endsnippet

snippet fmgr_emailfilter_bwl "Configure anti-spam black/white list." b
- name: $1
	fmgr_emailfilter_bwl:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# emailfilter_bwl: # t
$0
endsnippet

snippet fmgr_emailfilter_bwl_entries "Anti-spam black/white list entries." b
- name: $1
	fmgr_emailfilter_bwl_entries:
		state: ${2:present|absent}
		adom: ${3:# t}
		bwl: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# emailfilter_bwl_entries: # t
$0
endsnippet

snippet fmgr_emailfilter_bword "Configure AntiSpam banned word list." b
- name: $1
	fmgr_emailfilter_bword:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# emailfilter_bword: # t
$0
endsnippet

snippet fmgr_emailfilter_bword_entries "Spam filter banned word." b
- name: $1
	fmgr_emailfilter_bword_entries:
		state: ${2:present|absent}
		adom: ${3:# t}
		bword: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# emailfilter_bword_entries: # t
$0
endsnippet

snippet fmgr_emailfilter_dnsbl "Configure AntiSpam DNSBL/ORBL." b
- name: $1
	fmgr_emailfilter_dnsbl:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# emailfilter_dnsbl: # t
$0
endsnippet

snippet fmgr_emailfilter_dnsbl_entries "Spam filter DNSBL and ORBL server." b
- name: $1
	fmgr_emailfilter_dnsbl_entries:
		state: ${2:present|absent}
		adom: ${3:# t}
		dnsbl: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# emailfilter_dnsbl_entries: # t
$0
endsnippet

snippet fmgr_emailfilter_fortishield "Configure FortiGuard - AntiSpam." b
- name: $1
	fmgr_emailfilter_fortishield:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# emailfilter_fortishield: # t
$0
endsnippet

snippet fmgr_emailfilter_iptrust "Configure AntiSpam IP trust." b
- name: $1
	fmgr_emailfilter_iptrust:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# emailfilter_iptrust: # t
$0
endsnippet

snippet fmgr_emailfilter_iptrust_entries "Spam filter trusted IP addresses." b
- name: $1
	fmgr_emailfilter_iptrust_entries:
		state: ${2:present|absent}
		adom: ${3:# t}
		iptrust: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# emailfilter_iptrust_entries: # t
$0
endsnippet

snippet fmgr_emailfilter_mheader "Configure AntiSpam MIME header." b
- name: $1
	fmgr_emailfilter_mheader:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# emailfilter_mheader: # t
$0
endsnippet

snippet fmgr_emailfilter_mheader_entries "Spam filter mime header content." b
- name: $1
	fmgr_emailfilter_mheader_entries:
		state: ${2:present|absent}
		adom: ${3:# t}
		mheader: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# emailfilter_mheader_entries: # t
$0
endsnippet

snippet fmgr_emailfilter_options "Configure AntiSpam options." b
- name: $1
	fmgr_emailfilter_options:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# emailfilter_options: # t
$0
endsnippet

snippet fmgr_emailfilter_profile "Configure Email Filter profiles." b
- name: $1
	fmgr_emailfilter_profile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# emailfilter_profile: # t
$0
endsnippet

snippet fmgr_emailfilter_profile_filefilter "File filter." b
- name: $1
	fmgr_emailfilter_profile_filefilter:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# emailfilter_profile_filefilter: # t
$0
endsnippet

snippet fmgr_emailfilter_profile_filefilter_entries "File filter entries." b
- name: $1
	fmgr_emailfilter_profile_filefilter_entries:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# emailfilter_profile_filefilter_entries: # t
$0
endsnippet

snippet fmgr_emailfilter_profile_gmail "Gmail." b
- name: $1
	fmgr_emailfilter_profile_gmail:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# emailfilter_profile_gmail: # t
$0
endsnippet

snippet fmgr_emailfilter_profile_imap "IMAP." b
- name: $1
	fmgr_emailfilter_profile_imap:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# emailfilter_profile_imap: # t
$0
endsnippet

snippet fmgr_emailfilter_profile_mapi "MAPI." b
- name: $1
	fmgr_emailfilter_profile_mapi:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# emailfilter_profile_mapi: # t
$0
endsnippet

snippet fmgr_emailfilter_profile_msnhotmail "MSN Hotmail." b
- name: $1
	fmgr_emailfilter_profile_msnhotmail:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# emailfilter_profile_msnhotmail: # t
$0
endsnippet

snippet fmgr_emailfilter_profile_otherwebmails "Other supported webmails." b
- name: $1
	fmgr_emailfilter_profile_otherwebmails:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# emailfilter_profile_otherwebmails: # t
$0
endsnippet

snippet fmgr_emailfilter_profile_pop3 "POP3." b
- name: $1
	fmgr_emailfilter_profile_pop3:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# emailfilter_profile_pop3: # t
$0
endsnippet

snippet fmgr_emailfilter_profile_smtp "SMTP." b
- name: $1
	fmgr_emailfilter_profile_smtp:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# emailfilter_profile_smtp: # t
$0
endsnippet

snippet fmgr_exec_fgfm_reclaimdevtunnel "Reclaim management tunnel to device." b
- name: $1
	fmgr_exec_fgfm_reclaimdevtunnel:
		device_name: ${2:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# exec_fgfm_reclaimdevtunnel: # t
$0
endsnippet

snippet fmgr_export_playbooks "Export fortimanager configuration as playbooks." b
- name: $1
	fmgr_export_playbooks:
		# enable_log: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# export_playbooks: # t
$0
endsnippet

snippet fmgr_extendercontroller_dataplan "FortiExtender dataplan configuration." b
- name: $1
	fmgr_extendercontroller_dataplan:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# extendercontroller_dataplan: # t
$0
endsnippet

snippet fmgr_extendercontroller_simprofile "no description" b
- name: $1
	fmgr_extendercontroller_simprofile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# extendercontroller_simprofile: # t
$0
endsnippet

snippet fmgr_extendercontroller_simprofile_autoswitchprofile "no description" b
- name: $1
	fmgr_extendercontroller_simprofile_autoswitchprofile:
		state: ${2:present|absent}
		adom: ${3:# t}
		sim_profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# extendercontroller_simprofile_autoswitchprofile: # t
$0
endsnippet

snippet fmgr_extendercontroller_template "no description" b
- name: $1
	fmgr_extendercontroller_template:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# extendercontroller_template: # t
$0
endsnippet

snippet fmgr_fact "Gather fortimanager facts." b
- name: $1
	fmgr_fact:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# facts: # t
$0
endsnippet

snippet fmgr_filefilter_profile "Configure file-filter profiles." b
- name: $1
	fmgr_filefilter_profile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# filefilter_profile: # t
$0
endsnippet

snippet fmgr_filefilter_profile_rules "File filter rules." b
- name: $1
	fmgr_filefilter_profile_rules:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# filefilter_profile_rules: # t
$0
endsnippet

snippet fmgr_firewall_accessproxy "Configure Access Proxy." b
- name: $1
	fmgr_firewall_accessproxy:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_accessproxy: # t
$0
endsnippet

snippet fmgr_firewall_accessproxy_apigateway "Set API Gateway." b
- name: $1
	fmgr_firewall_accessproxy_apigateway:
		state: ${2:present|absent}
		adom: ${3:# t}
		access-proxy: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_accessproxy_apigateway: # t
$0
endsnippet

snippet fmgr_firewall_accessproxy_apigateway_realservers "Select the real servers that this Access Proxy will distribute traffic to." b
- name: $1
	fmgr_firewall_accessproxy_apigateway_realservers:
		state: ${2:present|absent}
		adom: ${3:# t}
		access-proxy: ${4:# t}
		api-gateway: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_accessproxy_apigateway_realservers: # t
$0
endsnippet

snippet fmgr_firewall_accessproxy_apigateway_sslciphersuites "SSL/TLS cipher suites to offer to a server, ordered by priority." b
- name: $1
	fmgr_firewall_accessproxy_apigateway_sslciphersuites:
		state: ${2:present|absent}
		adom: ${3:# t}
		access-proxy: ${4:# t}
		api-gateway: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_accessproxy_apigateway_sslciphersuites: # t
$0
endsnippet

snippet fmgr_firewall_accessproxy_realservers "Select the SSL real servers that this Access Proxy will distribute traffic to." b
- name: $1
	fmgr_firewall_accessproxy_realservers:
		state: ${2:present|absent}
		adom: ${3:# t}
		access-proxy: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_accessproxy_realservers: # t
$0
endsnippet

snippet fmgr_firewall_accessproxy_serverpubkeyauthsettings "Server SSH public key authentication settings." b
- name: $1
	fmgr_firewall_accessproxy_serverpubkeyauthsettings:
		state: ${2:present|absent}
		adom: ${3:# t}
		access-proxy: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_accessproxy_serverpubkeyauthsettings: # t
$0
endsnippet

snippet fmgr_firewall_accessproxy_serverpubkeyauthsettings_certextension "Configure certificate extension for user certificate." b
- name: $1
	fmgr_firewall_accessproxy_serverpubkeyauthsettings_certextension:
		state: ${2:present|absent}
		adom: ${3:# t}
		access-proxy: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_accessproxy_serverpubkeyauthsettings_certextension: # t
$0
endsnippet

snippet fmgr_firewall_address "Configure IPv4 addresses." b
- name: $1
	fmgr_firewall_address:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_address: # t
$0
endsnippet

snippet fmgr_firewall_address6 "Configure IPv6 firewall addresses." b
- name: $1
	fmgr_firewall_address6:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_address6: # t
$0
endsnippet

snippet fmgr_firewall_address6_dynamicmapping "Configure IPv6 firewall addresses." b
- name: $1
	fmgr_firewall_address6_dynamicmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		address6: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_address6_dynamicmapping: # t
$0
endsnippet

snippet fmgr_firewall_address6_dynamicmapping_subnetsegment "IPv6 subnet segments." b
- name: $1
	fmgr_firewall_address6_dynamicmapping_subnetsegment:
		state: ${2:present|absent}
		adom: ${3:# t}
		address6: ${4:# t}
		dynamic_mapping: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_address6_dynamicmapping_subnetsegment: # t
$0
endsnippet

snippet fmgr_firewall_address6_list "IP address list." b
- name: $1
	fmgr_firewall_address6_list:
		state: ${2:present|absent}
		adom: ${3:# t}
		address6: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_address6_list: # t
$0
endsnippet

snippet fmgr_firewall_address6_subnetsegment "IPv6 subnet segments." b
- name: $1
	fmgr_firewall_address6_subnetsegment:
		state: ${2:present|absent}
		adom: ${3:# t}
		address6: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_address6_subnetsegment: # t
$0
endsnippet

snippet fmgr_firewall_address6_tagging "Config object tagging" b
- name: $1
	fmgr_firewall_address6_tagging:
		state: ${2:present|absent}
		adom: ${3:# t}
		address6: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_address6_tagging: # t
$0
endsnippet

snippet fmgr_firewall_address6template "Configure IPv6 address templates." b
- name: $1
	fmgr_firewall_address6template:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_address6template: # t
$0
endsnippet

snippet fmgr_firewall_address6template_subnetsegment "IPv6 subnet segments." b
- name: $1
	fmgr_firewall_address6template_subnetsegment:
		state: ${2:present|absent}
		adom: ${3:# t}
		address6-template: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_address6template_subnetsegment: # t
$0
endsnippet

snippet fmgr_firewall_address6template_subnetsegment_values "Subnet segment values." b
- name: $1
	fmgr_firewall_address6template_subnetsegment_values:
		state: ${2:present|absent}
		adom: ${3:# t}
		address6-template: ${4:# t}
		subnet-segment: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_address6template_subnetsegment_values: # t
$0
endsnippet

snippet fmgr_firewall_address_dynamicmapping "Configure IPv4 addresses." b
- name: $1
	fmgr_firewall_address_dynamicmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		address: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_address_dynamicmapping: # t
$0
endsnippet

snippet fmgr_firewall_address_list "IP address list." b
- name: $1
	fmgr_firewall_address_list:
		state: ${2:present|absent}
		adom: ${3:# t}
		address: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_address_list: # t
$0
endsnippet

snippet fmgr_firewall_address_tagging "Config object tagging." b
- name: $1
	fmgr_firewall_address_tagging:
		state: ${2:present|absent}
		adom: ${3:# t}
		address: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_address_tagging: # t
$0
endsnippet

snippet fmgr_firewall_addrgrp "Configure IPv4 address groups." b
- name: $1
	fmgr_firewall_addrgrp:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_addrgrp: # t
$0
endsnippet

snippet fmgr_firewall_addrgrp6 "Configure IPv6 address groups." b
- name: $1
	fmgr_firewall_addrgrp6:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_addrgrp6: # t
$0
endsnippet

snippet fmgr_firewall_addrgrp6_dynamicmapping "Configure IPv6 address groups." b
- name: $1
	fmgr_firewall_addrgrp6_dynamicmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		addrgrp6: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_addrgrp6_dynamicmapping: # t
$0
endsnippet

snippet fmgr_firewall_addrgrp6_tagging "Config object tagging." b
- name: $1
	fmgr_firewall_addrgrp6_tagging:
		state: ${2:present|absent}
		adom: ${3:# t}
		addrgrp6: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_addrgrp6_tagging: # t
$0
endsnippet

snippet fmgr_firewall_addrgrp_dynamicmapping "Configure IPv4 address groups." b
- name: $1
	fmgr_firewall_addrgrp_dynamicmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		addrgrp: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_addrgrp_dynamicmapping: # t
$0
endsnippet

snippet fmgr_firewall_addrgrp_tagging "Config object tagging." b
- name: $1
	fmgr_firewall_addrgrp_tagging:
		state: ${2:present|absent}
		adom: ${3:# t}
		addrgrp: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_addrgrp_tagging: # t
$0
endsnippet

snippet fmgr_firewall_carrierendpointbwl "Carrier end point black/white list tables." b
- name: $1
	fmgr_firewall_carrierendpointbwl:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_carrierendpointbwl: # t
$0
endsnippet

snippet fmgr_firewall_carrierendpointbwl_entries "Carrier end point black/white list." b
- name: $1
	fmgr_firewall_carrierendpointbwl_entries:
		state: ${2:present|absent}
		adom: ${3:# t}
		carrier-endpoint-bwl: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_carrierendpointbwl_entries: # t
$0
endsnippet

snippet fmgr_firewall_decryptedtrafficmirror "Configure decrypted traffic mirror." b
- name: $1
	fmgr_firewall_decryptedtrafficmirror:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_decryptedtrafficmirror: # t
$0
endsnippet

snippet fmgr_firewall_gtp "Configure GTP." b
- name: $1
	fmgr_firewall_gtp:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_gtp: # t
$0
endsnippet

snippet fmgr_firewall_gtp_apn "APN." b
- name: $1
	fmgr_firewall_gtp_apn:
		state: ${2:present|absent}
		adom: ${3:# t}
		gtp: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_gtp_apn: # t
$0
endsnippet

snippet fmgr_firewall_gtp_ieremovepolicy "IE remove policy." b
- name: $1
	fmgr_firewall_gtp_ieremovepolicy:
		state: ${2:present|absent}
		adom: ${3:# t}
		gtp: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_gtp_ieremovepolicy: # t
$0
endsnippet

snippet fmgr_firewall_gtp_ievalidation "IE validation." b
- name: $1
	fmgr_firewall_gtp_ievalidation:
		state: ${2:present|absent}
		adom: ${3:# t}
		gtp: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_gtp_ievalidation: # t
$0
endsnippet

snippet fmgr_firewall_gtp_imsi "IMSI." b
- name: $1
	fmgr_firewall_gtp_imsi:
		state: ${2:present|absent}
		adom: ${3:# t}
		gtp: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_gtp_imsi: # t
$0
endsnippet

snippet fmgr_firewall_gtp_ippolicy "IP policy." b
- name: $1
	fmgr_firewall_gtp_ippolicy:
		state: ${2:present|absent}
		adom: ${3:# t}
		gtp: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_gtp_ippolicy: # t
$0
endsnippet

snippet fmgr_firewall_gtp_messageratelimit "Message rate limiting." b
- name: $1
	fmgr_firewall_gtp_messageratelimit:
		state: ${2:present|absent}
		adom: ${3:# t}
		gtp: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_gtp_messageratelimit: # t
$0
endsnippet

snippet fmgr_firewall_gtp_messageratelimitv0 "Message rate limiting for GTP version 0." b
- name: $1
	fmgr_firewall_gtp_messageratelimitv0:
		state: ${2:present|absent}
		adom: ${3:# t}
		gtp: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_gtp_messageratelimitv0: # t
$0
endsnippet

snippet fmgr_firewall_gtp_messageratelimitv1 "Message rate limiting for GTP version 1." b
- name: $1
	fmgr_firewall_gtp_messageratelimitv1:
		state: ${2:present|absent}
		adom: ${3:# t}
		gtp: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_gtp_messageratelimitv1: # t
$0
endsnippet

snippet fmgr_firewall_gtp_messageratelimitv2 "Message rate limiting for GTP version 2." b
- name: $1
	fmgr_firewall_gtp_messageratelimitv2:
		state: ${2:present|absent}
		adom: ${3:# t}
		gtp: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_gtp_messageratelimitv2: # t
$0
endsnippet

snippet fmgr_firewall_gtp_noippolicy "No IP policy." b
- name: $1
	fmgr_firewall_gtp_noippolicy:
		state: ${2:present|absent}
		adom: ${3:# t}
		gtp: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_gtp_noippolicy: # t
$0
endsnippet

snippet fmgr_firewall_gtp_perapnshaper "Per APN shaper." b
- name: $1
	fmgr_firewall_gtp_perapnshaper:
		state: ${2:present|absent}
		adom: ${3:# t}
		gtp: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_gtp_perapnshaper: # t
$0
endsnippet

snippet fmgr_firewall_gtp_policy "Policy." b
- name: $1
	fmgr_firewall_gtp_policy:
		state: ${2:present|absent}
		adom: ${3:# t}
		gtp: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_gtp_policy: # t
$0
endsnippet

snippet fmgr_firewall_gtp_policyv2 "Apply allow or deny action to each GTPv2-c packet." b
- name: $1
	fmgr_firewall_gtp_policyv2:
		state: ${2:present|absent}
		adom: ${3:# t}
		gtp: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_gtp_policyv2: # t
$0
endsnippet

snippet fmgr_firewall_identitybasedroute "Configure identity based routing." b
- name: $1
	fmgr_firewall_identitybasedroute:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_identitybasedroute: # t
$0
endsnippet

snippet fmgr_firewall_identitybasedroute_rule "Rule." b
- name: $1
	fmgr_firewall_identitybasedroute_rule:
		state: ${2:present|absent}
		adom: ${3:# t}
		identity-based-route: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_identitybasedroute_rule: # t
$0
endsnippet

snippet fmgr_firewall_internetservice "Show Internet Service application." b
- name: $1
	fmgr_firewall_internetservice:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_internetservice: # t
$0
endsnippet

snippet fmgr_firewall_internetservice_entry "Entries in the Internet Service database." b
- name: $1
	fmgr_firewall_internetservice_entry:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_internetservice_entry: # t
$0
endsnippet

snippet fmgr_firewall_internetserviceaddition "Configure Internet Services Addition." b
- name: $1
	fmgr_firewall_internetserviceaddition:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_internetserviceaddition: # t
$0
endsnippet

snippet fmgr_firewall_internetserviceaddition_entry "Entries added to the Internet Service addition database." b
- name: $1
	fmgr_firewall_internetserviceaddition_entry:
		state: ${2:present|absent}
		adom: ${3:# t}
		internet-service-addition: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_internetserviceaddition_entry: # t
$0
endsnippet

snippet fmgr_firewall_internetserviceaddition_entry_portrange "Port ranges in the custom entry." b
- name: $1
	fmgr_firewall_internetserviceaddition_entry_portrange:
		state: ${2:present|absent}
		adom: ${3:# t}
		internet-service-addition: ${4:# t}
		entry: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_internetserviceaddition_entry_portrange: # t
$0
endsnippet

snippet fmgr_firewall_internetservicecustom "Configure custom Internet Services." b
- name: $1
	fmgr_firewall_internetservicecustom:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_internetservicecustom: # t
$0
endsnippet

snippet fmgr_firewall_internetservicecustom_disableentry "Disable entries in the Internet Service database." b
- name: $1
	fmgr_firewall_internetservicecustom_disableentry:
		state: ${2:present|absent}
		adom: ${3:# t}
		internet-service-custom: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_internetservicecustom_disableentry: # t
$0
endsnippet

snippet fmgr_firewall_internetservicecustom_disableentry_iprange "IP ranges in the disable entry." b
- name: $1
	fmgr_firewall_internetservicecustom_disableentry_iprange:
		state: ${2:present|absent}
		adom: ${3:# t}
		internet-service-custom: ${4:# t}
		disable-entry: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_internetservicecustom_disableentry_iprange: # t
$0
endsnippet

snippet fmgr_firewall_internetservicecustom_entry "Entries added to the Internet Service database and custom database." b
- name: $1
	fmgr_firewall_internetservicecustom_entry:
		state: ${2:present|absent}
		adom: ${3:# t}
		internet-service-custom: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_internetservicecustom_entry: # t
$0
endsnippet

snippet fmgr_firewall_internetservicecustom_entry_portrange "Port ranges in the custom entry." b
- name: $1
	fmgr_firewall_internetservicecustom_entry_portrange:
		state: ${2:present|absent}
		adom: ${3:# t}
		internet-service-custom: ${4:# t}
		entry: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_internetservicecustom_entry_portrange: # t
$0
endsnippet

snippet fmgr_firewall_internetservicecustomgroup "Configure custom Internet Service group." b
- name: $1
	fmgr_firewall_internetservicecustomgroup:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_internetservicecustomgroup: # t
$0
endsnippet

snippet fmgr_firewall_internetservicegroup "Configure group of Internet Service." b
- name: $1
	fmgr_firewall_internetservicegroup:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_internetservicegroup: # t
$0
endsnippet

snippet fmgr_firewall_internetservicename "Define internet service names." b
- name: $1
	fmgr_firewall_internetservicename:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_internetservicename: # t
$0
endsnippet

snippet fmgr_firewall_ippool "Configure IPv4 IP pools." b
- name: $1
	fmgr_firewall_ippool:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_ippool: # t
$0
endsnippet

snippet fmgr_firewall_ippool6 "Configure IPv6 IP pools." b
- name: $1
	fmgr_firewall_ippool6:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_ippool6: # t
$0
endsnippet

snippet fmgr_firewall_ippool6_dynamicmapping "Configure IPv6 IP pools." b
- name: $1
	fmgr_firewall_ippool6_dynamicmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		ippool6: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_ippool6_dynamicmapping: # t
$0
endsnippet

snippet fmgr_firewall_ippool_dynamicmapping "Configure IPv4 IP pools." b
- name: $1
	fmgr_firewall_ippool_dynamicmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		ippool: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_ippool_dynamicmapping: # t
$0
endsnippet

snippet fmgr_firewall_ldbmonitor "Configure server load balancing health monitors." b
- name: $1
	fmgr_firewall_ldbmonitor:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_ldbmonitor: # t
$0
endsnippet

snippet fmgr_firewall_mmsprofile "Configure MMS profiles." b
- name: $1
	fmgr_firewall_mmsprofile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_mmsprofile: # t
$0
endsnippet

snippet fmgr_firewall_mmsprofile_dupe "Duplicate configuration." b
- name: $1
	fmgr_firewall_mmsprofile_dupe:
		state: ${2:present|absent}
		adom: ${3:# t}
		mms-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_mmsprofile_dupe: # t
$0
endsnippet

snippet fmgr_firewall_mmsprofile_flood "Flood configuration." b
- name: $1
	fmgr_firewall_mmsprofile_flood:
		state: ${2:present|absent}
		adom: ${3:# t}
		mms-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_mmsprofile_flood: # t
$0
endsnippet

snippet fmgr_firewall_mmsprofile_notification "Notification configuration." b
- name: $1
	fmgr_firewall_mmsprofile_notification:
		state: ${2:present|absent}
		adom: ${3:# t}
		mms-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_mmsprofile_notification: # t
$0
endsnippet

snippet fmgr_firewall_mmsprofile_notifmsisdn "Notification for MSISDNs." b
- name: $1
	fmgr_firewall_mmsprofile_notifmsisdn:
		state: ${2:present|absent}
		adom: ${3:# t}
		mms-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_mmsprofile_notifmsisdn: # t
$0
endsnippet

snippet fmgr_firewall_mmsprofile_outbreakprevention "Configure Virus Outbreak Prevention settings." b
- name: $1
	fmgr_firewall_mmsprofile_outbreakprevention:
		state: ${2:present|absent}
		adom: ${3:# t}
		mms-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_mmsprofile_outbreakprevention: # t
$0
endsnippet

snippet fmgr_firewall_multicastaddress "Configure multicast addresses." b
- name: $1
	fmgr_firewall_multicastaddress:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_multicastaddress: # t
$0
endsnippet

snippet fmgr_firewall_multicastaddress6 "Configure IPv6 multicast address." b
- name: $1
	fmgr_firewall_multicastaddress6:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_multicastaddress6: # t
$0
endsnippet

snippet fmgr_firewall_multicastaddress6_tagging "Config object tagging." b
- name: $1
	fmgr_firewall_multicastaddress6_tagging:
		state: ${2:present|absent}
		adom: ${3:# t}
		multicast-address6: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_multicastaddress6_tagging: # t
$0
endsnippet

snippet fmgr_firewall_multicastaddress_tagging "Config object tagging." b
- name: $1
	fmgr_firewall_multicastaddress_tagging:
		state: ${2:present|absent}
		adom: ${3:# t}
		multicast-address: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_multicastaddress_tagging: # t
$0
endsnippet

snippet fmgr_firewall_profilegroup "Configure profile groups." b
- name: $1
	fmgr_firewall_profilegroup:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_profilegroup: # t
$0
endsnippet

snippet fmgr_firewall_profileprotocoloptions "Configure protocol options." b
- name: $1
	fmgr_firewall_profileprotocoloptions:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_profileprotocoloptions: # t
$0
endsnippet

snippet fmgr_firewall_profileprotocoloptions_cifs "Configure CIFS protocol options." b
- name: $1
	fmgr_firewall_profileprotocoloptions_cifs:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile-protocol-options: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_profileprotocoloptions_cifs: # t
$0
endsnippet

snippet fmgr_firewall_profileprotocoloptions_cifs_filefilter "File filter." b
- name: $1
	fmgr_firewall_profileprotocoloptions_cifs_filefilter:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile-protocol-options: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_profileprotocoloptions_cifs_filefilter: # t
$0
endsnippet

snippet fmgr_firewall_profileprotocoloptions_cifs_filefilter_entries "File filter entries." b
- name: $1
	fmgr_firewall_profileprotocoloptions_cifs_filefilter_entries:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile-protocol-options: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_profileprotocoloptions_cifs_filefilter_entries: # t
$0
endsnippet

snippet fmgr_firewall_profileprotocoloptions_cifs_serverkeytab "Server keytab." b
- name: $1
	fmgr_firewall_profileprotocoloptions_cifs_serverkeytab:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile-protocol-options: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_profileprotocoloptions_cifs_serverkeytab: # t
$0
endsnippet

snippet fmgr_firewall_profileprotocoloptions_dns "Configure DNS protocol options." b
- name: $1
	fmgr_firewall_profileprotocoloptions_dns:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile-protocol-options: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_profileprotocoloptions_dns: # t
$0
endsnippet

snippet fmgr_firewall_profileprotocoloptions_ftp "Configure FTP protocol options." b
- name: $1
	fmgr_firewall_profileprotocoloptions_ftp:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile-protocol-options: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_profileprotocoloptions_ftp: # t
$0
endsnippet

snippet fmgr_firewall_profileprotocoloptions_http "Configure HTTP protocol options." b
- name: $1
	fmgr_firewall_profileprotocoloptions_http:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile-protocol-options: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_profileprotocoloptions_http: # t
$0
endsnippet

snippet fmgr_firewall_profileprotocoloptions_imap "Configure IMAP protocol options." b
- name: $1
	fmgr_firewall_profileprotocoloptions_imap:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile-protocol-options: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_profileprotocoloptions_imap: # t
$0
endsnippet

snippet fmgr_firewall_profileprotocoloptions_mailsignature "Configure Mail signature." b
- name: $1
	fmgr_firewall_profileprotocoloptions_mailsignature:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile-protocol-options: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_profileprotocoloptions_mailsignature: # t
$0
endsnippet

snippet fmgr_firewall_profileprotocoloptions_mapi "Configure MAPI protocol options." b
- name: $1
	fmgr_firewall_profileprotocoloptions_mapi:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile-protocol-options: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_profileprotocoloptions_mapi: # t
$0
endsnippet

snippet fmgr_firewall_profileprotocoloptions_nntp "Configure NNTP protocol options." b
- name: $1
	fmgr_firewall_profileprotocoloptions_nntp:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile-protocol-options: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_profileprotocoloptions_nntp: # t
$0
endsnippet

snippet fmgr_firewall_profileprotocoloptions_pop3 "Configure POP3 protocol options." b
- name: $1
	fmgr_firewall_profileprotocoloptions_pop3:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile-protocol-options: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_profileprotocoloptions_pop3: # t
$0
endsnippet

snippet fmgr_firewall_profileprotocoloptions_smtp "Configure SMTP protocol options." b
- name: $1
	fmgr_firewall_profileprotocoloptions_smtp:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile-protocol-options: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_profileprotocoloptions_smtp: # t
$0
endsnippet

snippet fmgr_firewall_profileprotocoloptions_ssh "Configure SFTP and SCP protocol options." b
- name: $1
	fmgr_firewall_profileprotocoloptions_ssh:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile-protocol-options: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_profileprotocoloptions_ssh: # t
$0
endsnippet

snippet fmgr_firewall_proxyaddress "Web proxy address configuration." b
- name: $1
	fmgr_firewall_proxyaddress:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_proxyaddress: # t
$0
endsnippet

snippet fmgr_firewall_proxyaddress_headergroup "HTTP header group." b
- name: $1
	fmgr_firewall_proxyaddress_headergroup:
		state: ${2:present|absent}
		adom: ${3:# t}
		proxy-address: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_proxyaddress_headergroup: # t
$0
endsnippet

snippet fmgr_firewall_proxyaddress_tagging "Config object tagging." b
- name: $1
	fmgr_firewall_proxyaddress_tagging:
		state: ${2:present|absent}
		adom: ${3:# t}
		proxy-address: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_proxyaddress_tagging: # t
$0
endsnippet

snippet fmgr_firewall_proxyaddrgrp "Web proxy address group configuration." b
- name: $1
	fmgr_firewall_proxyaddrgrp:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_proxyaddrgrp: # t
$0
endsnippet

snippet fmgr_firewall_proxyaddrgrp_tagging "Config object tagging." b
- name: $1
	fmgr_firewall_proxyaddrgrp_tagging:
		state: ${2:present|absent}
		adom: ${3:# t}
		proxy-addrgrp: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_proxyaddrgrp_tagging: # t
$0
endsnippet

snippet fmgr_firewall_schedule_group "Schedule group configuration." b
- name: $1
	fmgr_firewall_schedule_group:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_schedule_group: # t
$0
endsnippet

snippet fmgr_firewall_schedule_onetime "Onetime schedule configuration." b
- name: $1
	fmgr_firewall_schedule_onetime:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_schedule_onetime: # t
$0
endsnippet

snippet fmgr_firewall_schedule_recurring "Recurring schedule configuration." b
- name: $1
	fmgr_firewall_schedule_recurring:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_schedule_recurring: # t
$0
endsnippet

snippet fmgr_firewall_service_category "Configure service categories." b
- name: $1
	fmgr_firewall_service_category:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_service_category: # t
$0
endsnippet

snippet fmgr_firewall_service_custom "Configure custom services." b
- name: $1
	fmgr_firewall_service_custom:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_service_custom: # t
$0
endsnippet

snippet fmgr_firewall_service_group "Configure service groups." b
- name: $1
	fmgr_firewall_service_group:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_service_group: # t
$0
endsnippet

snippet fmgr_firewall_shaper_peripshaper "Configure per-IP traffic shaper." b
- name: $1
	fmgr_firewall_shaper_peripshaper:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_shaper_peripshaper: # t
$0
endsnippet

snippet fmgr_firewall_shaper_trafficshaper "Configure shared traffic shaper." b
- name: $1
	fmgr_firewall_shaper_trafficshaper:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_shaper_trafficshaper: # t
$0
endsnippet

snippet fmgr_firewall_shapingprofile "Configure shaping profiles." b
- name: $1
	fmgr_firewall_shapingprofile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_shapingprofile: # t
$0
endsnippet

snippet fmgr_firewall_shapingprofile_shapingentries "Define shaping entries of this shaping profile." b
- name: $1
	fmgr_firewall_shapingprofile_shapingentries:
		state: ${2:present|absent}
		adom: ${3:# t}
		shaping-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_shapingprofile_shapingentries: # t
$0
endsnippet

snippet fmgr_firewall_ssh_localca "SSH proxy local CA." b
- name: $1
	fmgr_firewall_ssh_localca:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_ssh_localca: # t
$0
endsnippet

snippet fmgr_firewall_sslsshprofile "Configure SSL/SSH protocol options." b
- name: $1
	fmgr_firewall_sslsshprofile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_sslsshprofile: # t
$0
endsnippet

snippet fmgr_firewall_sslsshprofile_dot "Configure DNS over TLS options." b
- name: $1
	fmgr_firewall_sslsshprofile_dot:
		state: ${2:present|absent}
		adom: ${3:# t}
		ssl-ssh-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_sslsshprofile_dot: # t
$0
endsnippet

snippet fmgr_firewall_sslsshprofile_ftps "Configure FTPS options." b
- name: $1
	fmgr_firewall_sslsshprofile_ftps:
		state: ${2:present|absent}
		adom: ${3:# t}
		ssl-ssh-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_sslsshprofile_ftps: # t
$0
endsnippet

snippet fmgr_firewall_sslsshprofile_https "Configure HTTPS options." b
- name: $1
	fmgr_firewall_sslsshprofile_https:
		state: ${2:present|absent}
		adom: ${3:# t}
		ssl-ssh-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_sslsshprofile_https: # t
$0
endsnippet

snippet fmgr_firewall_sslsshprofile_imaps "Configure IMAPS options." b
- name: $1
	fmgr_firewall_sslsshprofile_imaps:
		state: ${2:present|absent}
		adom: ${3:# t}
		ssl-ssh-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_sslsshprofile_imaps: # t
$0
endsnippet

snippet fmgr_firewall_sslsshprofile_pop3s "Configure POP3S options." b
- name: $1
	fmgr_firewall_sslsshprofile_pop3s:
		state: ${2:present|absent}
		adom: ${3:# t}
		ssl-ssh-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_sslsshprofile_pop3s: # t
$0
endsnippet

snippet fmgr_firewall_sslsshprofile_smtps "Configure SMTPS options." b
- name: $1
	fmgr_firewall_sslsshprofile_smtps:
		state: ${2:present|absent}
		adom: ${3:# t}
		ssl-ssh-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_sslsshprofile_smtps: # t
$0
endsnippet

snippet fmgr_firewall_sslsshprofile_ssh "Configure SSH options." b
- name: $1
	fmgr_firewall_sslsshprofile_ssh:
		state: ${2:present|absent}
		adom: ${3:# t}
		ssl-ssh-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_sslsshprofile_ssh: # t
$0
endsnippet

snippet fmgr_firewall_sslsshprofile_ssl "Configure SSL options." b
- name: $1
	fmgr_firewall_sslsshprofile_ssl:
		state: ${2:present|absent}
		adom: ${3:# t}
		ssl-ssh-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_sslsshprofile_ssl: # t
$0
endsnippet

snippet fmgr_firewall_sslsshprofile_sslexempt "Servers to exempt from SSL inspection." b
- name: $1
	fmgr_firewall_sslsshprofile_sslexempt:
		state: ${2:present|absent}
		adom: ${3:# t}
		ssl-ssh-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_sslsshprofile_sslexempt: # t
$0
endsnippet

snippet fmgr_firewall_sslsshprofile_sslserver "SSL servers." b
- name: $1
	fmgr_firewall_sslsshprofile_sslserver:
		state: ${2:present|absent}
		adom: ${3:# t}
		ssl-ssh-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_sslsshprofile_sslserver: # t
$0
endsnippet

snippet fmgr_firewall_trafficclass "Configure names for shaping classes." b
- name: $1
	fmgr_firewall_trafficclass:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_trafficclass: # t
$0
endsnippet

snippet fmgr_firewall_vip "Configure virtual IP for IPv4." b
- name: $1
	fmgr_firewall_vip:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_vip: # t
$0
endsnippet

snippet fmgr_firewall_vip46 "Configure IPv4 to IPv6 virtual IPs." b
- name: $1
	fmgr_firewall_vip46:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_vip46: # t
$0
endsnippet

snippet fmgr_firewall_vip46_dynamicmapping "Configure IPv4 to IPv6 virtual IPs." b
- name: $1
	fmgr_firewall_vip46_dynamicmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		vip46: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_vip46_dynamicmapping: # t
$0
endsnippet

snippet fmgr_firewall_vip46_realservers "Real servers." b
- name: $1
	fmgr_firewall_vip46_realservers:
		state: ${2:present|absent}
		adom: ${3:# t}
		vip46: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_vip46_realservers: # t
$0
endsnippet

snippet fmgr_firewall_vip6 "Configure virtual IP for IPv6." b
- name: $1
	fmgr_firewall_vip6:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_vip6: # t
$0
endsnippet

snippet fmgr_firewall_vip64 "Configure IPv6 to IPv4 virtual IPs." b
- name: $1
	fmgr_firewall_vip64:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_vip64: # t
$0
endsnippet

snippet fmgr_firewall_vip64_dynamicmapping "Configure IPv6 to IPv4 virtual IPs." b
- name: $1
	fmgr_firewall_vip64_dynamicmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		vip64: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_vip64_dynamicmapping: # t
$0
endsnippet

snippet fmgr_firewall_vip64_realservers "Real servers." b
- name: $1
	fmgr_firewall_vip64_realservers:
		state: ${2:present|absent}
		adom: ${3:# t}
		vip64: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_vip64_realservers: # t
$0
endsnippet

snippet fmgr_firewall_vip6_dynamicmapping "Configure virtual IP for IPv6." b
- name: $1
	fmgr_firewall_vip6_dynamicmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		vip6: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_vip6_dynamicmapping: # t
$0
endsnippet

snippet fmgr_firewall_vip6_realservers "Select the real servers that this server load balancing VIP will distribute traffic to." b
- name: $1
	fmgr_firewall_vip6_realservers:
		state: ${2:present|absent}
		adom: ${3:# t}
		vip6: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_vip6_realservers: # t
$0
endsnippet

snippet fmgr_firewall_vip6_sslciphersuites "SSL/TLS cipher suites acceptable from a client, ordered by priority." b
- name: $1
	fmgr_firewall_vip6_sslciphersuites:
		state: ${2:present|absent}
		adom: ${3:# t}
		vip6: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_vip6_sslciphersuites: # t
$0
endsnippet

snippet fmgr_firewall_vip6_sslserverciphersuites "SSL/TLS cipher suites to offer to a server, ordered by priority." b
- name: $1
	fmgr_firewall_vip6_sslserverciphersuites:
		state: ${2:present|absent}
		adom: ${3:# t}
		vip6: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_vip6_sslserverciphersuites: # t
$0
endsnippet

snippet fmgr_firewall_vip_dynamicmapping "Configure virtual IP for IPv4." b
- name: $1
	fmgr_firewall_vip_dynamicmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		vip: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_vip_dynamicmapping: # t
$0
endsnippet

snippet fmgr_firewall_vip_dynamicmapping_realservers "Select the real servers that this server load balancing VIP will distribute traffic to." b
- name: $1
	fmgr_firewall_vip_dynamicmapping_realservers:
		state: ${2:present|absent}
		adom: ${3:# t}
		vip: ${4:# t}
		dynamic_mapping: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_vip_dynamicmapping_realservers: # t
$0
endsnippet

snippet fmgr_firewall_vip_dynamicmapping_sslciphersuites "SSL/TLS cipher suites acceptable from a client, ordered by priority." b
- name: $1
	fmgr_firewall_vip_dynamicmapping_sslciphersuites:
		state: ${2:present|absent}
		adom: ${3:# t}
		vip: ${4:# t}
		dynamic_mapping: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_vip_dynamicmapping_sslciphersuites: # t
$0
endsnippet

snippet fmgr_firewall_vip_realservers "Select the real servers that this server load balancing VIP will distribute traffic to." b
- name: $1
	fmgr_firewall_vip_realservers:
		state: ${2:present|absent}
		adom: ${3:# t}
		vip: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_vip_realservers: # t
$0
endsnippet

snippet fmgr_firewall_vip_sslciphersuites "SSL/TLS cipher suites acceptable from a client, ordered by priority." b
- name: $1
	fmgr_firewall_vip_sslciphersuites:
		state: ${2:present|absent}
		adom: ${3:# t}
		vip: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_vip_sslciphersuites: # t
$0
endsnippet

snippet fmgr_firewall_vip_sslserverciphersuites "SSL/TLS cipher suites to offer to a server, ordered by priority." b
- name: $1
	fmgr_firewall_vip_sslserverciphersuites:
		state: ${2:present|absent}
		adom: ${3:# t}
		vip: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_vip_sslserverciphersuites: # t
$0
endsnippet

snippet fmgr_firewall_vipgrp "Configure IPv4 virtual IP groups." b
- name: $1
	fmgr_firewall_vipgrp:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_vipgrp: # t
$0
endsnippet

snippet fmgr_firewall_vipgrp46 "Configure IPv4 to IPv6 virtual IP groups." b
- name: $1
	fmgr_firewall_vipgrp46:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_vipgrp46: # t
$0
endsnippet

snippet fmgr_firewall_vipgrp6 "Configure IPv6 virtual IP groups." b
- name: $1
	fmgr_firewall_vipgrp6:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_vipgrp6: # t
$0
endsnippet

snippet fmgr_firewall_vipgrp64 "Configure IPv6 to IPv4 virtual IP groups." b
- name: $1
	fmgr_firewall_vipgrp64:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_vipgrp64: # t
$0
endsnippet

snippet fmgr_firewall_vipgrp_dynamicmapping "Configure IPv4 virtual IP groups." b
- name: $1
	fmgr_firewall_vipgrp_dynamicmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		vipgrp: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_vipgrp_dynamicmapping: # t
$0
endsnippet

snippet fmgr_firewall_wildcardfqdn_custom "Config global/VDOM Wildcard FQDN address." b
- name: $1
	fmgr_firewall_wildcardfqdn_custom:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_wildcardfqdn_custom: # t
$0
endsnippet

snippet fmgr_firewall_wildcardfqdn_group "Config global Wildcard FQDN address groups." b
- name: $1
	fmgr_firewall_wildcardfqdn_group:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# firewall_wildcardfqdn_group: # t
$0
endsnippet

snippet fmgr_fmupdate_analyzer_virusreport "Send virus detection notification to FortiGuard." b
- name: $1
	fmgr_fmupdate_analyzer_virusreport:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fmupdate_analyzer_virusreport: # t
$0
endsnippet

snippet fmgr_fmupdate_avips_advancedlog "Enable/disable logging of FortiGuard antivirus and IPS update packages received by FortiManagers built-in FortiGuard." b
- name: $1
	fmgr_fmupdate_avips_advancedlog:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fmupdate_avips_advancedlog: # t
$0
endsnippet

snippet fmgr_fmupdate_avips_webproxy "Configure the web proxy for use with FortiGuard antivirus and IPS updates." b
- name: $1
	fmgr_fmupdate_avips_webproxy:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fmupdate_avips_webproxy: # t
$0
endsnippet

snippet fmgr_fmupdate_customurllist "Configure the URL database for rating and filtering." b
- name: $1
	fmgr_fmupdate_customurllist:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fmupdate_customurllist: # t
$0
endsnippet

snippet fmgr_fmupdate_diskquota "Configure disk space available for use by the Upgrade Manager." b
- name: $1
	fmgr_fmupdate_diskquota:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fmupdate_diskquota: # t
$0
endsnippet

snippet fmgr_fmupdate_fctservices "Configure FortiGuard to provide services to FortiClient installations." b
- name: $1
	fmgr_fmupdate_fctservices:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fmupdate_fctservices: # t
$0
endsnippet

snippet fmgr_fmupdate_fdssetting "Configure FortiGuard settings." b
- name: $1
	fmgr_fmupdate_fdssetting:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fmupdate_fdssetting: # t
$0
endsnippet

snippet fmgr_fmupdate_fdssetting_pushoverride "Enable/disable push updates, and override the default IP address and port used by FortiGuard to send antivirus and IPS push messages for..." b
- name: $1
	fmgr_fmupdate_fdssetting_pushoverride:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fmupdate_fdssetting_pushoverride: # t
$0
endsnippet

snippet fmgr_fmupdate_fdssetting_pushoverridetoclient "Enable/disable push updates, and override the default IP address and port used by FortiGuard to send antivirus and IPS push messages for..." b
- name: $1
	fmgr_fmupdate_fdssetting_pushoverridetoclient:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fmupdate_fdssetting_pushoverridetoclient: # t
$0
endsnippet

snippet fmgr_fmupdate_fdssetting_pushoverridetoclient_announceip "Announce IP addresses for the device." b
- name: $1
	fmgr_fmupdate_fdssetting_pushoverridetoclient_announceip:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fmupdate_fdssetting_pushoverridetoclient_announceip: # t
$0
endsnippet

snippet fmgr_fmupdate_fdssetting_serveroverride "Server override configure." b
- name: $1
	fmgr_fmupdate_fdssetting_serveroverride:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fmupdate_fdssetting_serveroverride: # t
$0
endsnippet

snippet fmgr_fmupdate_fdssetting_serveroverride_servlist "Override server." b
- name: $1
	fmgr_fmupdate_fdssetting_serveroverride_servlist:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fmupdate_fdssetting_serveroverride_servlist: # t
$0
endsnippet

snippet fmgr_fmupdate_fdssetting_updateschedule "Configure the schedule when built-in FortiGuard retrieves antivirus and IPS updates." b
- name: $1
	fmgr_fmupdate_fdssetting_updateschedule:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fmupdate_fdssetting_updateschedule: # t
$0
endsnippet

snippet fmgr_fmupdate_fwmsetting "Configure firmware management settings." b
- name: $1
	fmgr_fmupdate_fwmsetting:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fmupdate_fwmsetting: # t
$0
endsnippet

snippet fmgr_fmupdate_multilayer "Configure multilayer mode." b
- name: $1
	fmgr_fmupdate_multilayer:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fmupdate_multilayer: # t
$0
endsnippet

snippet fmgr_fmupdate_publicnetwork "Enable/disable access to the public FortiGuard." b
- name: $1
	fmgr_fmupdate_publicnetwork:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fmupdate_publicnetwork: # t
$0
endsnippet

snippet fmgr_fmupdate_serveraccesspriorities "Configure priorities for FortiGate units accessing antivirus updates and web filtering services." b
- name: $1
	fmgr_fmupdate_serveraccesspriorities:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fmupdate_serveraccesspriorities: # t
$0
endsnippet

snippet fmgr_fmupdate_serveraccesspriorities_privateserver "Configure multiple FortiManager units and private servers." b
- name: $1
	fmgr_fmupdate_serveraccesspriorities_privateserver:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fmupdate_serveraccesspriorities_privateserver: # t
$0
endsnippet

snippet fmgr_fmupdate_serveroverridestatus "Configure strict/loose server override." b
- name: $1
	fmgr_fmupdate_serveroverridestatus:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fmupdate_serveroverridestatus: # t
$0
endsnippet

snippet fmgr_fmupdate_service "Enable/disable services provided by the built-in FortiGuard." b
- name: $1
	fmgr_fmupdate_service:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fmupdate_service: # t
$0
endsnippet

snippet fmgr_fmupdate_webspam_fgdsetting "Configure the FortiGuard run parameters." b
- name: $1
	fmgr_fmupdate_webspam_fgdsetting:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fmupdate_webspam_fgdsetting: # t
$0
endsnippet

snippet fmgr_fmupdate_webspam_fgdsetting_serveroverride "Server override configure." b
- name: $1
	fmgr_fmupdate_webspam_fgdsetting_serveroverride:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fmupdate_webspam_fgdsetting_serveroverride: # t
$0
endsnippet

snippet fmgr_fmupdate_webspam_fgdsetting_serveroverride_servlist "Override server." b
- name: $1
	fmgr_fmupdate_webspam_fgdsetting_serveroverride_servlist:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fmupdate_webspam_fgdsetting_serveroverride_servlist: # t
$0
endsnippet

snippet fmgr_fmupdate_webspam_webproxy "Configure the web proxy for use with FortiGuard antivirus and IPS updates." b
- name: $1
	fmgr_fmupdate_webspam_webproxy:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fmupdate_webspam_webproxy: # t
$0
endsnippet

snippet fmgr_fsp_vlan "no description" b
- name: $1
	fmgr_fsp_vlan:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fsp_vlan: # t
$0
endsnippet

snippet fmgr_fsp_vlan_dhcpserver "Configure DHCP servers." b
- name: $1
	fmgr_fsp_vlan_dhcpserver:
		state: ${2:present|absent}
		adom: ${3:# t}
		vlan: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fsp_vlan_dhcpserver: # t
$0
endsnippet

snippet fmgr_fsp_vlan_dhcpserver_excluderange "Exclude one or more ranges of IP addresses from being assigned to clients." b
- name: $1
	fmgr_fsp_vlan_dhcpserver_excluderange:
		state: ${2:present|absent}
		adom: ${3:# t}
		vlan: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fsp_vlan_dhcpserver_excluderange: # t
$0
endsnippet

snippet fmgr_fsp_vlan_dhcpserver_iprange "DHCP IP range configuration." b
- name: $1
	fmgr_fsp_vlan_dhcpserver_iprange:
		state: ${2:present|absent}
		adom: ${3:# t}
		vlan: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fsp_vlan_dhcpserver_iprange: # t
$0
endsnippet

snippet fmgr_fsp_vlan_dhcpserver_options "DHCP options." b
- name: $1
	fmgr_fsp_vlan_dhcpserver_options:
		state: ${2:present|absent}
		adom: ${3:# t}
		vlan: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fsp_vlan_dhcpserver_options: # t
$0
endsnippet

snippet fmgr_fsp_vlan_dhcpserver_reservedaddress "Options for the DHCP server to assign IP settings to specific MAC addresses." b
- name: $1
	fmgr_fsp_vlan_dhcpserver_reservedaddress:
		state: ${2:present|absent}
		adom: ${3:# t}
		vlan: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fsp_vlan_dhcpserver_reservedaddress: # t
$0
endsnippet

snippet fmgr_fsp_vlan_dynamicmapping "no description" b
- name: $1
	fmgr_fsp_vlan_dynamicmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		vlan: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fsp_vlan_dynamicmapping: # t
$0
endsnippet

snippet fmgr_fsp_vlan_dynamicmapping_dhcpserver "Configure DHCP servers." b
- name: $1
	fmgr_fsp_vlan_dynamicmapping_dhcpserver:
		state: ${2:present|absent}
		adom: ${3:# t}
		vlan: ${4:# t}
		dynamic_mapping: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fsp_vlan_dynamicmapping_dhcpserver: # t
$0
endsnippet

snippet fmgr_fsp_vlan_dynamicmapping_dhcpserver_excluderange "Exclude one or more ranges of IP addresses from being assigned to clients." b
- name: $1
	fmgr_fsp_vlan_dynamicmapping_dhcpserver_excluderange:
		state: ${2:present|absent}
		adom: ${3:# t}
		vlan: ${4:# t}
		dynamic_mapping: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fsp_vlan_dynamicmapping_dhcpserver_excluderange: # t
$0
endsnippet

snippet fmgr_fsp_vlan_dynamicmapping_dhcpserver_iprange "DHCP IP range configuration." b
- name: $1
	fmgr_fsp_vlan_dynamicmapping_dhcpserver_iprange:
		state: ${2:present|absent}
		adom: ${3:# t}
		vlan: ${4:# t}
		dynamic_mapping: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fsp_vlan_dynamicmapping_dhcpserver_iprange: # t
$0
endsnippet

snippet fmgr_fsp_vlan_dynamicmapping_dhcpserver_options "DHCP options." b
- name: $1
	fmgr_fsp_vlan_dynamicmapping_dhcpserver_options:
		state: ${2:present|absent}
		adom: ${3:# t}
		vlan: ${4:# t}
		dynamic_mapping: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fsp_vlan_dynamicmapping_dhcpserver_options: # t
$0
endsnippet

snippet fmgr_fsp_vlan_dynamicmapping_dhcpserver_reservedaddress "Options for the DHCP server to assign IP settings to specific MAC addresses." b
- name: $1
	fmgr_fsp_vlan_dynamicmapping_dhcpserver_reservedaddress:
		state: ${2:present|absent}
		adom: ${3:# t}
		vlan: ${4:# t}
		dynamic_mapping: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fsp_vlan_dynamicmapping_dhcpserver_reservedaddress: # t
$0
endsnippet

snippet fmgr_fsp_vlan_dynamicmapping_interface "no description" b
- name: $1
	fmgr_fsp_vlan_dynamicmapping_interface:
		state: ${2:present|absent}
		adom: ${3:# t}
		vlan: ${4:# t}
		dynamic_mapping: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fsp_vlan_dynamicmapping_interface: # t
$0
endsnippet

snippet fmgr_fsp_vlan_dynamicmapping_interface_ipv6 "IPv6 of interface." b
- name: $1
	fmgr_fsp_vlan_dynamicmapping_interface_ipv6:
		state: ${2:present|absent}
		adom: ${3:# t}
		vlan: ${4:# t}
		dynamic_mapping: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fsp_vlan_dynamicmapping_interface_ipv6: # t
$0
endsnippet

snippet fmgr_fsp_vlan_dynamicmapping_interface_ipv6_ip6delegatedprefixlist "Advertised IPv6 delegated prefix list." b
- name: $1
	fmgr_fsp_vlan_dynamicmapping_interface_ipv6_ip6delegatedprefixlist:
		state: ${2:present|absent}
		adom: ${3:# t}
		vlan: ${4:# t}
		dynamic_mapping: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fsp_vlan_dynamicmapping_interface_ipv6_ip6delegatedprefixlist: # t
$0
endsnippet

snippet fmgr_fsp_vlan_dynamicmapping_interface_ipv6_ip6extraaddr "Extra IPv6 address prefixes of interface." b
- name: $1
	fmgr_fsp_vlan_dynamicmapping_interface_ipv6_ip6extraaddr:
		state: ${2:present|absent}
		adom: ${3:# t}
		vlan: ${4:# t}
		dynamic_mapping: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fsp_vlan_dynamicmapping_interface_ipv6_ip6extraaddr: # t
$0
endsnippet

snippet fmgr_fsp_vlan_dynamicmapping_interface_ipv6_ip6prefixlist "Advertised prefix list." b
- name: $1
	fmgr_fsp_vlan_dynamicmapping_interface_ipv6_ip6prefixlist:
		state: ${2:present|absent}
		adom: ${3:# t}
		vlan: ${4:# t}
		dynamic_mapping: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fsp_vlan_dynamicmapping_interface_ipv6_ip6prefixlist: # t
$0
endsnippet

snippet fmgr_fsp_vlan_dynamicmapping_interface_ipv6_vrrp6 "IPv6 VRRP configuration." b
- name: $1
	fmgr_fsp_vlan_dynamicmapping_interface_ipv6_vrrp6:
		state: ${2:present|absent}
		adom: ${3:# t}
		vlan: ${4:# t}
		dynamic_mapping: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fsp_vlan_dynamicmapping_interface_ipv6_vrrp6: # t
$0
endsnippet

snippet fmgr_fsp_vlan_dynamicmapping_interface_secondaryip "Second IP address of interface." b
- name: $1
	fmgr_fsp_vlan_dynamicmapping_interface_secondaryip:
		state: ${2:present|absent}
		adom: ${3:# t}
		vlan: ${4:# t}
		dynamic_mapping: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fsp_vlan_dynamicmapping_interface_secondaryip: # t
$0
endsnippet

snippet fmgr_fsp_vlan_interface "Configure interfaces." b
- name: $1
	fmgr_fsp_vlan_interface:
		state: ${2:present|absent}
		adom: ${3:# t}
		vlan: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fsp_vlan_interface: # t
$0
endsnippet

snippet fmgr_fsp_vlan_interface_ipv6 "IPv6 of interface." b
- name: $1
	fmgr_fsp_vlan_interface_ipv6:
		state: ${2:present|absent}
		adom: ${3:# t}
		vlan: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fsp_vlan_interface_ipv6: # t
$0
endsnippet

snippet fmgr_fsp_vlan_interface_ipv6_ip6delegatedprefixlist "Advertised IPv6 delegated prefix list." b
- name: $1
	fmgr_fsp_vlan_interface_ipv6_ip6delegatedprefixlist:
		state: ${2:present|absent}
		adom: ${3:# t}
		vlan: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fsp_vlan_interface_ipv6_ip6delegatedprefixlist: # t
$0
endsnippet

snippet fmgr_fsp_vlan_interface_ipv6_ip6extraaddr "Extra IPv6 address prefixes of interface." b
- name: $1
	fmgr_fsp_vlan_interface_ipv6_ip6extraaddr:
		state: ${2:present|absent}
		adom: ${3:# t}
		vlan: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fsp_vlan_interface_ipv6_ip6extraaddr: # t
$0
endsnippet

snippet fmgr_fsp_vlan_interface_ipv6_ip6prefixlist "Advertised prefix list." b
- name: $1
	fmgr_fsp_vlan_interface_ipv6_ip6prefixlist:
		state: ${2:present|absent}
		adom: ${3:# t}
		vlan: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fsp_vlan_interface_ipv6_ip6prefixlist: # t
$0
endsnippet

snippet fmgr_fsp_vlan_interface_ipv6_vrrp6 "IPv6 VRRP configuration." b
- name: $1
	fmgr_fsp_vlan_interface_ipv6_vrrp6:
		state: ${2:present|absent}
		adom: ${3:# t}
		vlan: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fsp_vlan_interface_ipv6_vrrp6: # t
$0
endsnippet

snippet fmgr_fsp_vlan_interface_secondaryip "Second IP address of interface." b
- name: $1
	fmgr_fsp_vlan_interface_secondaryip:
		state: ${2:present|absent}
		adom: ${3:# t}
		vlan: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fsp_vlan_interface_secondaryip: # t
$0
endsnippet

snippet fmgr_fsp_vlan_interface_vrrp "VRRP configuration." b
- name: $1
	fmgr_fsp_vlan_interface_vrrp:
		state: ${2:present|absent}
		adom: ${3:# t}
		vlan: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# fsp_vlan_interface_vrrp: # t
$0
endsnippet

snippet fmgr_generic "Build and send generic FortiManager API request." b
- name: $1
	fmgr_generic:
		# enable_log: no
		# method: # the method of the json-rpc
		# params: # the parameter collection.
		# json: # the raw json-formatted payload to send to fortimanager
$0
endsnippet

snippet fmgr_gtp_apn "Configure APN for GTP." b
- name: $1
	fmgr_gtp_apn:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# gtp_apn: # t
$0
endsnippet

snippet fmgr_gtp_apngrp "Configure APN groups for GTP." b
- name: $1
	fmgr_gtp_apngrp:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# gtp_apngrp: # t
$0
endsnippet

snippet fmgr_gtp_iewhitelist "IE white list." b
- name: $1
	fmgr_gtp_iewhitelist:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# gtp_iewhitelist: # t
$0
endsnippet

snippet fmgr_gtp_iewhitelist_entries "Entries of white list" b
- name: $1
	fmgr_gtp_iewhitelist_entries:
		state: ${2:present|absent}
		adom: ${3:# t}
		ie-white-list: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# gtp_iewhitelist_entries: # t
$0
endsnippet

snippet fmgr_gtp_messagefilterv0v1 "Message filter for GTPv0/v1 messages." b
- name: $1
	fmgr_gtp_messagefilterv0v1:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# gtp_messagefilterv0v1: # t
$0
endsnippet

snippet fmgr_gtp_messagefilterv2 "Message filter for GTPv2 messages." b
- name: $1
	fmgr_gtp_messagefilterv2:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# gtp_messagefilterv2: # t
$0
endsnippet

snippet fmgr_gtp_tunnellimit "GTP tunnel limiter." b
- name: $1
	fmgr_gtp_tunnellimit:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# gtp_tunnellimit: # t
$0
endsnippet

snippet fmgr_hotspot20_anqp3gppcellular "Configure 3GPP public land mobile network" b
- name: $1
	fmgr_hotspot20_anqp3gppcellular:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# hotspot20_anqp3gppcellular: # t
$0
endsnippet

snippet fmgr_hotspot20_anqp3gppcellular_mccmnclist "Mobile Country Code and Mobile Network Code configuration." b
- name: $1
	fmgr_hotspot20_anqp3gppcellular_mccmnclist:
		state: ${2:present|absent}
		adom: ${3:# t}
		anqp-3gpp-cellular: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# hotspot20_anqp3gppcellular_mccmnclist: # t
$0
endsnippet

snippet fmgr_hotspot20_anqpipaddresstype "Configure IP address type availability." b
- name: $1
	fmgr_hotspot20_anqpipaddresstype:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# hotspot20_anqpipaddresstype: # t
$0
endsnippet

snippet fmgr_hotspot20_anqpnairealm "Configure network access identifier" b
- name: $1
	fmgr_hotspot20_anqpnairealm:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# hotspot20_anqpnairealm: # t
$0
endsnippet

snippet fmgr_hotspot20_anqpnairealm_nailist "NAI list." b
- name: $1
	fmgr_hotspot20_anqpnairealm_nailist:
		state: ${2:present|absent}
		adom: ${3:# t}
		anqp-nai-realm: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# hotspot20_anqpnairealm_nailist: # t
$0
endsnippet

snippet fmgr_hotspot20_anqpnairealm_nailist_eapmethod "EAP Methods." b
- name: $1
	fmgr_hotspot20_anqpnairealm_nailist_eapmethod:
		state: ${2:present|absent}
		adom: ${3:# t}
		anqp-nai-realm: ${4:# t}
		nai-list: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# hotspot20_anqpnairealm_nailist_eapmethod: # t
$0
endsnippet

snippet fmgr_hotspot20_anqpnairealm_nailist_eapmethod_authparam "EAP auth param." b
- name: $1
	fmgr_hotspot20_anqpnairealm_nailist_eapmethod_authparam:
		state: ${2:present|absent}
		adom: ${3:# t}
		anqp-nai-realm: ${4:# t}
		nai-list: ${5:# t}
		eap-method: ${6:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# hotspot20_anqpnairealm_nailist_eapmethod_authparam: # t
$0
endsnippet

snippet fmgr_hotspot20_anqpnetworkauthtype "Configure network authentication type." b
- name: $1
	fmgr_hotspot20_anqpnetworkauthtype:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# hotspot20_anqpnetworkauthtype: # t
$0
endsnippet

snippet fmgr_hotspot20_anqproamingconsortium "Configure roaming consortium." b
- name: $1
	fmgr_hotspot20_anqproamingconsortium:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# hotspot20_anqproamingconsortium: # t
$0
endsnippet

snippet fmgr_hotspot20_anqproamingconsortium_oilist "Organization identifier list." b
- name: $1
	fmgr_hotspot20_anqproamingconsortium_oilist:
		state: ${2:present|absent}
		adom: ${3:# t}
		anqp-roaming-consortium: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# hotspot20_anqproamingconsortium_oilist: # t
$0
endsnippet

snippet fmgr_hotspot20_anqpvenuename "Configure venue name duple." b
- name: $1
	fmgr_hotspot20_anqpvenuename:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# hotspot20_anqpvenuename: # t
$0
endsnippet

snippet fmgr_hotspot20_anqpvenuename_valuelist "Name list." b
- name: $1
	fmgr_hotspot20_anqpvenuename_valuelist:
		state: ${2:present|absent}
		adom: ${3:# t}
		anqp-venue-name: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# hotspot20_anqpvenuename_valuelist: # t
$0
endsnippet

snippet fmgr_hotspot20_h2qpconncapability "Configure connection capability." b
- name: $1
	fmgr_hotspot20_h2qpconncapability:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# hotspot20_h2qpconncapability: # t
$0
endsnippet

snippet fmgr_hotspot20_h2qpoperatorname "Configure operator friendly name." b
- name: $1
	fmgr_hotspot20_h2qpoperatorname:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# hotspot20_h2qpoperatorname: # t
$0
endsnippet

snippet fmgr_hotspot20_h2qpoperatorname_valuelist "Name list." b
- name: $1
	fmgr_hotspot20_h2qpoperatorname_valuelist:
		state: ${2:present|absent}
		adom: ${3:# t}
		h2qp-operator-name: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# hotspot20_h2qpoperatorname_valuelist: # t
$0
endsnippet

snippet fmgr_hotspot20_h2qposuprovider "Configure online sign up" b
- name: $1
	fmgr_hotspot20_h2qposuprovider:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# hotspot20_h2qposuprovider: # t
$0
endsnippet

snippet fmgr_hotspot20_h2qposuprovider_friendlyname "OSU provider friendly name." b
- name: $1
	fmgr_hotspot20_h2qposuprovider_friendlyname:
		state: ${2:present|absent}
		adom: ${3:# t}
		h2qp-osu-provider: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# hotspot20_h2qposuprovider_friendlyname: # t
$0
endsnippet

snippet fmgr_hotspot20_h2qposuprovider_servicedescription "OSU service name." b
- name: $1
	fmgr_hotspot20_h2qposuprovider_servicedescription:
		state: ${2:present|absent}
		adom: ${3:# t}
		h2qp-osu-provider: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# hotspot20_h2qposuprovider_servicedescription: # t
$0
endsnippet

snippet fmgr_hotspot20_h2qpwanmetric "Configure WAN metrics." b
- name: $1
	fmgr_hotspot20_h2qpwanmetric:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# hotspot20_h2qpwanmetric: # t
$0
endsnippet

snippet fmgr_hotspot20_hsprofile "Configure hotspot profile." b
- name: $1
	fmgr_hotspot20_hsprofile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# hotspot20_hsprofile: # t
$0
endsnippet

snippet fmgr_hotspot20_qosmap "Configure QoS map set." b
- name: $1
	fmgr_hotspot20_qosmap:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# hotspot20_qosmap: # t
$0
endsnippet

snippet fmgr_hotspot20_qosmap_dscpexcept "Differentiated Services Code Point" b
- name: $1
	fmgr_hotspot20_qosmap_dscpexcept:
		state: ${2:present|absent}
		adom: ${3:# t}
		qos-map: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# hotspot20_qosmap_dscpexcept: # t
$0
endsnippet

snippet fmgr_hotspot20_qosmap_dscprange "Differentiated Services Code Point" b
- name: $1
	fmgr_hotspot20_qosmap_dscprange:
		state: ${2:present|absent}
		adom: ${3:# t}
		qos-map: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# hotspot20_qosmap_dscprange: # t
$0
endsnippet

snippet fmgr_icap_profile "Configure ICAP profiles." b
- name: $1
	fmgr_icap_profile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# icap_profile: # t
$0
endsnippet

snippet fmgr_icap_profile_icapheaders "Configure ICAP forwarded request headers." b
- name: $1
	fmgr_icap_profile_icapheaders:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# icap_profile_icapheaders: # t
$0
endsnippet

snippet fmgr_icap_profile_respmodforwardrules "ICAP response mode forward rules." b
- name: $1
	fmgr_icap_profile_respmodforwardrules:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# icap_profile_respmodforwardrules: # t
$0
endsnippet

snippet fmgr_icap_profile_respmodforwardrules_headergroup "HTTP header group." b
- name: $1
	fmgr_icap_profile_respmodforwardrules_headergroup:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		respmod-forward-rules: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# icap_profile_respmodforwardrules_headergroup: # t
$0
endsnippet

snippet fmgr_icap_server "Configure ICAP servers." b
- name: $1
	fmgr_icap_server:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# icap_server: # t
$0
endsnippet

snippet fmgr_ips_custom "Configure IPS custom signature." b
- name: $1
	fmgr_ips_custom:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# ips_custom: # t
$0
endsnippet

snippet fmgr_ips_sensor "Configure IPS sensor." b
- name: $1
	fmgr_ips_sensor:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# ips_sensor: # t
$0
endsnippet

snippet fmgr_ips_sensor_entries "IPS sensor filter." b
- name: $1
	fmgr_ips_sensor_entries:
		state: ${2:present|absent}
		adom: ${3:# t}
		sensor: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# ips_sensor_entries: # t
$0
endsnippet

snippet fmgr_ips_sensor_entries_exemptip "Traffic from selected source or destination IP addresses is exempt from this signature." b
- name: $1
	fmgr_ips_sensor_entries_exemptip:
		state: ${2:present|absent}
		adom: ${3:# t}
		sensor: ${4:# t}
		entries: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# ips_sensor_entries_exemptip: # t
$0
endsnippet

snippet fmgr_log_customfield "Configure custom log fields." b
- name: $1
	fmgr_log_customfield:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# log_customfield: # t
$0
endsnippet

snippet fmgr_metafields_system_admin_user "no description" b
- name: $1
	fmgr_metafields_system_admin_user:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# metafields_system_admin_user: # t
$0
endsnippet

snippet fmgr_move "Move fortimanager defined Object." b
- name: $1
	fmgr_move:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# move: # t
$0
endsnippet

snippet fmgr_mpskprofile "Configure MPSK profile." b
- name: $1
	fmgr_mpskprofile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# mpskprofile: # t
$0
endsnippet

snippet fmgr_mpskprofile_mpskgroup "List of multiple PSK groups." b
- name: $1
	fmgr_mpskprofile_mpskgroup:
		state: ${2:present|absent}
		adom: ${3:# t}
		mpsk-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# mpskprofile_mpskgroup: # t
$0
endsnippet

snippet fmgr_mpskprofile_mpskgroup_mpskkey "List of multiple PSK entries." b
- name: $1
	fmgr_mpskprofile_mpskgroup_mpskkey:
		state: ${2:present|absent}
		adom: ${3:# t}
		mpsk-profile: ${4:# t}
		mpsk-group: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# mpskprofile_mpskgroup_mpskkey: # t
$0
endsnippet

snippet fmgr_pkg_authentication_rule "Configure Authentication Rules." b
- name: $1
	fmgr_pkg_authentication_rule:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_authentication_rule: # t
$0
endsnippet

snippet fmgr_pkg_authentication_setting "Configure authentication setting." b
- name: $1
	fmgr_pkg_authentication_setting:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_authentication_setting: # t
$0
endsnippet

snippet fmgr_pkg_central_dnat "no description" b
- name: $1
	fmgr_pkg_central_dnat:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_central_dnat: # t
$0
endsnippet

snippet fmgr_pkg_central_dnat6 "no description" b
- name: $1
	fmgr_pkg_central_dnat6:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_central_dnat6: # t
$0
endsnippet

snippet fmgr_pkg_firewall_centralsnatmap "Configure central SNAT policies." b
- name: $1
	fmgr_pkg_firewall_centralsnatmap:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_firewall_centralsnatmap: # t
$0
endsnippet

snippet fmgr_pkg_firewall_consolidated_policy "Configure consolidated IPv4/IPv6 policies." b
- name: $1
	fmgr_pkg_firewall_consolidated_policy:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_firewall_consolidated_policy: # t
$0
endsnippet

snippet fmgr_pkg_firewall_consolidated_policy_sectionvalue "Configure consolidated IPv4/IPv6 policies." b
- name: $1
	fmgr_pkg_firewall_consolidated_policy_sectionvalue:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		policy: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_firewall_consolidated_policy_sectionvalue: # t
$0
endsnippet

snippet fmgr_pkg_firewall_dospolicy "Configure IPv4 DoS policies." b
- name: $1
	fmgr_pkg_firewall_dospolicy:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_firewall_dospolicy: # t
$0
endsnippet

snippet fmgr_pkg_firewall_dospolicy6 "Configure IPv6 DoS policies." b
- name: $1
	fmgr_pkg_firewall_dospolicy6:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_firewall_dospolicy6: # t
$0
endsnippet

snippet fmgr_pkg_firewall_dospolicy6_anomaly "Anomaly name." b
- name: $1
	fmgr_pkg_firewall_dospolicy6_anomaly:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		DoS-policy6: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_firewall_dospolicy6_anomaly: # t
$0
endsnippet

snippet fmgr_pkg_firewall_dospolicy_anomaly "Anomaly name." b
- name: $1
	fmgr_pkg_firewall_dospolicy_anomaly:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		DoS-policy: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_firewall_dospolicy_anomaly: # t
$0
endsnippet

snippet fmgr_pkg_firewall_interfacepolicy "Configure IPv4 interface policies." b
- name: $1
	fmgr_pkg_firewall_interfacepolicy:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_firewall_interfacepolicy: # t
$0
endsnippet

snippet fmgr_pkg_firewall_interfacepolicy6 "Configure IPv6 interface policies." b
- name: $1
	fmgr_pkg_firewall_interfacepolicy6:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_firewall_interfacepolicy6: # t
$0
endsnippet

snippet fmgr_pkg_firewall_interfacepolicy6_sectionvalue "Configure IPv6 interface policies." b
- name: $1
	fmgr_pkg_firewall_interfacepolicy6_sectionvalue:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		interface-policy6: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_firewall_interfacepolicy6_sectionvalue: # t
$0
endsnippet

snippet fmgr_pkg_firewall_interfacepolicy_sectionvalue "Configure IPv4 interface policies." b
- name: $1
	fmgr_pkg_firewall_interfacepolicy_sectionvalue:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		interface-policy: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_firewall_interfacepolicy_sectionvalue: # t
$0
endsnippet

snippet fmgr_pkg_firewall_localinpolicy "Configure user defined IPv4 local-in policies." b
- name: $1
	fmgr_pkg_firewall_localinpolicy:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_firewall_localinpolicy: # t
$0
endsnippet

snippet fmgr_pkg_firewall_localinpolicy6 "Configure user defined IPv6 local-in policies." b
- name: $1
	fmgr_pkg_firewall_localinpolicy6:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_firewall_localinpolicy6: # t
$0
endsnippet

snippet fmgr_pkg_firewall_multicastpolicy "Configure multicast NAT policies." b
- name: $1
	fmgr_pkg_firewall_multicastpolicy:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_firewall_multicastpolicy: # t
$0
endsnippet

snippet fmgr_pkg_firewall_multicastpolicy6 "Configure IPv6 multicast NAT policies." b
- name: $1
	fmgr_pkg_firewall_multicastpolicy6:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_firewall_multicastpolicy6: # t
$0
endsnippet

snippet fmgr_pkg_firewall_policy "Configure IPv4 policies." b
- name: $1
	fmgr_pkg_firewall_policy:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_firewall_policy: # t
$0
endsnippet

snippet fmgr_pkg_firewall_policy46 "Configure IPv4 to IPv6 policies." b
- name: $1
	fmgr_pkg_firewall_policy46:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_firewall_policy46: # t
$0
endsnippet

snippet fmgr_pkg_firewall_policy6 "Configure IPv6 policies." b
- name: $1
	fmgr_pkg_firewall_policy6:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_firewall_policy6: # t
$0
endsnippet

snippet fmgr_pkg_firewall_policy64 "Configure IPv6 to IPv4 policies." b
- name: $1
	fmgr_pkg_firewall_policy64:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_firewall_policy64: # t
$0
endsnippet

snippet fmgr_pkg_firewall_policy6_sectionvalue "Configure IPv6 policies." b
- name: $1
	fmgr_pkg_firewall_policy6_sectionvalue:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		policy6: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_firewall_policy6_sectionvalue: # t
$0
endsnippet

snippet fmgr_pkg_firewall_policy_sectionvalue "Configure IPv4 policies." b
- name: $1
	fmgr_pkg_firewall_policy_sectionvalue:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		policy: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_firewall_policy_sectionvalue: # t
$0
endsnippet

snippet fmgr_pkg_firewall_policy_vpndstnode "no description" b
- name: $1
	fmgr_pkg_firewall_policy_vpndstnode:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		policy: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_firewall_policy_vpndstnode: # t
$0
endsnippet

snippet fmgr_pkg_firewall_policy_vpnsrcnode "no description" b
- name: $1
	fmgr_pkg_firewall_policy_vpnsrcnode:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		policy: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_firewall_policy_vpnsrcnode: # t
$0
endsnippet

snippet fmgr_pkg_firewall_proxypolicy "Configure proxy policies." b
- name: $1
	fmgr_pkg_firewall_proxypolicy:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_firewall_proxypolicy: # t
$0
endsnippet

snippet fmgr_pkg_firewall_proxypolicy_sectionvalue "Configure proxy policies." b
- name: $1
	fmgr_pkg_firewall_proxypolicy_sectionvalue:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		proxy-policy: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_firewall_proxypolicy_sectionvalue: # t
$0
endsnippet

snippet fmgr_pkg_firewall_securitypolicy "Configure NGFW IPv4/IPv6 application policies." b
- name: $1
	fmgr_pkg_firewall_securitypolicy:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_firewall_securitypolicy: # t
$0
endsnippet

snippet fmgr_pkg_firewall_securitypolicy_sectionvalue "Configure NGFW IPv4/IPv6 application policies." b
- name: $1
	fmgr_pkg_firewall_securitypolicy_sectionvalue:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		security-policy: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_firewall_securitypolicy_sectionvalue: # t
$0
endsnippet

snippet fmgr_pkg_firewall_shapingpolicy "Configure shaping policies." b
- name: $1
	fmgr_pkg_firewall_shapingpolicy:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_firewall_shapingpolicy: # t
$0
endsnippet

snippet fmgr_pkg_footer_policy "Configure IPv4/IPv6 policies." b
- name: $1
	fmgr_pkg_footer_policy:
		state: ${2:present|absent}
		pkg: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_footer_policy: # t
$0
endsnippet

snippet fmgr_pkg_footer_policy6 "Configure IPv6 policies." b
- name: $1
	fmgr_pkg_footer_policy6:
		state: ${2:present|absent}
		pkg: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_footer_policy6: # t
$0
endsnippet

snippet fmgr_pkg_footer_shapingpolicy "Configure shaping policies." b
- name: $1
	fmgr_pkg_footer_shapingpolicy:
		state: ${2:present|absent}
		pkg: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_footer_shapingpolicy: # t
$0
endsnippet

snippet fmgr_pkg_header_policy "Configure IPv4/IPv6 policies." b
- name: $1
	fmgr_pkg_header_policy:
		state: ${2:present|absent}
		pkg: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_header_policy: # t
$0
endsnippet

snippet fmgr_pkg_header_policy6 "Configure IPv6 policies." b
- name: $1
	fmgr_pkg_header_policy6:
		state: ${2:present|absent}
		pkg: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_header_policy6: # t
$0
endsnippet

snippet fmgr_pkg_header_shapingpolicy "Configure shaping policies." b
- name: $1
	fmgr_pkg_header_shapingpolicy:
		state: ${2:present|absent}
		pkg: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pkg_header_shapingpolicy: # t
$0
endsnippet

snippet fmgr_pm_config_metafields_firewall_address "no description" b
- name: $1
	fmgr_pm_config_metafields_firewall_address:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pm_config_metafields_firewall_address: # t
$0
endsnippet

snippet fmgr_pm_config_metafields_firewall_addrgrp "no description" b
- name: $1
	fmgr_pm_config_metafields_firewall_addrgrp:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pm_config_metafields_firewall_addrgrp: # t
$0
endsnippet

snippet fmgr_pm_config_metafields_firewall_centralsnatmap "no description" b
- name: $1
	fmgr_pm_config_metafields_firewall_centralsnatmap:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pm_config_metafields_firewall_centralsnatmap: # t
$0
endsnippet

snippet fmgr_pm_config_metafields_firewall_policy "no description" b
- name: $1
	fmgr_pm_config_metafields_firewall_policy:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pm_config_metafields_firewall_policy: # t
$0
endsnippet

snippet fmgr_pm_config_metafields_firewall_service_custom "no description" b
- name: $1
	fmgr_pm_config_metafields_firewall_service_custom:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pm_config_metafields_firewall_service_custom: # t
$0
endsnippet

snippet fmgr_pm_config_metafields_firewall_service_group "no description" b
- name: $1
	fmgr_pm_config_metafields_firewall_service_group:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pm_config_metafields_firewall_service_group: # t
$0
endsnippet

snippet fmgr_pm_config_reset_database "Reset Global ADOM to a specific version." b
- name: $1
	fmgr_pm_config_reset_database:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pm_config_reset_database: # t
$0
endsnippet

snippet fmgr_pm_config_upgrade "Upgrade an ADOM to the next version." b
- name: $1
	fmgr_pm_config_upgrade:
		adom: ${2:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
$0
endsnippet

snippet fmgr_pm_config_workspace_commit "Commit changes to an ADOM." b
- name: $1
	fmgr_pm_config_workspace_commit:
		adom: ${2:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
$0
endsnippet

snippet fmgr_pm_config_workspace_lock "Lock an ADOM in workspace mode." b
- name: $1
	fmgr_pm_config_workspace_lock:
		adom: ${2:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
$0
endsnippet

snippet fmgr_pm_config_workspace_unlock "Unlock an ADOM." b
- name: $1
	fmgr_pm_config_workspace_unlock:
		adom: ${2:# t}
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
$0
endsnippet

snippet fmgr_pm_devprof_adom "no description" b
- name: $1
	fmgr_pm_devprof_adom:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pm_devprof_adom: # t
$0
endsnippet

snippet fmgr_pm_devprof_pkg "no description" b
- name: $1
	fmgr_pm_devprof_pkg:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg_path: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pm_devprof_pkg: # t
$0
endsnippet

snippet fmgr_pm_pkg "no description" b
- name: $1
	fmgr_pm_pkg:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg_path: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pm_pkg: # t
$0
endsnippet

snippet fmgr_pm_pkg_adom "no description" b
- name: $1
	fmgr_pm_pkg_adom:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pm_pkg_adom: # t
$0
endsnippet

snippet fmgr_pm_pkg_global "no description" b
- name: $1
	fmgr_pm_pkg_global:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pm_pkg_global: # t
$0
endsnippet

snippet fmgr_pm_wanprof_adom "no description" b
- name: $1
	fmgr_pm_wanprof_adom:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pm_wanprof_adom: # t
$0
endsnippet

snippet fmgr_pm_wanprof_pkg "no description" b
- name: $1
	fmgr_pm_wanprof_pkg:
		state: ${2:present|absent}
		adom: ${3:# t}
		pkg_path: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# pm_wanprof_pkg: # t
$0
endsnippet

snippet fmgr_qosprofile "Configure WiFi quality of service" b
- name: $1
	fmgr_qosprofile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# qosprofile: # t
$0
endsnippet

snippet fmgr_region "Configure FortiAP regions" b
- name: $1
	fmgr_region:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# region: # t
$0
endsnippet

snippet fmgr_rename "Rename an object in FortiManager." b
- name: $1
	fmgr_rename:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# rename: # t
$0
endsnippet

snippet fmgr_securityconsole_abort "Abort and cancel a security console task." b
- name: $1
	fmgr_securityconsole_abort:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# securityconsole_abort: # t
$0
endsnippet

snippet fmgr_securityconsole_assign_package "Assign or unassign global policy package to ADOM packages." b
- name: $1
	fmgr_securityconsole_assign_package:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# securityconsole_assign_package: # t
$0
endsnippet

snippet fmgr_securityconsole_import_dev_objs "Import objects from device to ADOM, or from ADOM to Global." b
- name: $1
	fmgr_securityconsole_import_dev_objs:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# securityconsole_import_dev_objs: # t
$0
endsnippet

snippet fmgr_securityconsole_install_device "no description" b
- name: $1
	fmgr_securityconsole_install_device:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# securityconsole_install_device: # t
$0
endsnippet

snippet fmgr_securityconsole_install_package "Copy and install a policy package to devices." b
- name: $1
	fmgr_securityconsole_install_package:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# securityconsole_install_package: # t
$0
endsnippet

snippet fmgr_securityconsole_install_preview "Generate install preview for a device." b
- name: $1
	fmgr_securityconsole_install_preview:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# securityconsole_install_preview: # t
$0
endsnippet

snippet fmgr_securityconsole_package_cancel_install "Cancel policy install and clear preview cache." b
- name: $1
	fmgr_securityconsole_package_cancel_install:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# securityconsole_package_cancel_install: # t
$0
endsnippet

snippet fmgr_securityconsole_package_clone "Clone a policy package within the same ADOM." b
- name: $1
	fmgr_securityconsole_package_clone:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# securityconsole_package_clone: # t
$0
endsnippet

snippet fmgr_securityconsole_package_commit "Install policies to device from preview cache." b
- name: $1
	fmgr_securityconsole_package_commit:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# securityconsole_package_commit: # t
$0
endsnippet

snippet fmgr_securityconsole_package_move "Move and/or rename a policy package within the same ADOM." b
- name: $1
	fmgr_securityconsole_package_move:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# securityconsole_package_move: # t
$0
endsnippet

snippet fmgr_securityconsole_pblock_clone "no description" b
- name: $1
	fmgr_securityconsole_pblock_clone:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# securityconsole_pblock_clone: # t
$0
endsnippet

snippet fmgr_securityconsole_preview_result "Retrieve the result of previous install/preview command." b
- name: $1
	fmgr_securityconsole_preview_result:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# securityconsole_preview_result: # t
$0
endsnippet

snippet fmgr_securityconsole_reinstall_package "Re-install a policy package that had been previously installed." b
- name: $1
	fmgr_securityconsole_reinstall_package:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# securityconsole_reinstall_package: # t
$0
endsnippet

snippet fmgr_securityconsole_sign_certificate_template "Generate and sign certificate on the target device." b
- name: $1
	fmgr_securityconsole_sign_certificate_template:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# securityconsole_sign_certificate_template: # t
$0
endsnippet

snippet fmgr_spamfilter_bwl "Configure anti-spam black/white list." b
- name: $1
	fmgr_spamfilter_bwl:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# spamfilter_bwl: # t
$0
endsnippet

snippet fmgr_spamfilter_bwl_entries "Anti-spam black/white list entries." b
- name: $1
	fmgr_spamfilter_bwl_entries:
		state: ${2:present|absent}
		adom: ${3:# t}
		bwl: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# spamfilter_bwl_entries: # t
$0
endsnippet

snippet fmgr_spamfilter_bword "Configure AntiSpam banned word list." b
- name: $1
	fmgr_spamfilter_bword:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# spamfilter_bword: # t
$0
endsnippet

snippet fmgr_spamfilter_bword_entries "Spam filter banned word." b
- name: $1
	fmgr_spamfilter_bword_entries:
		state: ${2:present|absent}
		adom: ${3:# t}
		bword: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# spamfilter_bword_entries: # t
$0
endsnippet

snippet fmgr_spamfilter_dnsbl "Configure AntiSpam DNSBL/ORBL." b
- name: $1
	fmgr_spamfilter_dnsbl:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# spamfilter_dnsbl: # t
$0
endsnippet

snippet fmgr_spamfilter_dnsbl_entries "Spam filter DNSBL and ORBL server." b
- name: $1
	fmgr_spamfilter_dnsbl_entries:
		state: ${2:present|absent}
		adom: ${3:# t}
		dnsbl: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# spamfilter_dnsbl_entries: # t
$0
endsnippet

snippet fmgr_spamfilter_iptrust "Configure AntiSpam IP trust." b
- name: $1
	fmgr_spamfilter_iptrust:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# spamfilter_iptrust: # t
$0
endsnippet

snippet fmgr_spamfilter_iptrust_entries "Spam filter trusted IP addresses." b
- name: $1
	fmgr_spamfilter_iptrust_entries:
		state: ${2:present|absent}
		adom: ${3:# t}
		iptrust: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# spamfilter_iptrust_entries: # t
$0
endsnippet

snippet fmgr_spamfilter_mheader "Configure AntiSpam MIME header." b
- name: $1
	fmgr_spamfilter_mheader:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# spamfilter_mheader: # t
$0
endsnippet

snippet fmgr_spamfilter_mheader_entries "Spam filter mime header content." b
- name: $1
	fmgr_spamfilter_mheader_entries:
		state: ${2:present|absent}
		adom: ${3:# t}
		mheader: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# spamfilter_mheader_entries: # t
$0
endsnippet

snippet fmgr_spamfilter_profile "Configure AntiSpam profiles." b
- name: $1
	fmgr_spamfilter_profile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# spamfilter_profile: # t
$0
endsnippet

snippet fmgr_spamfilter_profile_gmail "Gmail." b
- name: $1
	fmgr_spamfilter_profile_gmail:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# spamfilter_profile_gmail: # t
$0
endsnippet

snippet fmgr_spamfilter_profile_imap "IMAP." b
- name: $1
	fmgr_spamfilter_profile_imap:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# spamfilter_profile_imap: # t
$0
endsnippet

snippet fmgr_spamfilter_profile_mapi "MAPI." b
- name: $1
	fmgr_spamfilter_profile_mapi:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# spamfilter_profile_mapi: # t
$0
endsnippet

snippet fmgr_spamfilter_profile_msnhotmail "MSN Hotmail." b
- name: $1
	fmgr_spamfilter_profile_msnhotmail:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# spamfilter_profile_msnhotmail: # t
$0
endsnippet

snippet fmgr_spamfilter_profile_pop3 "POP3." b
- name: $1
	fmgr_spamfilter_profile_pop3:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# spamfilter_profile_pop3: # t
$0
endsnippet

snippet fmgr_spamfilter_profile_smtp "SMTP." b
- name: $1
	fmgr_spamfilter_profile_smtp:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# spamfilter_profile_smtp: # t
$0
endsnippet

snippet fmgr_spamfilter_profile_yahoomail "Yahoo! Mail." b
- name: $1
	fmgr_spamfilter_profile_yahoomail:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# spamfilter_profile_yahoomail: # t
$0
endsnippet

snippet fmgr_sshfilter_profile "SSH filter profile." b
- name: $1
	fmgr_sshfilter_profile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# sshfilter_profile: # t
$0
endsnippet

snippet fmgr_sshfilter_profile_filefilter "File filter." b
- name: $1
	fmgr_sshfilter_profile_filefilter:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# sshfilter_profile_filefilter: # t
$0
endsnippet

snippet fmgr_sshfilter_profile_filefilter_entries "File filter entries." b
- name: $1
	fmgr_sshfilter_profile_filefilter_entries:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# sshfilter_profile_filefilter_entries: # t
$0
endsnippet

snippet fmgr_sshfilter_profile_shellcommands "SSH command filter." b
- name: $1
	fmgr_sshfilter_profile_shellcommands:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# sshfilter_profile_shellcommands: # t
$0
endsnippet

snippet fmgr_switchcontroller_customcommand "Configure the FortiGate switch controller to send custom commands to managed FortiSwitch devices." b
- name: $1
	fmgr_switchcontroller_customcommand:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# switchcontroller_customcommand: # t
$0
endsnippet

snippet fmgr_switchcontroller_lldpprofile "Configure FortiSwitch LLDP profiles." b
- name: $1
	fmgr_switchcontroller_lldpprofile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# switchcontroller_lldpprofile: # t
$0
endsnippet

snippet fmgr_switchcontroller_lldpprofile_customtlvs "Configuration method to edit custom TLV entries." b
- name: $1
	fmgr_switchcontroller_lldpprofile_customtlvs:
		state: ${2:present|absent}
		adom: ${3:# t}
		lldp-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# switchcontroller_lldpprofile_customtlvs: # t
$0
endsnippet

snippet fmgr_switchcontroller_lldpprofile_medlocationservice "Configuration method to edit Media Endpoint Discovery" b
- name: $1
	fmgr_switchcontroller_lldpprofile_medlocationservice:
		state: ${2:present|absent}
		adom: ${3:# t}
		lldp-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# switchcontroller_lldpprofile_medlocationservice: # t
$0
endsnippet

snippet fmgr_switchcontroller_lldpprofile_mednetworkpolicy "Configuration method to edit Media Endpoint Discovery" b
- name: $1
	fmgr_switchcontroller_lldpprofile_mednetworkpolicy:
		state: ${2:present|absent}
		adom: ${3:# t}
		lldp-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# switchcontroller_lldpprofile_mednetworkpolicy: # t
$0
endsnippet

snippet fmgr_switchcontroller_managedswitch "Configure FortiSwitch devices that are managed by this FortiGate." b
- name: $1
	fmgr_switchcontroller_managedswitch:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# switchcontroller_managedswitch: # t
$0
endsnippet

snippet fmgr_switchcontroller_managedswitch_8021xsettings "Configuration method to edit FortiSwitch 802." b
- name: $1
	fmgr_switchcontroller_managedswitch_8021xsettings:
		state: ${2:present|absent}
		device: ${3:# t}
		vdom: ${4:# t}
		managed-switch: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
$0
endsnippet

snippet fmgr_switchcontroller_managedswitch_customcommand "Configuration method to edit FortiSwitch commands to be pushed to this FortiSwitch device upon rebooting the FortiGate switch controller..." b
- name: $1
	fmgr_switchcontroller_managedswitch_customcommand:
		state: ${2:present|absent}
		adom: ${3:# t}
		managed-switch: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# switchcontroller_managedswitch_customcommand: # t
$0
endsnippet

snippet fmgr_switchcontroller_managedswitch_igmpsnooping "Configure FortiSwitch IGMP snooping global settings." b
- name: $1
	fmgr_switchcontroller_managedswitch_igmpsnooping:
		state: ${2:present|absent}
		device: ${3:# t}
		vdom: ${4:# t}
		managed-switch: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
$0
endsnippet

snippet fmgr_switchcontroller_managedswitch_ipsourceguard "IP source guard." b
- name: $1
	fmgr_switchcontroller_managedswitch_ipsourceguard:
		state: ${2:present|absent}
		adom: ${3:# t}
		managed-switch: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# switchcontroller_managedswitch_ipsourceguard: # t
$0
endsnippet

snippet fmgr_switchcontroller_managedswitch_ipsourceguard_bindingentry "IP and MAC address configuration." b
- name: $1
	fmgr_switchcontroller_managedswitch_ipsourceguard_bindingentry:
		state: ${2:present|absent}
		adom: ${3:# t}
		managed-switch: ${4:# t}
		ip-source-guard: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# switchcontroller_managedswitch_ipsourceguard_bindingentry: # t
$0
endsnippet

snippet fmgr_switchcontroller_managedswitch_mirror "Configuration method to edit FortiSwitch packet mirror." b
- name: $1
	fmgr_switchcontroller_managedswitch_mirror:
		state: ${2:present|absent}
		device: ${3:# t}
		vdom: ${4:# t}
		managed-switch: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
$0
endsnippet

snippet fmgr_switchcontroller_managedswitch_ports "Managed-switch port list." b
- name: $1
	fmgr_switchcontroller_managedswitch_ports:
		state: ${2:present|absent}
		adom: ${3:# t}
		managed-switch: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# switchcontroller_managedswitch_ports: # t
$0
endsnippet

snippet fmgr_switchcontroller_managedswitch_remotelog "Configure logging by FortiSwitch device to a remote syslog server." b
- name: $1
	fmgr_switchcontroller_managedswitch_remotelog:
		state: ${2:present|absent}
		adom: ${3:# t}
		managed-switch: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# switchcontroller_managedswitch_remotelog: # t
$0
endsnippet

snippet fmgr_switchcontroller_managedswitch_snmpcommunity "Configuration method to edit Simple Network Management Protocol" b
- name: $1
	fmgr_switchcontroller_managedswitch_snmpcommunity:
		state: ${2:present|absent}
		adom: ${3:# t}
		managed-switch: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# switchcontroller_managedswitch_snmpcommunity: # t
$0
endsnippet

snippet fmgr_switchcontroller_managedswitch_snmpcommunity_hosts "Configure IPv4 SNMP managers" b
- name: $1
	fmgr_switchcontroller_managedswitch_snmpcommunity_hosts:
		state: ${2:present|absent}
		adom: ${3:# t}
		managed-switch: ${4:# t}
		snmp-community: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# switchcontroller_managedswitch_snmpcommunity_hosts: # t
$0
endsnippet

snippet fmgr_switchcontroller_managedswitch_snmpsysinfo "Configuration method to edit Simple Network Management Protocol" b
- name: $1
	fmgr_switchcontroller_managedswitch_snmpsysinfo:
		state: ${2:present|absent}
		adom: ${3:# t}
		managed-switch: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# switchcontroller_managedswitch_snmpsysinfo: # t
$0
endsnippet

snippet fmgr_switchcontroller_managedswitch_snmptrapthreshold "Configuration method to edit Simple Network Management Protocol" b
- name: $1
	fmgr_switchcontroller_managedswitch_snmptrapthreshold:
		state: ${2:present|absent}
		adom: ${3:# t}
		managed-switch: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# switchcontroller_managedswitch_snmptrapthreshold: # t
$0
endsnippet

snippet fmgr_switchcontroller_managedswitch_snmpuser "Configuration method to edit Simple Network Management Protocol" b
- name: $1
	fmgr_switchcontroller_managedswitch_snmpuser:
		state: ${2:present|absent}
		adom: ${3:# t}
		managed-switch: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# switchcontroller_managedswitch_snmpuser: # t
$0
endsnippet

snippet fmgr_switchcontroller_managedswitch_stormcontrol "Configuration method to edit FortiSwitch storm control for measuring traffic activity using data rates to prevent traffic disruption." b
- name: $1
	fmgr_switchcontroller_managedswitch_stormcontrol:
		state: ${2:present|absent}
		device: ${3:# t}
		vdom: ${4:# t}
		managed-switch: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
$0
endsnippet

snippet fmgr_switchcontroller_managedswitch_stpsettings "Configuration method to edit Spanning Tree Protocol" b
- name: $1
	fmgr_switchcontroller_managedswitch_stpsettings:
		state: ${2:present|absent}
		device: ${3:# t}
		vdom: ${4:# t}
		managed-switch: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
$0
endsnippet

snippet fmgr_switchcontroller_managedswitch_switchlog "Configuration method to edit FortiSwitch logging settings" b
- name: $1
	fmgr_switchcontroller_managedswitch_switchlog:
		state: ${2:present|absent}
		device: ${3:# t}
		vdom: ${4:# t}
		managed-switch: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
$0
endsnippet

snippet fmgr_switchcontroller_managedswitch_switchstpsettings "Configure spanning tree protocol" b
- name: $1
	fmgr_switchcontroller_managedswitch_switchstpsettings:
		state: ${2:present|absent}
		device: ${3:# t}
		vdom: ${4:# t}
		managed-switch: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
$0
endsnippet

snippet fmgr_switchcontroller_qos_dot1pmap "Configure FortiSwitch QoS 802." b
- name: $1
	fmgr_switchcontroller_qos_dot1pmap:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# switchcontroller_qos_dot1pmap: # t
$0
endsnippet

snippet fmgr_switchcontroller_qos_ipdscpmap "Configure FortiSwitch QoS IP precedence/DSCP." b
- name: $1
	fmgr_switchcontroller_qos_ipdscpmap:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# switchcontroller_qos_ipdscpmap: # t
$0
endsnippet

snippet fmgr_switchcontroller_qos_ipdscpmap_map "Maps between IP-DSCP value to COS queue." b
- name: $1
	fmgr_switchcontroller_qos_ipdscpmap_map:
		state: ${2:present|absent}
		adom: ${3:# t}
		ip-dscp-map: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# switchcontroller_qos_ipdscpmap_map: # t
$0
endsnippet

snippet fmgr_switchcontroller_qos_qospolicy "Configure FortiSwitch QoS policy." b
- name: $1
	fmgr_switchcontroller_qos_qospolicy:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# switchcontroller_qos_qospolicy: # t
$0
endsnippet

snippet fmgr_switchcontroller_qos_queuepolicy "Configure FortiSwitch QoS egress queue policy." b
- name: $1
	fmgr_switchcontroller_qos_queuepolicy:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# switchcontroller_qos_queuepolicy: # t
$0
endsnippet

snippet fmgr_switchcontroller_qos_queuepolicy_cosqueue "COS queue configuration." b
- name: $1
	fmgr_switchcontroller_qos_queuepolicy_cosqueue:
		state: ${2:present|absent}
		adom: ${3:# t}
		queue-policy: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# switchcontroller_qos_queuepolicy_cosqueue: # t
$0
endsnippet

snippet fmgr_switchcontroller_securitypolicy_8021x "Configure 802." b
- name: $1
	fmgr_switchcontroller_securitypolicy_8021x:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# switchcontroller_securitypolicy_8021x: # t
$0
endsnippet

snippet fmgr_switchcontroller_securitypolicy_captiveportal "Names of VLANs that use captive portal authentication." b
- name: $1
	fmgr_switchcontroller_securitypolicy_captiveportal:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# switchcontroller_securitypolicy_captiveportal: # t
$0
endsnippet

snippet fmgr_sys_api_sdnconnector "Query SDN connector data." b
- name: $1
	fmgr_sys_api_sdnconnector:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# sys_api_sdnconnector: # t
$0
endsnippet

snippet fmgr_sys_generate_wsdl "Generate WSDL for specific module and objects." b
- name: $1
	fmgr_sys_generate_wsdl:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# sys_generate_wsdl: # t
$0
endsnippet

snippet fmgr_sys_login_challenge "Answer a log in challenge question, used following a login/user or login/challenge command." b
- name: $1
	fmgr_sys_login_challenge:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# sys_login_challenge: # t
$0
endsnippet

snippet fmgr_sys_login_user "Log into the device with user name and password." b
- name: $1
	fmgr_sys_login_user:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# sys_login_user: # t
$0
endsnippet

snippet fmgr_sys_logout "Log out a session." b
- name: $1
	fmgr_sys_logout:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
$0
endsnippet

snippet fmgr_sys_proxy_json "Send and receive JSON request to/from managed devices." b
- name: $1
	fmgr_sys_proxy_json:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# sys_proxy_json: # t
$0
endsnippet

snippet fmgr_sys_reboot "Restart FortiManager." b
- name: $1
	fmgr_sys_reboot:
		# enable_log: no
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# sys_reboot: # t
$0
endsnippet

snippet fmgr_system_admin_group "User group." b
- name: $1
	fmgr_system_admin_group:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_admin_group: # t
$0
endsnippet

snippet fmgr_system_admin_group_member "Group members." b
- name: $1
	fmgr_system_admin_group_member:
		state: ${2:present|absent}
		group: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_admin_group_member: # t
$0
endsnippet

snippet fmgr_system_admin_ldap "LDAP server entry configuration." b
- name: $1
	fmgr_system_admin_ldap:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_admin_ldap: # t
$0
endsnippet

snippet fmgr_system_admin_ldap_adom "Admin domain." b
- name: $1
	fmgr_system_admin_ldap_adom:
		state: ${2:present|absent}
		ldap: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_admin_ldap_adom: # t
$0
endsnippet

snippet fmgr_system_admin_profile "Admin profile." b
- name: $1
	fmgr_system_admin_profile:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_admin_profile: # t
$0
endsnippet

snippet fmgr_system_admin_profile_datamaskcustomfields "Customized datamask fields." b
- name: $1
	fmgr_system_admin_profile_datamaskcustomfields:
		state: ${2:present|absent}
		profile: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_admin_profile_datamaskcustomfields: # t
$0
endsnippet

snippet fmgr_system_admin_radius "Configure radius." b
- name: $1
	fmgr_system_admin_radius:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_admin_radius: # t
$0
endsnippet

snippet fmgr_system_admin_setting "Admin setting." b
- name: $1
	fmgr_system_admin_setting:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_admin_setting: # t
$0
endsnippet

snippet fmgr_system_admin_tacacs "TACACS+ server entry configuration." b
- name: $1
	fmgr_system_admin_tacacs:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_admin_tacacs: # t
$0
endsnippet

snippet fmgr_system_admin_user "Admin user." b
- name: $1
	fmgr_system_admin_user:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_admin_user: # t
$0
endsnippet

snippet fmgr_system_admin_user_adom "Admin domain." b
- name: $1
	fmgr_system_admin_user_adom:
		state: ${2:present|absent}
		user: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_admin_user_adom: # t
$0
endsnippet

snippet fmgr_system_admin_user_adomexclude "Excluding admin domain." b
- name: $1
	fmgr_system_admin_user_adomexclude:
		state: ${2:present|absent}
		user: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_admin_user_adomexclude: # t
$0
endsnippet

snippet fmgr_system_admin_user_appfilter "App filter." b
- name: $1
	fmgr_system_admin_user_appfilter:
		state: ${2:present|absent}
		user: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_admin_user_appfilter: # t
$0
endsnippet

snippet fmgr_system_admin_user_dashboard "Custom dashboard widgets." b
- name: $1
	fmgr_system_admin_user_dashboard:
		state: ${2:present|absent}
		user: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_admin_user_dashboard: # t
$0
endsnippet

snippet fmgr_system_admin_user_dashboardtabs "Custom dashboard." b
- name: $1
	fmgr_system_admin_user_dashboardtabs:
		state: ${2:present|absent}
		user: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_admin_user_dashboardtabs: # t
$0
endsnippet

snippet fmgr_system_admin_user_ipsfilter "IPS filter." b
- name: $1
	fmgr_system_admin_user_ipsfilter:
		state: ${2:present|absent}
		user: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_admin_user_ipsfilter: # t
$0
endsnippet

snippet fmgr_system_admin_user_metadata "Configure meta data." b
- name: $1
	fmgr_system_admin_user_metadata:
		state: ${2:present|absent}
		user: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_admin_user_metadata: # t
$0
endsnippet

snippet fmgr_system_admin_user_policypackage "Policy package access." b
- name: $1
	fmgr_system_admin_user_policypackage:
		state: ${2:present|absent}
		user: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_admin_user_policypackage: # t
$0
endsnippet

snippet fmgr_system_admin_user_restrictdevvdom "Restricted to these devices/VDOMs." b
- name: $1
	fmgr_system_admin_user_restrictdevvdom:
		state: ${2:present|absent}
		user: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_admin_user_restrictdevvdom: # t
$0
endsnippet

snippet fmgr_system_admin_user_webfilter "Web filter." b
- name: $1
	fmgr_system_admin_user_webfilter:
		state: ${2:present|absent}
		user: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_admin_user_webfilter: # t
$0
endsnippet

snippet fmgr_system_alertconsole "Alert console." b
- name: $1
	fmgr_system_alertconsole:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_alertconsole: # t
$0
endsnippet

snippet fmgr_system_alertemail "Configure alertemail." b
- name: $1
	fmgr_system_alertemail:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_alertemail: # t
$0
endsnippet

snippet fmgr_system_alertevent_alertdestination "Alert destination." b
- name: $1
	fmgr_system_alertevent_alertdestination:
		state: ${2:present|absent}
		alert-event: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_alertevent_alertdestination: # t
$0
endsnippet

snippet fmgr_system_autodelete "Automatic deletion policy for logs, reports, archived, and quarantined files." b
- name: $1
	fmgr_system_autodelete:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_autodelete: # t
$0
endsnippet

snippet fmgr_system_autodelete_dlpfilesautodeletion "Automatic deletion policy for DLP archives." b
- name: $1
	fmgr_system_autodelete_dlpfilesautodeletion:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_autodelete_dlpfilesautodeletion: # t
$0
endsnippet

snippet fmgr_system_autodelete_logautodeletion "Automatic deletion policy for device logs." b
- name: $1
	fmgr_system_autodelete_logautodeletion:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_autodelete_logautodeletion: # t
$0
endsnippet

snippet fmgr_system_autodelete_quarantinefilesautodeletion "Automatic deletion policy for quarantined files." b
- name: $1
	fmgr_system_autodelete_quarantinefilesautodeletion:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_autodelete_quarantinefilesautodeletion: # t
$0
endsnippet

snippet fmgr_system_autodelete_reportautodeletion "Automatic deletion policy for reports." b
- name: $1
	fmgr_system_autodelete_reportautodeletion:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_autodelete_reportautodeletion: # t
$0
endsnippet

snippet fmgr_system_backup_allsettings "Scheduled backup settings." b
- name: $1
	fmgr_system_backup_allsettings:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_backup_allsettings: # t
$0
endsnippet

snippet fmgr_system_certificate_ca "CA certificate." b
- name: $1
	fmgr_system_certificate_ca:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_certificate_ca: # t
$0
endsnippet

snippet fmgr_system_certificate_crl "Certificate Revocation List." b
- name: $1
	fmgr_system_certificate_crl:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_certificate_crl: # t
$0
endsnippet

snippet fmgr_system_certificate_local "Local keys and certificates." b
- name: $1
	fmgr_system_certificate_local:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_certificate_local: # t
$0
endsnippet

snippet fmgr_system_certificate_oftp "OFTP certificates and keys." b
- name: $1
	fmgr_system_certificate_oftp:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_certificate_oftp: # t
$0
endsnippet

snippet fmgr_system_certificate_remote "Remote certificate." b
- name: $1
	fmgr_system_certificate_remote:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_certificate_remote: # t
$0
endsnippet

snippet fmgr_system_certificate_ssh "SSH certificates and keys." b
- name: $1
	fmgr_system_certificate_ssh:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_certificate_ssh: # t
$0
endsnippet

snippet fmgr_system_connector "Configure connector." b
- name: $1
	fmgr_system_connector:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_connector: # t
$0
endsnippet

snippet fmgr_system_customlanguage "Configure custom languages." b
- name: $1
	fmgr_system_customlanguage:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_customlanguage: # t
$0
endsnippet

snippet fmgr_system_dhcp_server "Configure DHCP servers." b
- name: $1
	fmgr_system_dhcp_server:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_dhcp_server: # t
$0
endsnippet

snippet fmgr_system_dhcp_server_excluderange "Exclude one or more ranges of IP addresses from being assigned to clients." b
- name: $1
	fmgr_system_dhcp_server_excluderange:
		state: ${2:present|absent}
		adom: ${3:# t}
		server: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_dhcp_server_excluderange: # t
$0
endsnippet

snippet fmgr_system_dhcp_server_iprange "DHCP IP range configuration." b
- name: $1
	fmgr_system_dhcp_server_iprange:
		state: ${2:present|absent}
		adom: ${3:# t}
		server: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_dhcp_server_iprange: # t
$0
endsnippet

snippet fmgr_system_dhcp_server_options "DHCP options." b
- name: $1
	fmgr_system_dhcp_server_options:
		state: ${2:present|absent}
		adom: ${3:# t}
		server: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_dhcp_server_options: # t
$0
endsnippet

snippet fmgr_system_dhcp_server_reservedaddress "Options for the DHCP server to assign IP settings to specific MAC addresses." b
- name: $1
	fmgr_system_dhcp_server_reservedaddress:
		state: ${2:present|absent}
		adom: ${3:# t}
		server: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_dhcp_server_reservedaddress: # t
$0
endsnippet

snippet fmgr_system_dm "Configure dm." b
- name: $1
	fmgr_system_dm:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_dm: # t
$0
endsnippet

snippet fmgr_system_dns "DNS configuration." b
- name: $1
	fmgr_system_dns:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_dns: # t
$0
endsnippet

snippet fmgr_system_docker "Docker host." b
- name: $1
	fmgr_system_docker:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_docker: # t
$0
endsnippet

snippet fmgr_system_externalresource "Configure external resource." b
- name: $1
	fmgr_system_externalresource:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_externalresource: # t
$0
endsnippet

snippet fmgr_system_fips "Settings for FIPS-CC mode." b
- name: $1
	fmgr_system_fips:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_fips: # t
$0
endsnippet

snippet fmgr_system_fortiguard "Configure FortiGuard services." b
- name: $1
	fmgr_system_fortiguard:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_fortiguard: # t
$0
endsnippet

snippet fmgr_system_fortiview_autocache "FortiView auto-cache settings." b
- name: $1
	fmgr_system_fortiview_autocache:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_fortiview_autocache: # t
$0
endsnippet

snippet fmgr_system_fortiview_setting "FortiView settings." b
- name: $1
	fmgr_system_fortiview_setting:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_fortiview_setting: # t
$0
endsnippet

snippet fmgr_system_geoipcountry "no description" b
- name: $1
	fmgr_system_geoipcountry:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_geoipcountry: # t
$0
endsnippet

snippet fmgr_system_geoipoverride "Configure geographical location mapping for IP address" b
- name: $1
	fmgr_system_geoipoverride:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_geoipoverride: # t
$0
endsnippet

snippet fmgr_system_geoipoverride_ip6range "Table of IPv6 ranges assigned to country." b
- name: $1
	fmgr_system_geoipoverride_ip6range:
		state: ${2:present|absent}
		adom: ${3:# t}
		geoip-override: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_geoipoverride_ip6range: # t
$0
endsnippet

snippet fmgr_system_geoipoverride_iprange "Table of IP ranges assigned to country." b
- name: $1
	fmgr_system_geoipoverride_iprange:
		state: ${2:present|absent}
		adom: ${3:# t}
		geoip-override: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_geoipoverride_iprange: # t
$0
endsnippet

snippet fmgr_system_global "Global range attributes." b
- name: $1
	fmgr_system_global:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_global: # t
$0
endsnippet

snippet fmgr_system_guiact "System settings through GUI." b
- name: $1
	fmgr_system_guiact:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_guiact: # t
$0
endsnippet

snippet fmgr_system_ha "HA configuration." b
- name: $1
	fmgr_system_ha:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_ha: # t
$0
endsnippet

snippet fmgr_system_ha_peer "Peer." b
- name: $1
	fmgr_system_ha_peer:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_ha_peer: # t
$0
endsnippet

snippet fmgr_system_interface "Interface configuration." b
- name: $1
	fmgr_system_interface:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_interface: # t
$0
endsnippet

snippet fmgr_system_interface_ipv6 "IPv6 of interface." b
- name: $1
	fmgr_system_interface_ipv6:
		state: ${2:present|absent}
		interface: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_interface_ipv6: # t
$0
endsnippet

snippet fmgr_system_locallog_disk_filter "Filter for disk logging." b
- name: $1
	fmgr_system_locallog_disk_filter:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_locallog_disk_filter: # t
$0
endsnippet

snippet fmgr_system_locallog_disk_setting "Settings for local disk logging." b
- name: $1
	fmgr_system_locallog_disk_setting:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_locallog_disk_setting: # t
$0
endsnippet

snippet fmgr_system_locallog_fortianalyzer2_filter "Filter for FortiAnalyzer2 logging." b
- name: $1
	fmgr_system_locallog_fortianalyzer2_filter:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_locallog_fortianalyzer2_filter: # t
$0
endsnippet

snippet fmgr_system_locallog_fortianalyzer2_setting "Settings for locallog to fortianalyzer." b
- name: $1
	fmgr_system_locallog_fortianalyzer2_setting:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_locallog_fortianalyzer2_setting: # t
$0
endsnippet

snippet fmgr_system_locallog_fortianalyzer3_filter "Filter for FortiAnalyzer3 logging." b
- name: $1
	fmgr_system_locallog_fortianalyzer3_filter:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_locallog_fortianalyzer3_filter: # t
$0
endsnippet

snippet fmgr_system_locallog_fortianalyzer3_setting "Settings for locallog to fortianalyzer." b
- name: $1
	fmgr_system_locallog_fortianalyzer3_setting:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_locallog_fortianalyzer3_setting: # t
$0
endsnippet

snippet fmgr_system_locallog_fortianalyzer_filter "Filter for FortiAnalyzer logging." b
- name: $1
	fmgr_system_locallog_fortianalyzer_filter:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_locallog_fortianalyzer_filter: # t
$0
endsnippet

snippet fmgr_system_locallog_fortianalyzer_setting "Settings for locallog to fortianalyzer." b
- name: $1
	fmgr_system_locallog_fortianalyzer_setting:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_locallog_fortianalyzer_setting: # t
$0
endsnippet

snippet fmgr_system_locallog_memory_filter "Filter for memory logging." b
- name: $1
	fmgr_system_locallog_memory_filter:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_locallog_memory_filter: # t
$0
endsnippet

snippet fmgr_system_locallog_memory_setting "Settings for memory buffer." b
- name: $1
	fmgr_system_locallog_memory_setting:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_locallog_memory_setting: # t
$0
endsnippet

snippet fmgr_system_locallog_setting "Settings for locallog logging." b
- name: $1
	fmgr_system_locallog_setting:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_locallog_setting: # t
$0
endsnippet

snippet fmgr_system_locallog_syslogd2_filter "Filter for syslog logging." b
- name: $1
	fmgr_system_locallog_syslogd2_filter:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_locallog_syslogd2_filter: # t
$0
endsnippet

snippet fmgr_system_locallog_syslogd2_setting "Settings for remote syslog server." b
- name: $1
	fmgr_system_locallog_syslogd2_setting:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_locallog_syslogd2_setting: # t
$0
endsnippet

snippet fmgr_system_locallog_syslogd3_filter "Filter for syslog logging." b
- name: $1
	fmgr_system_locallog_syslogd3_filter:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_locallog_syslogd3_filter: # t
$0
endsnippet

snippet fmgr_system_locallog_syslogd3_setting "Settings for remote syslog server." b
- name: $1
	fmgr_system_locallog_syslogd3_setting:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_locallog_syslogd3_setting: # t
$0
endsnippet

snippet fmgr_system_locallog_syslogd_filter "Filter for syslog logging." b
- name: $1
	fmgr_system_locallog_syslogd_filter:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_locallog_syslogd_filter: # t
$0
endsnippet

snippet fmgr_system_locallog_syslogd_setting "Settings for remote syslog server." b
- name: $1
	fmgr_system_locallog_syslogd_setting:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_locallog_syslogd_setting: # t
$0
endsnippet

snippet fmgr_system_log_alert "Log based alert settings." b
- name: $1
	fmgr_system_log_alert:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_log_alert: # t
$0
endsnippet

snippet fmgr_system_log_devicedisable "Disable client device logging." b
- name: $1
	fmgr_system_log_devicedisable:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_log_devicedisable: # t
$0
endsnippet

snippet fmgr_system_log_interfacestats "Interface statistics settings." b
- name: $1
	fmgr_system_log_interfacestats:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_log_interfacestats: # t
$0
endsnippet

snippet fmgr_system_log_ioc "IoC settings." b
- name: $1
	fmgr_system_log_ioc:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_log_ioc: # t
$0
endsnippet

snippet fmgr_system_log_maildomain "FortiMail domain setting." b
- name: $1
	fmgr_system_log_maildomain:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_log_maildomain: # t
$0
endsnippet

snippet fmgr_system_log_ratelimit "Logging rate limit." b
- name: $1
	fmgr_system_log_ratelimit:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_log_ratelimit: # t
$0
endsnippet

snippet fmgr_system_log_ratelimit_device "Device log rate limit." b
- name: $1
	fmgr_system_log_ratelimit_device:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_log_ratelimit_device: # t
$0
endsnippet

snippet fmgr_system_log_settings "Log settings." b
- name: $1
	fmgr_system_log_settings:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_log_settings: # t
$0
endsnippet

snippet fmgr_system_log_settings_rollinganalyzer "Log rolling policy for Network Analyzer logs." b
- name: $1
	fmgr_system_log_settings_rollinganalyzer:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_log_settings_rollinganalyzer: # t
$0
endsnippet

snippet fmgr_system_log_settings_rollinglocal "Log rolling policy for local logs." b
- name: $1
	fmgr_system_log_settings_rollinglocal:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_log_settings_rollinglocal: # t
$0
endsnippet

snippet fmgr_system_log_settings_rollingregular "Log rolling policy for device logs." b
- name: $1
	fmgr_system_log_settings_rollingregular:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_log_settings_rollingregular: # t
$0
endsnippet

snippet fmgr_system_logfetch_clientprofile "Log-fetch client profile settings." b
- name: $1
	fmgr_system_logfetch_clientprofile:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_logfetch_clientprofile: # t
$0
endsnippet

snippet fmgr_system_logfetch_clientprofile_devicefilter "List of device filter." b
- name: $1
	fmgr_system_logfetch_clientprofile_devicefilter:
		state: ${2:present|absent}
		client-profile: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_logfetch_clientprofile_devicefilter: # t
$0
endsnippet

snippet fmgr_system_logfetch_clientprofile_logfilter "Log content filters." b
- name: $1
	fmgr_system_logfetch_clientprofile_logfilter:
		state: ${2:present|absent}
		client-profile: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_logfetch_clientprofile_logfilter: # t
$0
endsnippet

snippet fmgr_system_logfetch_serversettings "Log-fetch server settings." b
- name: $1
	fmgr_system_logfetch_serversettings:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_logfetch_serversettings: # t
$0
endsnippet

snippet fmgr_system_mail "Alert emails." b
- name: $1
	fmgr_system_mail:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_mail: # t
$0
endsnippet

snippet fmgr_system_mcpolicydisabledadoms "Multicast policy disabled adoms." b
- name: $1
	fmgr_system_mcpolicydisabledadoms:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_mcpolicydisabledadoms: # t
$0
endsnippet

snippet fmgr_system_meta "no description" b
- name: $1
	fmgr_system_meta:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_meta: # t
$0
endsnippet

snippet fmgr_system_meta_sysmetafields "no description" b
- name: $1
	fmgr_system_meta_sysmetafields:
		state: ${2:present|absent}
		adom: ${3:# t}
		meta: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_meta_sysmetafields: # t
$0
endsnippet

snippet fmgr_system_metadata_admins "Configure admins." b
- name: $1
	fmgr_system_metadata_admins:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_metadata_admins: # t
$0
endsnippet

snippet fmgr_system_ntp "NTP settings." b
- name: $1
	fmgr_system_ntp:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_ntp: # t
$0
endsnippet

snippet fmgr_system_ntp_ntpserver "NTP server." b
- name: $1
	fmgr_system_ntp_ntpserver:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_ntp_ntpserver: # t
$0
endsnippet

snippet fmgr_system_objecttagging "Configure object tagging." b
- name: $1
	fmgr_system_objecttagging:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_objecttagging: # t
$0
endsnippet

snippet fmgr_system_passwordpolicy "Password policy." b
- name: $1
	fmgr_system_passwordpolicy:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_passwordpolicy: # t
$0
endsnippet

snippet fmgr_system_replacemsggroup "Configure replacement message groups." b
- name: $1
	fmgr_system_replacemsggroup:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_replacemsggroup: # t
$0
endsnippet

snippet fmgr_system_replacemsggroup_admin "Replacement message table entries." b
- name: $1
	fmgr_system_replacemsggroup_admin:
		state: ${2:present|absent}
		adom: ${3:# t}
		replacemsg-group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_replacemsggroup_admin: # t
$0
endsnippet

snippet fmgr_system_replacemsggroup_alertmail "Replacement message table entries." b
- name: $1
	fmgr_system_replacemsggroup_alertmail:
		state: ${2:present|absent}
		adom: ${3:# t}
		replacemsg-group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_replacemsggroup_alertmail: # t
$0
endsnippet

snippet fmgr_system_replacemsggroup_auth "Replacement message table entries." b
- name: $1
	fmgr_system_replacemsggroup_auth:
		state: ${2:present|absent}
		adom: ${3:# t}
		replacemsg-group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_replacemsggroup_auth: # t
$0
endsnippet

snippet fmgr_system_replacemsggroup_automation "Replacement message table entries." b
- name: $1
	fmgr_system_replacemsggroup_automation:
		state: ${2:present|absent}
		adom: ${3:# t}
		replacemsg-group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_replacemsggroup_automation: # t
$0
endsnippet

snippet fmgr_system_replacemsggroup_custommessage "Replacement message table entries." b
- name: $1
	fmgr_system_replacemsggroup_custommessage:
		state: ${2:present|absent}
		adom: ${3:# t}
		replacemsg-group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_replacemsggroup_custommessage: # t
$0
endsnippet

snippet fmgr_system_replacemsggroup_devicedetectionportal "Replacement message table entries." b
- name: $1
	fmgr_system_replacemsggroup_devicedetectionportal:
		state: ${2:present|absent}
		adom: ${3:# t}
		replacemsg-group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_replacemsggroup_devicedetectionportal: # t
$0
endsnippet

snippet fmgr_system_replacemsggroup_ec "Replacement message table entries." b
- name: $1
	fmgr_system_replacemsggroup_ec:
		state: ${2:present|absent}
		adom: ${3:# t}
		replacemsg-group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_replacemsggroup_ec: # t
$0
endsnippet

snippet fmgr_system_replacemsggroup_fortiguardwf "Replacement message table entries." b
- name: $1
	fmgr_system_replacemsggroup_fortiguardwf:
		state: ${2:present|absent}
		adom: ${3:# t}
		replacemsg-group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_replacemsggroup_fortiguardwf: # t
$0
endsnippet

snippet fmgr_system_replacemsggroup_ftp "Replacement message table entries." b
- name: $1
	fmgr_system_replacemsggroup_ftp:
		state: ${2:present|absent}
		adom: ${3:# t}
		replacemsg-group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_replacemsggroup_ftp: # t
$0
endsnippet

snippet fmgr_system_replacemsggroup_http "Replacement message table entries." b
- name: $1
	fmgr_system_replacemsggroup_http:
		state: ${2:present|absent}
		adom: ${3:# t}
		replacemsg-group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_replacemsggroup_http: # t
$0
endsnippet

snippet fmgr_system_replacemsggroup_icap "Replacement message table entries." b
- name: $1
	fmgr_system_replacemsggroup_icap:
		state: ${2:present|absent}
		adom: ${3:# t}
		replacemsg-group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_replacemsggroup_icap: # t
$0
endsnippet

snippet fmgr_system_replacemsggroup_mail "Replacement message table entries." b
- name: $1
	fmgr_system_replacemsggroup_mail:
		state: ${2:present|absent}
		adom: ${3:# t}
		replacemsg-group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_replacemsggroup_mail: # t
$0
endsnippet

snippet fmgr_system_replacemsggroup_mm1 "Replacement message table entries." b
- name: $1
	fmgr_system_replacemsggroup_mm1:
		state: ${2:present|absent}
		adom: ${3:# t}
		replacemsg-group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_replacemsggroup_mm1: # t
$0
endsnippet

snippet fmgr_system_replacemsggroup_mm3 "Replacement message table entries." b
- name: $1
	fmgr_system_replacemsggroup_mm3:
		state: ${2:present|absent}
		adom: ${3:# t}
		replacemsg-group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_replacemsggroup_mm3: # t
$0
endsnippet

snippet fmgr_system_replacemsggroup_mm4 "Replacement message table entries." b
- name: $1
	fmgr_system_replacemsggroup_mm4:
		state: ${2:present|absent}
		adom: ${3:# t}
		replacemsg-group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_replacemsggroup_mm4: # t
$0
endsnippet

snippet fmgr_system_replacemsggroup_mm7 "Replacement message table entries." b
- name: $1
	fmgr_system_replacemsggroup_mm7:
		state: ${2:present|absent}
		adom: ${3:# t}
		replacemsg-group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_replacemsggroup_mm7: # t
$0
endsnippet

snippet fmgr_system_replacemsggroup_mms "Replacement message table entries." b
- name: $1
	fmgr_system_replacemsggroup_mms:
		state: ${2:present|absent}
		adom: ${3:# t}
		replacemsg-group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_replacemsggroup_mms: # t
$0
endsnippet

snippet fmgr_system_replacemsggroup_nacquar "Replacement message table entries." b
- name: $1
	fmgr_system_replacemsggroup_nacquar:
		state: ${2:present|absent}
		adom: ${3:# t}
		replacemsg-group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_replacemsggroup_nacquar: # t
$0
endsnippet

snippet fmgr_system_replacemsggroup_nntp "Replacement message table entries." b
- name: $1
	fmgr_system_replacemsggroup_nntp:
		state: ${2:present|absent}
		adom: ${3:# t}
		replacemsg-group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_replacemsggroup_nntp: # t
$0
endsnippet

snippet fmgr_system_replacemsggroup_spam "Replacement message table entries." b
- name: $1
	fmgr_system_replacemsggroup_spam:
		state: ${2:present|absent}
		adom: ${3:# t}
		replacemsg-group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_replacemsggroup_spam: # t
$0
endsnippet

snippet fmgr_system_replacemsggroup_sslvpn "Replacement message table entries." b
- name: $1
	fmgr_system_replacemsggroup_sslvpn:
		state: ${2:present|absent}
		adom: ${3:# t}
		replacemsg-group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_replacemsggroup_sslvpn: # t
$0
endsnippet

snippet fmgr_system_replacemsggroup_trafficquota "Replacement message table entries." b
- name: $1
	fmgr_system_replacemsggroup_trafficquota:
		state: ${2:present|absent}
		adom: ${3:# t}
		replacemsg-group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_replacemsggroup_trafficquota: # t
$0
endsnippet

snippet fmgr_system_replacemsggroup_utm "Replacement message table entries." b
- name: $1
	fmgr_system_replacemsggroup_utm:
		state: ${2:present|absent}
		adom: ${3:# t}
		replacemsg-group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_replacemsggroup_utm: # t
$0
endsnippet

snippet fmgr_system_replacemsggroup_webproxy "Replacement message table entries." b
- name: $1
	fmgr_system_replacemsggroup_webproxy:
		state: ${2:present|absent}
		adom: ${3:# t}
		replacemsg-group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_replacemsggroup_webproxy: # t
$0
endsnippet

snippet fmgr_system_replacemsgimage "Configure replacement message images." b
- name: $1
	fmgr_system_replacemsgimage:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_replacemsgimage: # t
$0
endsnippet

snippet fmgr_system_report_autocache "Report auto-cache settings." b
- name: $1
	fmgr_system_report_autocache:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_report_autocache: # t
$0
endsnippet

snippet fmgr_system_report_estbrowsetime "Report estimated browse time settings" b
- name: $1
	fmgr_system_report_estbrowsetime:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_report_estbrowsetime: # t
$0
endsnippet

snippet fmgr_system_report_group "Report group." b
- name: $1
	fmgr_system_report_group:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_report_group: # t
$0
endsnippet

snippet fmgr_system_report_group_chartalternative "Chart alternatives." b
- name: $1
	fmgr_system_report_group_chartalternative:
		state: ${2:present|absent}
		group: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_report_group_chartalternative: # t
$0
endsnippet

snippet fmgr_system_report_group_groupby "Group-by variables." b
- name: $1
	fmgr_system_report_group_groupby:
		state: ${2:present|absent}
		group: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_report_group_groupby: # t
$0
endsnippet

snippet fmgr_system_report_setting "Report settings." b
- name: $1
	fmgr_system_report_setting:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_report_setting: # t
$0
endsnippet

snippet fmgr_system_route "Routing table configuration." b
- name: $1
	fmgr_system_route:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_route: # t
$0
endsnippet

snippet fmgr_system_route6 "Routing table configuration." b
- name: $1
	fmgr_system_route6:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_route6: # t
$0
endsnippet

snippet fmgr_system_saml "Global settings for SAML authentication." b
- name: $1
	fmgr_system_saml:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_saml: # t
$0
endsnippet

snippet fmgr_system_saml_fabricidp "Authorized identity providers." b
- name: $1
	fmgr_system_saml_fabricidp:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_saml_fabricidp: # t
$0
endsnippet

snippet fmgr_system_sdnconnector "Configure connection to SDN Connector." b
- name: $1
	fmgr_system_sdnconnector:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_sdnconnector: # t
$0
endsnippet

snippet fmgr_system_sdnconnector_externalip "Configure GCP external IP." b
- name: $1
	fmgr_system_sdnconnector_externalip:
		state: ${2:present|absent}
		adom: ${3:# t}
		sdn-connector: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_sdnconnector_externalip: # t
$0
endsnippet

snippet fmgr_system_sdnconnector_nic "Configure Azure network interface." b
- name: $1
	fmgr_system_sdnconnector_nic:
		state: ${2:present|absent}
		adom: ${3:# t}
		sdn-connector: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_sdnconnector_nic: # t
$0
endsnippet

snippet fmgr_system_sdnconnector_nic_ip "Configure IP configuration." b
- name: $1
	fmgr_system_sdnconnector_nic_ip:
		state: ${2:present|absent}
		adom: ${3:# t}
		sdn-connector: ${4:# t}
		nic: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_sdnconnector_nic_ip: # t
$0
endsnippet

snippet fmgr_system_sdnconnector_route "Configure GCP route." b
- name: $1
	fmgr_system_sdnconnector_route:
		state: ${2:present|absent}
		adom: ${3:# t}
		sdn-connector: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_sdnconnector_route: # t
$0
endsnippet

snippet fmgr_system_sdnconnector_routetable "Configure Azure route table." b
- name: $1
	fmgr_system_sdnconnector_routetable:
		state: ${2:present|absent}
		adom: ${3:# t}
		sdn-connector: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_sdnconnector_routetable: # t
$0
endsnippet

snippet fmgr_system_sdnconnector_routetable_route "Configure Azure route." b
- name: $1
	fmgr_system_sdnconnector_routetable_route:
		state: ${2:present|absent}
		adom: ${3:# t}
		sdn-connector: ${4:# t}
		route-table: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_sdnconnector_routetable_route: # t
$0
endsnippet

snippet fmgr_system_smsserver "Configure SMS server for sending SMS messages to support user authentication." b
- name: $1
	fmgr_system_smsserver:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_smsserver: # t
$0
endsnippet

snippet fmgr_system_sniffer "Interface sniffer." b
- name: $1
	fmgr_system_sniffer:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_sniffer: # t
$0
endsnippet

snippet fmgr_system_snmp_community "SNMP community configuration." b
- name: $1
	fmgr_system_snmp_community:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_snmp_community: # t
$0
endsnippet

snippet fmgr_system_snmp_community_hosts "Allow hosts configuration." b
- name: $1
	fmgr_system_snmp_community_hosts:
		state: ${2:present|absent}
		community: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_snmp_community_hosts: # t
$0
endsnippet

snippet fmgr_system_snmp_community_hosts6 "Allow hosts configuration for IPv6." b
- name: $1
	fmgr_system_snmp_community_hosts6:
		state: ${2:present|absent}
		community: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_snmp_community_hosts6: # t
$0
endsnippet

snippet fmgr_system_snmp_sysinfo "SNMP configuration." b
- name: $1
	fmgr_system_snmp_sysinfo:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_snmp_sysinfo: # t
$0
endsnippet

snippet fmgr_system_snmp_user "SNMP user configuration." b
- name: $1
	fmgr_system_snmp_user:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_snmp_user: # t
$0
endsnippet

snippet fmgr_system_socfabric "SOC Fabric." b
- name: $1
	fmgr_system_socfabric:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_socfabric: # t
$0
endsnippet

snippet fmgr_system_sql "SQL settings." b
- name: $1
	fmgr_system_sql:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_sql: # t
$0
endsnippet

snippet fmgr_system_sql_customindex "List of SQL index fields." b
- name: $1
	fmgr_system_sql_customindex:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_sql_customindex: # t
$0
endsnippet

snippet fmgr_system_sql_customskipidx "List of aditional SQL skip index fields." b
- name: $1
	fmgr_system_sql_customskipidx:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_sql_customskipidx: # t
$0
endsnippet

snippet fmgr_system_sql_tsindexfield "List of SQL text search index fields." b
- name: $1
	fmgr_system_sql_tsindexfield:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_sql_tsindexfield: # t
$0
endsnippet

snippet fmgr_system_syslog "Syslog servers." b
- name: $1
	fmgr_system_syslog:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_syslog: # t
$0
endsnippet

snippet fmgr_system_virtualwirepair "Configure virtual wire pairs." b
- name: $1
	fmgr_system_virtualwirepair:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_virtualwirepair: # t
$0
endsnippet

snippet fmgr_system_workflow_approvalmatrix "workflow approval matrix." b
- name: $1
	fmgr_system_workflow_approvalmatrix:
		state: ${2:present|absent}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_workflow_approvalmatrix: # t
$0
endsnippet

snippet fmgr_system_workflow_approvalmatrix_approver "Approver." b
- name: $1
	fmgr_system_workflow_approvalmatrix_approver:
		state: ${2:present|absent}
		approval-matrix: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# system_workflow_approvalmatrix_approver: # t
$0
endsnippet

snippet fmgr_template "no description" b
- name: $1
	fmgr_template:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# template: # t
$0
endsnippet

snippet fmgr_templategroup "no description" b
- name: $1
	fmgr_templategroup:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# templategroup: # t
$0
endsnippet

snippet fmgr_user_adgrp "Configure FSSO groups." b
- name: $1
	fmgr_user_adgrp:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_adgrp: # t
$0
endsnippet

snippet fmgr_user_clearpass "no description" b
- name: $1
	fmgr_user_clearpass:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_clearpass: # t
$0
endsnippet

snippet fmgr_user_device "Configure devices." b
- name: $1
	fmgr_user_device:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_device: # t
$0
endsnippet

snippet fmgr_user_device_dynamicmapping "no description" b
- name: $1
	fmgr_user_device_dynamicmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		device: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_device_dynamicmapping: # t
$0
endsnippet

snippet fmgr_user_device_tagging "Config object tagging." b
- name: $1
	fmgr_user_device_tagging:
		state: ${2:present|absent}
		adom: ${3:# t}
		device: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_device_tagging: # t
$0
endsnippet

snippet fmgr_user_devicecategory "Configure device categories." b
- name: $1
	fmgr_user_devicecategory:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_devicecategory: # t
$0
endsnippet

snippet fmgr_user_devicegroup "Configure device groups." b
- name: $1
	fmgr_user_devicegroup:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_devicegroup: # t
$0
endsnippet

snippet fmgr_user_devicegroup_dynamicmapping "no description" b
- name: $1
	fmgr_user_devicegroup_dynamicmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		device-group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_devicegroup_dynamicmapping: # t
$0
endsnippet

snippet fmgr_user_devicegroup_tagging "Config object tagging." b
- name: $1
	fmgr_user_devicegroup_tagging:
		state: ${2:present|absent}
		adom: ${3:# t}
		device-group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_devicegroup_tagging: # t
$0
endsnippet

snippet fmgr_user_domaincontroller "Configure domain controller entries." b
- name: $1
	fmgr_user_domaincontroller:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_domaincontroller: # t
$0
endsnippet

snippet fmgr_user_domaincontroller_extraserver "extra servers." b
- name: $1
	fmgr_user_domaincontroller_extraserver:
		state: ${2:present|absent}
		adom: ${3:# t}
		domain-controller: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_domaincontroller_extraserver: # t
$0
endsnippet

snippet fmgr_user_exchange "Configure MS Exchange server entries." b
- name: $1
	fmgr_user_exchange:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_exchange: # t
$0
endsnippet

snippet fmgr_user_fortitoken "Configure FortiToken." b
- name: $1
	fmgr_user_fortitoken:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_fortitoken: # t
$0
endsnippet

snippet fmgr_user_fsso "Configure Fortinet Single Sign On" b
- name: $1
	fmgr_user_fsso:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_fsso: # t
$0
endsnippet

snippet fmgr_user_fsso_dynamicmapping "Configure Fortinet Single Sign On" b
- name: $1
	fmgr_user_fsso_dynamicmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		fsso: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_fsso_dynamicmapping: # t
$0
endsnippet

snippet fmgr_user_fssopolling "Configure FSSO active directory servers for polling mode." b
- name: $1
	fmgr_user_fssopolling:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_fssopolling: # t
$0
endsnippet

snippet fmgr_user_fssopolling_adgrp "LDAP Group Info." b
- name: $1
	fmgr_user_fssopolling_adgrp:
		state: ${2:present|absent}
		adom: ${3:# t}
		fsso-polling: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_fssopolling_adgrp: # t
$0
endsnippet

snippet fmgr_user_group "Configure user groups." b
- name: $1
	fmgr_user_group:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_group: # t
$0
endsnippet

snippet fmgr_user_group_guest "Guest User." b
- name: $1
	fmgr_user_group_guest:
		state: ${2:present|absent}
		adom: ${3:# t}
		group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_group_guest: # t
$0
endsnippet

snippet fmgr_user_group_match "Group matches." b
- name: $1
	fmgr_user_group_match:
		state: ${2:present|absent}
		adom: ${3:# t}
		group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_group_match: # t
$0
endsnippet

snippet fmgr_user_krbkeytab "Configure Kerberos keytab entries." b
- name: $1
	fmgr_user_krbkeytab:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_krbkeytab: # t
$0
endsnippet

snippet fmgr_user_ldap "Configure LDAP server entries." b
- name: $1
	fmgr_user_ldap:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_ldap: # t
$0
endsnippet

snippet fmgr_user_ldap_dynamicmapping "Configure LDAP server entries." b
- name: $1
	fmgr_user_ldap_dynamicmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		ldap: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_ldap_dynamicmapping: # t
$0
endsnippet

snippet fmgr_user_local "Configure local users." b
- name: $1
	fmgr_user_local:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_local: # t
$0
endsnippet

snippet fmgr_user_nsx "no description" b
- name: $1
	fmgr_user_nsx:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_nsx: # t
$0
endsnippet

snippet fmgr_user_passwordpolicy "Configure user password policy." b
- name: $1
	fmgr_user_passwordpolicy:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_passwordpolicy: # t
$0
endsnippet

snippet fmgr_user_peer "Configure peer users." b
- name: $1
	fmgr_user_peer:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_peer: # t
$0
endsnippet

snippet fmgr_user_peergrp "Configure peer groups." b
- name: $1
	fmgr_user_peergrp:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_peergrp: # t
$0
endsnippet

snippet fmgr_user_pop3 "POP3 server entry configuration." b
- name: $1
	fmgr_user_pop3:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_pop3: # t
$0
endsnippet

snippet fmgr_user_pxgrid "no description" b
- name: $1
	fmgr_user_pxgrid:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_pxgrid: # t
$0
endsnippet

snippet fmgr_user_radius "Configure RADIUS server entries." b
- name: $1
	fmgr_user_radius:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_radius: # t
$0
endsnippet

snippet fmgr_user_radius_accountingserver "Additional accounting servers." b
- name: $1
	fmgr_user_radius_accountingserver:
		state: ${2:present|absent}
		adom: ${3:# t}
		radius: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_radius_accountingserver: # t
$0
endsnippet

snippet fmgr_user_radius_dynamicmapping "Configure RADIUS server entries." b
- name: $1
	fmgr_user_radius_dynamicmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		radius: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_radius_dynamicmapping: # t
$0
endsnippet

snippet fmgr_user_radius_dynamicmapping_accountingserver "Additional accounting servers." b
- name: $1
	fmgr_user_radius_dynamicmapping_accountingserver:
		state: ${2:present|absent}
		adom: ${3:# t}
		radius: ${4:# t}
		dynamic_mapping: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_radius_dynamicmapping_accountingserver: # t
$0
endsnippet

snippet fmgr_user_saml "SAML server entry configuration." b
- name: $1
	fmgr_user_saml:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_saml: # t
$0
endsnippet

snippet fmgr_user_securityexemptlist "Configure security exemption list." b
- name: $1
	fmgr_user_securityexemptlist:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_securityexemptlist: # t
$0
endsnippet

snippet fmgr_user_securityexemptlist_rule "Configure rules for exempting users from captive portal authentication." b
- name: $1
	fmgr_user_securityexemptlist_rule:
		state: ${2:present|absent}
		adom: ${3:# t}
		security-exempt-list: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_securityexemptlist_rule: # t
$0
endsnippet

snippet fmgr_user_tacacs "Configure TACACS+ server entries." b
- name: $1
	fmgr_user_tacacs:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_tacacs: # t
$0
endsnippet

snippet fmgr_user_tacacs_dynamicmapping "Configure TACACS+ server entries." b
- name: $1
	fmgr_user_tacacs_dynamicmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		tacacs+: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_tacacs_dynamicmapping: # t
$0
endsnippet

snippet fmgr_user_vcenter "no description" b
- name: $1
	fmgr_user_vcenter:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_vcenter: # t
$0
endsnippet

snippet fmgr_user_vcenter_rule "no description" b
- name: $1
	fmgr_user_vcenter_rule:
		state: ${2:present|absent}
		adom: ${3:# t}
		vcenter: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# user_vcenter_rule: # t
$0
endsnippet

snippet fmgr_utmprofile "Configure UTM" b
- name: $1
	fmgr_utmprofile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# utmprofile: # t
$0
endsnippet

snippet fmgr_vap "Configure Virtual Access Points" b
- name: $1
	fmgr_vap:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# vap: # t
$0
endsnippet

snippet fmgr_vap_dynamicmapping "Configure Virtual Access Points" b
- name: $1
	fmgr_vap_dynamicmapping:
		state: ${2:present|absent}
		adom: ${3:# t}
		vap: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# vap_dynamicmapping: # t
$0
endsnippet

snippet fmgr_vap_macfilterlist "Create a list of MAC addresses for MAC address filtering." b
- name: $1
	fmgr_vap_macfilterlist:
		state: ${2:present|absent}
		adom: ${3:# t}
		vap: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# vap_macfilterlist: # t
$0
endsnippet

snippet fmgr_vap_mpskkey "Pre-shared keys that can be used to connect to this virtual access point." b
- name: $1
	fmgr_vap_mpskkey:
		state: ${2:present|absent}
		adom: ${3:# t}
		vap: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# vap_mpskkey: # t
$0
endsnippet

snippet fmgr_vap_portalmessageoverrides "Individual message overrides." b
- name: $1
	fmgr_vap_portalmessageoverrides:
		state: ${2:present|absent}
		adom: ${3:# t}
		vap: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# vap_portalmessageoverrides: # t
$0
endsnippet

snippet fmgr_vap_vlanpool "VLAN pool." b
- name: $1
	fmgr_vap_vlanpool:
		state: ${2:present|absent}
		adom: ${3:# t}
		vap: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# vap_vlanpool: # t
$0
endsnippet

snippet fmgr_vapgroup "Configure virtual Access Point" b
- name: $1
	fmgr_vapgroup:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# vapgroup: # t
$0
endsnippet

snippet fmgr_videofilter_profile "Configure VideoFilter profile." b
- name: $1
	fmgr_videofilter_profile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# videofilter_profile: # t
$0
endsnippet

snippet fmgr_videofilter_profile_fortiguardcategory "Configure FortiGuard categories." b
- name: $1
	fmgr_videofilter_profile_fortiguardcategory:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# videofilter_profile_fortiguardcategory: # t
$0
endsnippet

snippet fmgr_videofilter_profile_fortiguardcategory_filters "Configure VideoFilter FortiGuard category." b
- name: $1
	fmgr_videofilter_profile_fortiguardcategory_filters:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# videofilter_profile_fortiguardcategory_filters: # t
$0
endsnippet

snippet fmgr_videofilter_youtubechannelfilter "Configure YouTube channel filter." b
- name: $1
	fmgr_videofilter_youtubechannelfilter:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# videofilter_youtubechannelfilter: # t
$0
endsnippet

snippet fmgr_videofilter_youtubechannelfilter_entries "YouTube filter entries." b
- name: $1
	fmgr_videofilter_youtubechannelfilter_entries:
		state: ${2:present|absent}
		adom: ${3:# t}
		youtube-channel-filter: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# videofilter_youtubechannelfilter_entries: # t
$0
endsnippet

snippet fmgr_voip_profile "Configure VoIP profiles." b
- name: $1
	fmgr_voip_profile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# voip_profile: # t
$0
endsnippet

snippet fmgr_voip_profile_sccp "SCCP." b
- name: $1
	fmgr_voip_profile_sccp:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# voip_profile_sccp: # t
$0
endsnippet

snippet fmgr_voip_profile_sip "SIP." b
- name: $1
	fmgr_voip_profile_sip:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# voip_profile_sip: # t
$0
endsnippet

snippet fmgr_vpn_certificate_ca "CA certificate." b
- name: $1
	fmgr_vpn_certificate_ca:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# vpn_certificate_ca: # t
$0
endsnippet

snippet fmgr_vpn_certificate_ocspserver "OCSP server configuration." b
- name: $1
	fmgr_vpn_certificate_ocspserver:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# vpn_certificate_ocspserver: # t
$0
endsnippet

snippet fmgr_vpn_certificate_remote "Remote certificate as a PEM file." b
- name: $1
	fmgr_vpn_certificate_remote:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# vpn_certificate_remote: # t
$0
endsnippet

snippet fmgr_vpn_ssl_settings "Configure SSL VPN." b
- name: $1
	fmgr_vpn_ssl_settings:
		state: ${2:present|absent}
		device: ${3:# t}
		vdom: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# vpn_ssl_settings: # t
$0
endsnippet

snippet fmgr_vpn_ssl_settings_authenticationrule "Authentication rule for SSL VPN." b
- name: $1
	fmgr_vpn_ssl_settings_authenticationrule:
		state: ${2:present|absent}
		device: ${3:# t}
		vdom: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# vpn_ssl_settings_authenticationrule: # t
$0
endsnippet

snippet fmgr_vpnmgr_node "VPN node for VPN Manager." b
- name: $1
	fmgr_vpnmgr_node:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# vpnmgr_node: # t
$0
endsnippet

snippet fmgr_vpnmgr_node_iprange "no description" b
- name: $1
	fmgr_vpnmgr_node_iprange:
		state: ${2:present|absent}
		adom: ${3:# t}
		node: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# vpnmgr_node_iprange: # t
$0
endsnippet

snippet fmgr_vpnmgr_node_ipv4excluderange "no description" b
- name: $1
	fmgr_vpnmgr_node_ipv4excluderange:
		state: ${2:present|absent}
		adom: ${3:# t}
		node: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# vpnmgr_node_ipv4excluderange: # t
$0
endsnippet

snippet fmgr_vpnmgr_node_protectedsubnet "no description" b
- name: $1
	fmgr_vpnmgr_node_protectedsubnet:
		state: ${2:present|absent}
		adom: ${3:# t}
		node: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# vpnmgr_node_protectedsubnet: # t
$0
endsnippet

snippet fmgr_vpnmgr_node_summaryaddr "no description" b
- name: $1
	fmgr_vpnmgr_node_summaryaddr:
		state: ${2:present|absent}
		adom: ${3:# t}
		node: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# vpnmgr_node_summaryaddr: # t
$0
endsnippet

snippet fmgr_vpnmgr_vpntable "no description" b
- name: $1
	fmgr_vpnmgr_vpntable:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# vpnmgr_vpntable: # t
$0
endsnippet

snippet fmgr_vpnsslweb_hostchecksoftware "SSL-VPN host check software." b
- name: $1
	fmgr_vpnsslweb_hostchecksoftware:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# vpnsslweb_hostchecksoftware: # t
$0
endsnippet

snippet fmgr_vpnsslweb_hostchecksoftware_checkitemlist "Check item list." b
- name: $1
	fmgr_vpnsslweb_hostchecksoftware_checkitemlist:
		state: ${2:present|absent}
		adom: ${3:# t}
		host-check-software: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# vpnsslweb_hostchecksoftware_checkitemlist: # t
$0
endsnippet

snippet fmgr_vpnsslweb_portal "Portal." b
- name: $1
	fmgr_vpnsslweb_portal:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# vpnsslweb_portal: # t
$0
endsnippet

snippet fmgr_vpnsslweb_portal_bookmarkgroup "Portal bookmark group." b
- name: $1
	fmgr_vpnsslweb_portal_bookmarkgroup:
		state: ${2:present|absent}
		adom: ${3:# t}
		portal: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# vpnsslweb_portal_bookmarkgroup: # t
$0
endsnippet

snippet fmgr_vpnsslweb_portal_bookmarkgroup_bookmarks "Bookmark table." b
- name: $1
	fmgr_vpnsslweb_portal_bookmarkgroup_bookmarks:
		state: ${2:present|absent}
		adom: ${3:# t}
		portal: ${4:# t}
		bookmark-group: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# vpnsslweb_portal_bookmarkgroup_bookmarks: # t
$0
endsnippet

snippet fmgr_vpnsslweb_portal_bookmarkgroup_bookmarks_formdata "Form data." b
- name: $1
	fmgr_vpnsslweb_portal_bookmarkgroup_bookmarks_formdata:
		state: ${2:present|absent}
		adom: ${3:# t}
		portal: ${4:# t}
		bookmark-group: ${5:# t}
		bookmarks: ${6:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# vpnsslweb_portal_bookmarkgroup_bookmarks_formdata: # t
$0
endsnippet

snippet fmgr_vpnsslweb_portal_macaddrcheckrule "Client MAC address check rule." b
- name: $1
	fmgr_vpnsslweb_portal_macaddrcheckrule:
		state: ${2:present|absent}
		adom: ${3:# t}
		portal: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# vpnsslweb_portal_macaddrcheckrule: # t
$0
endsnippet

snippet fmgr_vpnsslweb_portal_oschecklist "SSL VPN OS checks." b
- name: $1
	fmgr_vpnsslweb_portal_oschecklist:
		state: ${2:present|absent}
		adom: ${3:# t}
		portal: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# vpnsslweb_portal_oschecklist: # t
$0
endsnippet

snippet fmgr_vpnsslweb_portal_splitdns "Split DNS for SSL VPN." b
- name: $1
	fmgr_vpnsslweb_portal_splitdns:
		state: ${2:present|absent}
		adom: ${3:# t}
		portal: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# vpnsslweb_portal_splitdns: # t
$0
endsnippet

snippet fmgr_vpnsslweb_realm "Realm." b
- name: $1
	fmgr_vpnsslweb_realm:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# vpnsslweb_realm: # t
$0
endsnippet

snippet fmgr_waf_mainclass "Hidden table for datasource." b
- name: $1
	fmgr_waf_mainclass:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# waf_mainclass: # t
$0
endsnippet

snippet fmgr_waf_profile "Web application firewall configuration." b
- name: $1
	fmgr_waf_profile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# waf_profile: # t
$0
endsnippet

snippet fmgr_waf_profile_addresslist "Black address list and white address list." b
- name: $1
	fmgr_waf_profile_addresslist:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# waf_profile_addresslist: # t
$0
endsnippet

snippet fmgr_waf_profile_constraint "WAF HTTP protocol restrictions." b
- name: $1
	fmgr_waf_profile_constraint:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# waf_profile_constraint: # t
$0
endsnippet

snippet fmgr_waf_profile_constraint_contentlength "HTTP content length in request." b
- name: $1
	fmgr_waf_profile_constraint_contentlength:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# waf_profile_constraint_contentlength: # t
$0
endsnippet

snippet fmgr_waf_profile_constraint_exception "HTTP constraint exception." b
- name: $1
	fmgr_waf_profile_constraint_exception:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# waf_profile_constraint_exception: # t
$0
endsnippet

snippet fmgr_waf_profile_constraint_headerlength "HTTP header length in request." b
- name: $1
	fmgr_waf_profile_constraint_headerlength:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# waf_profile_constraint_headerlength: # t
$0
endsnippet

snippet fmgr_waf_profile_constraint_hostname "Enable/disable hostname check." b
- name: $1
	fmgr_waf_profile_constraint_hostname:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# waf_profile_constraint_hostname: # t
$0
endsnippet

snippet fmgr_waf_profile_constraint_linelength "HTTP line length in request." b
- name: $1
	fmgr_waf_profile_constraint_linelength:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# waf_profile_constraint_linelength: # t
$0
endsnippet

snippet fmgr_waf_profile_constraint_malformed "Enable/disable malformed HTTP request check." b
- name: $1
	fmgr_waf_profile_constraint_malformed:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# waf_profile_constraint_malformed: # t
$0
endsnippet

snippet fmgr_waf_profile_constraint_maxcookie "Maximum number of cookies in HTTP request." b
- name: $1
	fmgr_waf_profile_constraint_maxcookie:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# waf_profile_constraint_maxcookie: # t
$0
endsnippet

snippet fmgr_waf_profile_constraint_maxheaderline "Maximum number of HTTP header line." b
- name: $1
	fmgr_waf_profile_constraint_maxheaderline:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# waf_profile_constraint_maxheaderline: # t
$0
endsnippet

snippet fmgr_waf_profile_constraint_maxrangesegment "Maximum number of range segments in HTTP range line." b
- name: $1
	fmgr_waf_profile_constraint_maxrangesegment:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# waf_profile_constraint_maxrangesegment: # t
$0
endsnippet

snippet fmgr_waf_profile_constraint_maxurlparam "Maximum number of parameters in URL." b
- name: $1
	fmgr_waf_profile_constraint_maxurlparam:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# waf_profile_constraint_maxurlparam: # t
$0
endsnippet

snippet fmgr_waf_profile_constraint_method "Enable/disable HTTP method check." b
- name: $1
	fmgr_waf_profile_constraint_method:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# waf_profile_constraint_method: # t
$0
endsnippet

snippet fmgr_waf_profile_constraint_paramlength "Maximum length of parameter in URL, HTTP POST request or HTTP body." b
- name: $1
	fmgr_waf_profile_constraint_paramlength:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# waf_profile_constraint_paramlength: # t
$0
endsnippet

snippet fmgr_waf_profile_constraint_urlparamlength "Maximum length of parameter in URL." b
- name: $1
	fmgr_waf_profile_constraint_urlparamlength:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# waf_profile_constraint_urlparamlength: # t
$0
endsnippet

snippet fmgr_waf_profile_constraint_version "Enable/disable HTTP version check." b
- name: $1
	fmgr_waf_profile_constraint_version:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# waf_profile_constraint_version: # t
$0
endsnippet

snippet fmgr_waf_profile_method "Method restriction." b
- name: $1
	fmgr_waf_profile_method:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# waf_profile_method: # t
$0
endsnippet

snippet fmgr_waf_profile_method_methodpolicy "HTTP method policy." b
- name: $1
	fmgr_waf_profile_method_methodpolicy:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# waf_profile_method_methodpolicy: # t
$0
endsnippet

snippet fmgr_waf_profile_signature "WAF signatures." b
- name: $1
	fmgr_waf_profile_signature:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# waf_profile_signature: # t
$0
endsnippet

snippet fmgr_waf_profile_signature_customsignature "Custom signature." b
- name: $1
	fmgr_waf_profile_signature_customsignature:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# waf_profile_signature_customsignature: # t
$0
endsnippet

snippet fmgr_waf_profile_signature_mainclass "Main signature class." b
- name: $1
	fmgr_waf_profile_signature_mainclass:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# waf_profile_signature_mainclass: # t
$0
endsnippet

snippet fmgr_waf_profile_urlaccess "URL access list" b
- name: $1
	fmgr_waf_profile_urlaccess:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# waf_profile_urlaccess: # t
$0
endsnippet

snippet fmgr_waf_profile_urlaccess_accesspattern "URL access pattern." b
- name: $1
	fmgr_waf_profile_urlaccess_accesspattern:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		url-access: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# waf_profile_urlaccess_accesspattern: # t
$0
endsnippet

snippet fmgr_waf_signature "Hidden table for datasource." b
- name: $1
	fmgr_waf_signature:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# waf_signature: # t
$0
endsnippet

snippet fmgr_waf_subclass "Hidden table for datasource." b
- name: $1
	fmgr_waf_subclass:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# waf_subclass: # t
$0
endsnippet

snippet fmgr_wagprofile "Configure wireless access gateway" b
- name: $1
	fmgr_wagprofile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wagprofile: # t
$0
endsnippet

snippet fmgr_wanopt_authgroup "Configure WAN optimization authentication groups." b
- name: $1
	fmgr_wanopt_authgroup:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wanopt_authgroup: # t
$0
endsnippet

snippet fmgr_wanopt_peer "Configure WAN optimization peers." b
- name: $1
	fmgr_wanopt_peer:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wanopt_peer: # t
$0
endsnippet

snippet fmgr_wanopt_profile "Configure WAN optimization profiles." b
- name: $1
	fmgr_wanopt_profile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wanopt_profile: # t
$0
endsnippet

snippet fmgr_wanopt_profile_cifs "Enable/disable CIFS" b
- name: $1
	fmgr_wanopt_profile_cifs:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wanopt_profile_cifs: # t
$0
endsnippet

snippet fmgr_wanopt_profile_ftp "Enable/disable FTP WAN Optimization and configure FTP WAN Optimization features." b
- name: $1
	fmgr_wanopt_profile_ftp:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wanopt_profile_ftp: # t
$0
endsnippet

snippet fmgr_wanopt_profile_http "Enable/disable HTTP WAN Optimization and configure HTTP WAN Optimization features." b
- name: $1
	fmgr_wanopt_profile_http:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wanopt_profile_http: # t
$0
endsnippet

snippet fmgr_wanopt_profile_mapi "Enable/disable MAPI email WAN Optimization and configure MAPI WAN Optimization features." b
- name: $1
	fmgr_wanopt_profile_mapi:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wanopt_profile_mapi: # t
$0
endsnippet

snippet fmgr_wanopt_profile_tcp "Enable/disable TCP WAN Optimization and configure TCP WAN Optimization features." b
- name: $1
	fmgr_wanopt_profile_tcp:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wanopt_profile_tcp: # t
$0
endsnippet

snippet fmgr_wanprof_system_sdwan "Configure redundant internet connections using SD-WAN" b
- name: $1
	fmgr_wanprof_system_sdwan:
		state: ${2:present|absent}
		adom: ${3:# t}
		wanprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wanprof_system_sdwan: # t
$0
endsnippet

snippet fmgr_wanprof_system_sdwan_duplication "Create SD-WAN duplication rule." b
- name: $1
	fmgr_wanprof_system_sdwan_duplication:
		state: ${2:present|absent}
		adom: ${3:# t}
		wanprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wanprof_system_sdwan_duplication: # t
$0
endsnippet

snippet fmgr_wanprof_system_sdwan_healthcheck "SD-WAN status checking or health checking." b
- name: $1
	fmgr_wanprof_system_sdwan_healthcheck:
		state: ${2:present|absent}
		adom: ${3:# t}
		wanprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wanprof_system_sdwan_healthcheck: # t
$0
endsnippet

snippet fmgr_wanprof_system_sdwan_healthcheck_sla "Service level agreement" b
- name: $1
	fmgr_wanprof_system_sdwan_healthcheck_sla:
		state: ${2:present|absent}
		adom: ${3:# t}
		wanprof: ${4:# t}
		health-check: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wanprof_system_sdwan_healthcheck_sla: # t
$0
endsnippet

snippet fmgr_wanprof_system_sdwan_members "FortiGate interfaces added to the SD-WAN." b
- name: $1
	fmgr_wanprof_system_sdwan_members:
		state: ${2:present|absent}
		adom: ${3:# t}
		wanprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wanprof_system_sdwan_members: # t
$0
endsnippet

snippet fmgr_wanprof_system_sdwan_neighbor "Create SD-WAN neighbor from BGP neighbor table to control route advertisements according to SLA status." b
- name: $1
	fmgr_wanprof_system_sdwan_neighbor:
		state: ${2:present|absent}
		adom: ${3:# t}
		wanprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wanprof_system_sdwan_neighbor: # t
$0
endsnippet

snippet fmgr_wanprof_system_sdwan_service "Create SD-WAN rules" b
- name: $1
	fmgr_wanprof_system_sdwan_service:
		state: ${2:present|absent}
		adom: ${3:# t}
		wanprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wanprof_system_sdwan_service: # t
$0
endsnippet

snippet fmgr_wanprof_system_sdwan_service_sla "Service level agreement" b
- name: $1
	fmgr_wanprof_system_sdwan_service_sla:
		state: ${2:present|absent}
		adom: ${3:# t}
		wanprof: ${4:# t}
		service: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wanprof_system_sdwan_service_sla: # t
$0
endsnippet

snippet fmgr_wanprof_system_sdwan_zone "Configure SD-WAN zones." b
- name: $1
	fmgr_wanprof_system_sdwan_zone:
		state: ${2:present|absent}
		adom: ${3:# t}
		wanprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wanprof_system_sdwan_zone: # t
$0
endsnippet

snippet fmgr_wanprof_system_virtualwanlink "Configure redundant internet connections using SD-WAN" b
- name: $1
	fmgr_wanprof_system_virtualwanlink:
		state: ${2:present|absent}
		adom: ${3:# t}
		wanprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wanprof_system_virtualwanlink: # t
$0
endsnippet

snippet fmgr_wanprof_system_virtualwanlink_healthcheck "SD-WAN status checking or health checking." b
- name: $1
	fmgr_wanprof_system_virtualwanlink_healthcheck:
		state: ${2:present|absent}
		adom: ${3:# t}
		wanprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wanprof_system_virtualwanlink_healthcheck: # t
$0
endsnippet

snippet fmgr_wanprof_system_virtualwanlink_healthcheck_sla "Service level agreement" b
- name: $1
	fmgr_wanprof_system_virtualwanlink_healthcheck_sla:
		state: ${2:present|absent}
		adom: ${3:# t}
		wanprof: ${4:# t}
		health-check: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wanprof_system_virtualwanlink_healthcheck_sla: # t
$0
endsnippet

snippet fmgr_wanprof_system_virtualwanlink_members "Physical FortiGate interfaces added to the virtual-wan-link." b
- name: $1
	fmgr_wanprof_system_virtualwanlink_members:
		state: ${2:present|absent}
		adom: ${3:# t}
		wanprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wanprof_system_virtualwanlink_members: # t
$0
endsnippet

snippet fmgr_wanprof_system_virtualwanlink_neighbor "SD-WAN neighbor table." b
- name: $1
	fmgr_wanprof_system_virtualwanlink_neighbor:
		state: ${2:present|absent}
		adom: ${3:# t}
		wanprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wanprof_system_virtualwanlink_neighbor: # t
$0
endsnippet

snippet fmgr_wanprof_system_virtualwanlink_service "Create SD-WAN rules or priority rules" b
- name: $1
	fmgr_wanprof_system_virtualwanlink_service:
		state: ${2:present|absent}
		adom: ${3:# t}
		wanprof: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wanprof_system_virtualwanlink_service: # t
$0
endsnippet

snippet fmgr_wanprof_system_virtualwanlink_service_sla "Service level agreement" b
- name: $1
	fmgr_wanprof_system_virtualwanlink_service_sla:
		state: ${2:present|absent}
		adom: ${3:# t}
		wanprof: ${4:# t}
		service: ${5:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wanprof_system_virtualwanlink_service_sla: # t
$0
endsnippet

snippet fmgr_webfilter_categories "no description" b
- name: $1
	fmgr_webfilter_categories:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# webfilter_categories: # t
$0
endsnippet

snippet fmgr_webfilter_content "Configure Web filter banned word table." b
- name: $1
	fmgr_webfilter_content:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# webfilter_content: # t
$0
endsnippet

snippet fmgr_webfilter_content_entries "Configure banned word entries." b
- name: $1
	fmgr_webfilter_content_entries:
		state: ${2:present|absent}
		adom: ${3:# t}
		content: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# webfilter_content_entries: # t
$0
endsnippet

snippet fmgr_webfilter_contentheader "Configure content types used by Web filter." b
- name: $1
	fmgr_webfilter_contentheader:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# webfilter_contentheader: # t
$0
endsnippet

snippet fmgr_webfilter_contentheader_entries "Configure content types used by web filter." b
- name: $1
	fmgr_webfilter_contentheader_entries:
		state: ${2:present|absent}
		adom: ${3:# t}
		content-header: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# webfilter_contentheader_entries: # t
$0
endsnippet

snippet fmgr_webfilter_ftgdlocalcat "Configure FortiGuard Web Filter local categories." b
- name: $1
	fmgr_webfilter_ftgdlocalcat:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# webfilter_ftgdlocalcat: # t
$0
endsnippet

snippet fmgr_webfilter_ftgdlocalrating "Configure local FortiGuard Web Filter local ratings." b
- name: $1
	fmgr_webfilter_ftgdlocalrating:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# webfilter_ftgdlocalrating: # t
$0
endsnippet

snippet fmgr_webfilter_profile "Configure Web filter profiles." b
- name: $1
	fmgr_webfilter_profile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# webfilter_profile: # t
$0
endsnippet

snippet fmgr_webfilter_profile_antiphish "AntiPhishing profile." b
- name: $1
	fmgr_webfilter_profile_antiphish:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# webfilter_profile_antiphish: # t
$0
endsnippet

snippet fmgr_webfilter_profile_antiphish_custompatterns "Custom username and password regex patterns." b
- name: $1
	fmgr_webfilter_profile_antiphish_custompatterns:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# webfilter_profile_antiphish_custompatterns: # t
$0
endsnippet

snippet fmgr_webfilter_profile_antiphish_inspectionentries "AntiPhishing entries." b
- name: $1
	fmgr_webfilter_profile_antiphish_inspectionentries:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# webfilter_profile_antiphish_inspectionentries: # t
$0
endsnippet

snippet fmgr_webfilter_profile_filefilter "File filter." b
- name: $1
	fmgr_webfilter_profile_filefilter:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# webfilter_profile_filefilter: # t
$0
endsnippet

snippet fmgr_webfilter_profile_filefilter_entries "File filter entries." b
- name: $1
	fmgr_webfilter_profile_filefilter_entries:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# webfilter_profile_filefilter_entries: # t
$0
endsnippet

snippet fmgr_webfilter_profile_ftgdwf "FortiGuard Web Filter settings." b
- name: $1
	fmgr_webfilter_profile_ftgdwf:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# webfilter_profile_ftgdwf: # t
$0
endsnippet

snippet fmgr_webfilter_profile_ftgdwf_filters "FortiGuard filters." b
- name: $1
	fmgr_webfilter_profile_ftgdwf_filters:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# webfilter_profile_ftgdwf_filters: # t
$0
endsnippet

snippet fmgr_webfilter_profile_ftgdwf_quota "FortiGuard traffic quota settings." b
- name: $1
	fmgr_webfilter_profile_ftgdwf_quota:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# webfilter_profile_ftgdwf_quota: # t
$0
endsnippet

snippet fmgr_webfilter_profile_override "Web Filter override settings." b
- name: $1
	fmgr_webfilter_profile_override:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# webfilter_profile_override: # t
$0
endsnippet

snippet fmgr_webfilter_profile_urlextraction "Configure URL Extraction" b
- name: $1
	fmgr_webfilter_profile_urlextraction:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# webfilter_profile_urlextraction: # t
$0
endsnippet

snippet fmgr_webfilter_profile_web "Web content filtering settings." b
- name: $1
	fmgr_webfilter_profile_web:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# webfilter_profile_web: # t
$0
endsnippet

snippet fmgr_webfilter_profile_youtubechannelfilter "YouTube channel filter." b
- name: $1
	fmgr_webfilter_profile_youtubechannelfilter:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# webfilter_profile_youtubechannelfilter: # t
$0
endsnippet

snippet fmgr_webfilter_urlfilter "Configure URL filter lists." b
- name: $1
	fmgr_webfilter_urlfilter:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# webfilter_urlfilter: # t
$0
endsnippet

snippet fmgr_webfilter_urlfilter_entries "URL filter entries." b
- name: $1
	fmgr_webfilter_urlfilter_entries:
		state: ${2:present|absent}
		adom: ${3:# t}
		urlfilter: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# webfilter_urlfilter_entries: # t
$0
endsnippet

snippet fmgr_webproxy_forwardserver "Configure forward-server addresses." b
- name: $1
	fmgr_webproxy_forwardserver:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# webproxy_forwardserver: # t
$0
endsnippet

snippet fmgr_webproxy_forwardservergroup "Configure a forward server group consisting or multiple forward servers." b
- name: $1
	fmgr_webproxy_forwardservergroup:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# webproxy_forwardservergroup: # t
$0
endsnippet

snippet fmgr_webproxy_forwardservergroup_serverlist "Add web forward servers to a list to form a server group." b
- name: $1
	fmgr_webproxy_forwardservergroup_serverlist:
		state: ${2:present|absent}
		adom: ${3:# t}
		forward-server-group: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# webproxy_forwardservergroup_serverlist: # t
$0
endsnippet

snippet fmgr_webproxy_profile "Configure web proxy profiles." b
- name: $1
	fmgr_webproxy_profile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# webproxy_profile: # t
$0
endsnippet

snippet fmgr_webproxy_profile_headers "Configure HTTP forwarded requests headers." b
- name: $1
	fmgr_webproxy_profile_headers:
		state: ${2:present|absent}
		adom: ${3:# t}
		profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# webproxy_profile_headers: # t
$0
endsnippet

snippet fmgr_webproxy_wisp "Configure Wireless Internet service provider" b
- name: $1
	fmgr_webproxy_wisp:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# webproxy_wisp: # t
$0
endsnippet

snippet fmgr_widsprofile "Configure wireless intrusion detection system" b
- name: $1
	fmgr_widsprofile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# widsprofile: # t
$0
endsnippet

snippet fmgr_wtpprofile "Configure WTP profiles or FortiAP profiles that define radio settings for manageable FortiAP platforms." b
- name: $1
	fmgr_wtpprofile:
		state: ${2:present|absent}
		adom: ${3:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wtpprofile: # t
$0
endsnippet

snippet fmgr_wtpprofile_denymaclist "List of MAC addresses that are denied access to this WTP, FortiAP, or AP." b
- name: $1
	fmgr_wtpprofile_denymaclist:
		state: ${2:present|absent}
		adom: ${3:# t}
		wtp-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wtpprofile_denymaclist: # t
$0
endsnippet

snippet fmgr_wtpprofile_lan "WTP LAN port mapping." b
- name: $1
	fmgr_wtpprofile_lan:
		state: ${2:present|absent}
		adom: ${3:# t}
		wtp-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wtpprofile_lan: # t
$0
endsnippet

snippet fmgr_wtpprofile_lbs "Set various location based service" b
- name: $1
	fmgr_wtpprofile_lbs:
		state: ${2:present|absent}
		adom: ${3:# t}
		wtp-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wtpprofile_lbs: # t
$0
endsnippet

snippet fmgr_wtpprofile_platform "WTP, FortiAP, or AP platform." b
- name: $1
	fmgr_wtpprofile_platform:
		state: ${2:present|absent}
		adom: ${3:# t}
		wtp-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wtpprofile_platform: # t
$0
endsnippet

snippet fmgr_wtpprofile_radio1 "Configuration options for radio 1." b
- name: $1
	fmgr_wtpprofile_radio1:
		state: ${2:present|absent}
		adom: ${3:# t}
		wtp-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wtpprofile_radio1: # t
$0
endsnippet

snippet fmgr_wtpprofile_radio2 "Configuration options for radio 2." b
- name: $1
	fmgr_wtpprofile_radio2:
		state: ${2:present|absent}
		adom: ${3:# t}
		wtp-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wtpprofile_radio2: # t
$0
endsnippet

snippet fmgr_wtpprofile_radio3 "Configuration options for radio 3." b
- name: $1
	fmgr_wtpprofile_radio3:
		state: ${2:present|absent}
		adom: ${3:# t}
		wtp-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wtpprofile_radio3: # t
$0
endsnippet

snippet fmgr_wtpprofile_radio4 "Configuration options for radio 4." b
- name: $1
	fmgr_wtpprofile_radio4:
		state: ${2:present|absent}
		adom: ${3:# t}
		wtp-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wtpprofile_radio4: # t
$0
endsnippet

snippet fmgr_wtpprofile_splittunnelingacl "Split tunneling ACL filter list." b
- name: $1
	fmgr_wtpprofile_splittunnelingacl:
		state: ${2:present|absent}
		adom: ${3:# t}
		wtp-profile: ${4:# t}
		# enable_log: no
		# proposed_method: update|set|add
		# bypass_validation: no
		# workspace_locking_adom: # t
		# workspace_locking_timeout: 300
		# rc_succeeded: # t
		# rc_failed: # t
		# wtpprofile_splittunnelingacl: # t
$0
endsnippet

snippet fortios_alertemail_setting "Configure alert email settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_alertemail_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# alertemail_setting: # Configure alert email settings.
$0
endsnippet

snippet fortios_antivirus_heuristic "Configure global heuristic options in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_antivirus_heuristic:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# antivirus_heuristic: # Configure global heuristic options.
$0
endsnippet

snippet fortios_antivirus_mms_checksum "Configure MMS content checksum list in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_antivirus_mms_checksum:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# antivirus_mms_checksum: # Configure MMS content checksum list.
$0
endsnippet

snippet fortios_antivirus_notification "Configure AntiVirus notification lists in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_antivirus_notification:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# antivirus_notification: # Configure AntiVirus notification lists.
$0
endsnippet

snippet fortios_antivirus_profile "Configure AntiVirus profiles in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_antivirus_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# antivirus_profile: # Configure AntiVirus profiles.
$0
endsnippet

snippet fortios_antivirus_quarantine "Configure quarantine options in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_antivirus_quarantine:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# antivirus_quarantine: # Configure quarantine options.
$0
endsnippet

snippet fortios_antivirus_settings "Configure AntiVirus settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_antivirus_settings:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# antivirus_settings: # Configure AntiVirus settings.
$0
endsnippet

snippet fortios_application_custom "Configure custom application signatures in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_application_custom:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# application_custom: # Configure custom application signatures.
$0
endsnippet

snippet fortios_application_group "Configure firewall application groups in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_application_group:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# application_group: # Configure firewall application groups.
$0
endsnippet

snippet fortios_application_list "Configure application control lists in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_application_list:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# application_list: # Configure application control lists.
$0
endsnippet

snippet fortios_application_name "Configure application signatures in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_application_name:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# application_name: # Configure application signatures.
$0
endsnippet

snippet fortios_application_rule_settings "Configure application rule settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_application_rule_settings:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# application_rule_settings: # Configure application rule settings.
$0
endsnippet

snippet fortios_authentication_rule "Configure Authentication Rules in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_authentication_rule:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# authentication_rule: # Configure Authentication Rules.
$0
endsnippet

snippet fortios_authentication_scheme "Configure Authentication Schemes in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_authentication_scheme:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# authentication_scheme: # Configure Authentication Schemes.
$0
endsnippet

snippet fortios_authentication_setting "Configure authentication setting in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_authentication_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# authentication_setting: # Configure authentication setting.
$0
endsnippet

snippet fortios_certificate_ca "CA certificate in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_certificate_ca:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# certificate_ca: # CA certificate.
$0
endsnippet

snippet fortios_certificate_crl "Certificate Revocation List as a PEM file in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_certificate_crl:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# certificate_crl: # Certificate Revocation List as a PEM file.
$0
endsnippet

snippet fortios_certificate_local "Local keys and certificates in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_certificate_local:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# certificate_local: # Local keys and certificates.
$0
endsnippet

snippet fortios_certificate_remote "Remote certificate as a PEM file in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_certificate_remote:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# certificate_remote: # Remote certificate as a PEM file.
$0
endsnippet

snippet fortios_cifs_domain_controller "Define known domain controller servers in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_cifs_domain_controller:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# cifs_domain_controller: # Define known domain controller servers.
$0
endsnippet

snippet fortios_cifs_profile "Configure CIFS profile in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_cifs_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# cifs_profile: # Configure CIFS profile.
$0
endsnippet

snippet fortios_configuration_fact "Retrieve Facts of FortiOS Configurable Objects." b
- name: $1
	fortios_configuration_fact:
		selector: ${2:log_gui-display|system_fortiguard-service|router_route-map|system_sso-admin|wireless-controller_address|vpn.ssl_monitor|system.auto-update_status|system_cmdb|authentication_rule|log.fortianalyzer_override-setting|firewall.ssl_setting|vpn.ipsec_phase2-interface|router_key-chain|system_ddns|firewall_traffic-class|system_replacemsg-group|system_ftm-push|system_sms-server|firewall_central-snat-map|firewall_multicast-address6|vpn.status.ssl_hw-acceleration-status|system.replacemsg_sslvpn|ips_view-map|firewall_pfcp|system_pppoe-interface|webfilter_categories|firewall_addrgrp6|log.disk_filter|system.session-info_full-stat|firewall_proxy-address|emailfilter_block-allow-list|router_bgp|switch-controller_custom-command|system_resource-limits|system.replacemsg_auth|system.autoupdate_schedule|waf_sub-class|firewall_local-in-policy6|log.fortianalyzer2_override-setting|log.fortianalyzer_override-filter|system.replacemsg_icap|system_object-tagging|spamfilter_profile|switch-controller_remote-log|system.replacemsg_mms|switch-controller.security-policy_local-access|web-proxy_profile|log.fortianalyzer-cloud_override-filter|spamfilter_mheader|system_smc-ntp|user_adgrp|system_auto-script|switch-controller_quarantine|firewall.service_category|system_standalone-cluster|system_link-monitor|switch-controller_stp-settings|user_security-exempt-list|log.fortianalyzer-cloud_setting|switch-controller.qos_qos-policy|firewall_sniffer|wireless-controller_ssid-policy|wireless-controller_wag-profile|log.fortiguard_override-setting|system.replacemsg_mm7|system.replacemsg_mm4|firewall_internet-service|system.replacemsg_mm3|system.replacemsg_mm1|firewall.iprope.appctrl_status|firewall_vipgrp46|log.webtrends_filter|webfilter_ips-urlfilter-setting6|system_sso-forticloud-admin|gtp_apngrp|log_setting|firewall_address6-template|wireless-controller_scan|wireless-controller.hotspot20_h2qp-wan-metric|system_automation-action|system.autoupdate_tunneling|webfilter_ips-urlfilter-setting|pfcp_message-filter|switch-controller_network-monitor-settings|system_alias|switch-controller_mac-sync-settings|web-proxy_forward-server-group|system_session-helper|router_community-list|wireless-controller_qos-profile|firewall_dnstranslation|vpn.ssl.web_portal|system_vdom-property|system.replacemsg_device-detection-portal|log.syslogd2_setting|firewall_internet-service-custom-group|system.performance.firewall_statistics|firewall_profile-group|firewall.service_group|system.autoupdate_push-update|firewall_address6|endpoint-control_profile|wireless-controller_vap-status|wireless-controller_wids-profile|emailfilter_bword|log.fortiguard_filter|firewall_ipv6-eh-filter|switch-controller.ptp_settings|endpoint-control_fctems|user_device-category|firewall_identity-based-route|system.session-helper-info_list|system_console|firewall.iprope.appctrl_list|system_ntp|firewall_access-proxy-virtual-host|system_nat64|report_layout|wireless-controller_timers|wireless-controller.hotspot20_icon|log.memory_global-setting|router_multicast-flow|ssh-filter_profile|system_fortisandbox|system_dns64|system_virtual-wan-link|ips_sensor|firewall.wildcard-fqdn_custom|router_static|alertemail_setting|user_fortitoken|web-proxy_debug-url|vpn.ike_gateway|webfilter_override|switch-controller_nac-device|system_fsso-polling|user_peer|vpn.ssl.web_host-check-software|gtp_message-filter-v0v1|switch-controller_lldp-profile|switch-controller_dynamic-port-policy|system.replacemsg_nac-quar|system_stp|user_nac-policy|wireless-controller_snmp|emailfilter_fortishield|switch-controller.security-policy_captive-portal|firewall_shaping-policy|wireless-controller_wlchanlistlic|log_custom-field|switch-controller_mac-policy|firewall_address|certificate_crl|firewall.ssh_setting|vpn.ssl.web_realm|switch-controller.auto-config_policy|router_access-list|system_nd-proxy|log.memory_setting|system_alarm|system_ipv6-neighbor-cache|wireless-controller_log|extender_lte-carrier-by-mcc-mnc|webfilter_ftgd-statistics|hardware.npu.np6_ipsec-stats|firewall_vendor-mac-summary|system_cluster-sync|wanopt_settings|emailfilter_dnsbl|endpoint-control_registered-forticlient|system_dedicated-mgmt|file-filter_profile|log.fortianalyzer-cloud_override-setting|firewall_policy46|system.source-ip_status|system_modem|router_static6|firewall_decrypted-traffic-mirror|antivirus_settings|switch-controller_storm-control-policy|switch-controller_802-1X-settings|system_session-ttl|system_storage|system_isf-queue-profile|log.memory_filter|firewall_auth-portal|antivirus_notification|user_ldap|ips_global|wanopt_remote-storage|system_speed-test-schedule|wireless-controller.hotspot20_qos-map|system.session-info_ttl|vpn_l2tp|monitoring_np6-ipsec-engine|system_npu|firewall_vip46|authentication_setting|vpn.certificate_ocsp-server|antivirus_heuristic|spamfilter_bword|system_custom-language|web-proxy_explicit|log.syslogd3_override-setting|wireless-controller_wtp-group|system_vdom-sflow|switch-controller_igmp-snooping|waf_signature|log.null-device_setting|ips_rule-settings|log.syslogd_setting|system.session-info_expectation|switch-controller.security-policy_802-1X|system_np6|report_setting|gtp_tunnel-limit|user_setting|icap_profile|system_geoip-override|vpn.ipsec_phase1|vpn.ipsec_phase2|wireless-controller.hotspot20_anqp-network-auth-type|webfilter_ips-urlfilter-cache-setting|firewall.ipmacbinding_setting|log.fortianalyzer2_filter|system.ip-conflict_status|application_rule-settings|switch-controller_flow-tracking|log.syslogd4_filter|system_speed-test-server|firewall_acl|system_proxy-arp|webfilter_ftgd-local-rating|switch-controller_snmp-user|nsxt_setting|ips_custom|switch-controller_switch-interface-tag|router_policy6|switch-controller.qos_ip-dscp-map|log_eventfilter|firewall_internet-service-custom|switch-controller_traffic-sniffer|router_auth-path|firewall_internet-service-ipbl-reason|system_external-resource|firewall_security-policy|user_exchange|sctp-filter_profile|system_ips-urlfilter-dns6|vpn.ipsec.tunnel_details|report_style|log.syslogd2_override-filter|wireless-controller_wtp|wireless-controller_rf-analysis|system_ipip-tunnel|system_saml|system.dhcp6_server|emailfilter_profile|hardware.npu.np6_sse-stats|log.fortianalyzer3_override-filter|hardware_status|firewall_multicast-policy|vpn_ocvpn|spamfilter_bwl|switch-controller_fortilink-settings|firewall_proute6|system_arp|firewall_internet-service-addition|webfilter_status|system_ips|emailfilter_bwl|system_password-policy|wireless-controller_mpsk-profile|switch-controller_virtual-port-pool|wireless-controller_setting|system.3g-modem_custom|wireless-controller.hotspot20_anqp-ip-address-type|firewall_vipgrp|switch-controller_switch-profile|vpn.ipsec.stats_tunnel|system_switch-interface|router_isis|firewall_policy|log.syslogd_override-setting|system_lte-modem|firewall_access-proxy|router_info|system.performance.firewall_packet-distribution|webfilter_content|firewall_vipgrp6|emailfilter_mheader|firewall.shaper_traffic|firewall.schedule_onetime|antivirus_profile|gtp_ie-allow-list|log.fortianalyzer_setting|videofilter_youtube-key|vpn.ipsec.tunnel_name|firewall_ippool6|wireless-controller_status|system_central-management|system.replacemsg_http|vpn.status.ssl_list|vpn.ipsec.tunnel_summary|hardware.npu.np6_session-stats|cifs_domain-controller|system_zone|system_vdom-dns|firewall_multicast-address|wireless-controller_wtp-profile|vpn.ssl_settings|router_ospf|switch-controller.qos_queue-policy|dpdk_cpus|endpoint-control_forticlient-ems|ftp-proxy_explicit|hardware.npu.np6_port-list|user_device-group|vpn.certificate_crl|system.replacemsg_admin|wireless-controller_wtp-status|webfilter_profile|switch-controller_storm-control|firewall_ssl-ssh-profile|vpn.ssl_client|gtp_ie-white-list|firewall_city|user_certificate|log.disk_setting|nsxt_service-chain|dlp_filepattern|firewall_acl6|firewall_ippool|web-proxy_url-match|dlp_fp-sensitivity|system_interface|log.syslogd3_override-filter|router_bfd|system_fortimanager|firewall_internet-service-extension|system.replacemsg_webproxy|user_password-policy|wireless-controller_inter-controller|certificate_remote|log.syslogd4_setting|firewall_internet-service-owner|hardware_cpu|switch-controller_switch-group|user_fsso|firewall_vipgrp64|user_quarantine|system_ips-urlfilter-dns|wireless-controller_addrgrp|system_fm|wireless-controller_apcfg-profile|system_global|vpn.ipsec.stats_crypto|wireless-controller.hotspot20_anqp-nai-realm|hardware_memory|system_physical-switch|system_affinity-packet-redistribution|system_status|firewall_gtp|firewall_internet-service-reputation|firewall_proute|videofilter_profile|log.fortianalyzer3_setting|system.auto-update_versions|firewall_vip|system_virtual-switch|firewall_mms-profile|wanopt_auth-group|wanopt_webcache|system.snmp_user|firewall_ip-translation|system_settings|log.fortianalyzer2_setting|wireless-controller_vap|ipsec_tunnel|wanopt_cache-service|log.syslogd4_override-filter|switch-controller_switch-log|firewall_internet-service-group|system.replacemsg_mail|extender_modem-status|system_replacemsg-image|system.performance_status|system_acme|antivirus_quarantine|switch-controller.initial-config_template|log.fortianalyzer2_override-filter|system.session-info_list|vpn.certificate_ca|endpoint-control_forticlient-registration-sync|system_sdn-connector|vpn.ssl.web_user-group-bookmark|system_fortiguard-log-service|endpoint-control_settings|system_central-mgmt|hardware_nic|log.null-device_filter|gtp_message-filter-v2|dlp_settings|wireless-controller_utm-profile|router_rip|router_aspath-list|firewall.schedule_group|firewall_internet-service-list|system_dscp-based-priority|dlp_sensitivity|icap_server|vpn.ipsec_phase1-interface|authentication_scheme|router_prefix-list6|system_sdwan|log.fortianalyzer3_filter|system_email-server|dlp_sensor|application_list|firewall_internet-service-append|vpn.ssl.web_user-bookmark|firewall.shaper_traffic-shaper|system_management-tunnel|system_csf|firewall.shaper_per-ip-shaper|switch-controller.ptp_policy|switch-controller_stp-instance|mgmt-data_status|dnsfilter_profile|user_device-access-list|system_ha-monitor|monitoring_npu-hpe|wireless-controller.hotspot20_anqp-venue-name|system.snmp_sysinfo|system_fortiai|system_session|application_custom|ips_session|system_api-user|system.info.admin_ssh|ips_rule|spamfilter_fortishield|log.fortianalyzer-cloud_filter|system_netflow|vpn.ipsec_forticlient|system_automation-trigger|firewall_policy64|wireless-controller.hotspot20_h2qp-osu-provider|application_name|wireless-controller_access-control-list|firewall.service_custom|spamfilter_iptrust|firewall_internet-service-botnet|firewall_internet-service-definition|gtp_rat-timeout-profile|system_mobile-tunnel|wireless-controller_nac-profile|user_saml|firewall_ttl-policy|wireless-controller_client-info|system_vne-tunnel|system.replacemsg_utm|gtp_apn|vpn_pptp|wireless-controller.hotspot20_hs-profile|log.webtrends_setting|firewall_local-in-policy|extender-controller_dataplan|system_gi-gk|wireless-controller_region|router_policy|switch-controller_port-policy|switch-controller.qos_dot1p-map|firewall_multicast-policy6|switch-controller.initial-config_vlans|system_federated-upgrade|wanopt_content-delivery-network-rule|firewall_region|system_dns-database|waf_main-class|firewall_policy6|system_vdom-radius-server|system_vdom|user_tacacs+|wanopt_peer|log.syslogd3_setting|report_dataset|webfilter_ftgd-local-cat|router_multicast6|vpn.certificate_remote|extender_lte-carrier-list|system_fips-cc|switch-controller_snmp-community|system_geneve|system_ha|log.syslogd3_filter|user_radius|firewall_DoS-policy6|switch-controller.auto-config_default|system_tos-based-priority|vpn.certificate_local|system_accprofile|vpn.status_pptp|wireless-controller_global|log.syslogd_filter|vpn.status_l2tp|system_ipsec-aggregate|wireless-controller_ap-status|switch-controller_poe|log.syslogd2_filter|wireless-controller_ble-profile|system_password-policy-guest-admin|user_pop3|switch-controller_vlan-policy|system_geoip-country|switch-controller_system|videofilter_youtube-channel-filter|voip_profile|vpn.ipsec_manualkey-interface|emailfilter_options|system.info.admin_status|switch-controller_snmp-sysinfo|firewall_internet-service-sld|system_vdom-netflow|firewall.ipmacbinding_table|system_automation-destination|dlp_fp-doc-source|firewall_ldb-monitor|firewall.ssh_host-key|system_vdom-link|system_admin|system_fortianalyzer-connectivity|router_ospf6|user_device|log.fortiguard_setting|system.snmp_community|wireless-controller_arrp-profile|ips_settings|log.syslogd_override-filter|system_vdom-exception|system_wccp|antivirus_mms-checksum|router_info6|system_ha-nonsync-csum|system_automation-stitch|system_mem-mgr|firewall_profile-protocol-options|report_theme|firewall.ssh_local-key|system_mgmt-csum|system.performance_top|firewall_vip64|web-proxy_wisp|spamfilter_options|system.checksum_status|system_dns-server|system.replacemsg_alertmail|log.fortiguard_override-filter|endpoint-control_client|firewall_access-proxy-ssh-client-cert|system_fortiguard|web-proxy_global|wanopt_profile|switch-controller_traffic-policy|wireless-controller.hotspot20_anqp-3gpp-cellular|system.replacemsg_ec|switch-controller_vlan|system_vxlan|switch-controller_snmp-trap-threshold|webfilter_search-engine|system_ipv6-tunnel|certificate_local|system.lldp_network-policy|user_fsso-polling|system.dhcp_server|report_chart|vpn.certificate_setting|router_bfd6|system.replacemsg_nntp|system.session-info_statistics|firewall_proxy-policy|system_dns|user_peergrp|vpn.ipsec_concentrator|webfilter_override-usr|ips_decoder|dnsfilter_domain-filter|report.sql_status|switch-controller.auto-config_custom|wireless-controller_vap-group|emailfilter_iptrust|system_startup-error-log|firewall_internet-service-name|system_affinity-interrupt|firewall_shaping-profile|log.syslogd4_override-setting|firewall_interface-policy6|vpn.ipsec_manualkey|firewall.shaper_per-ip|firewall_vendor-mac|switch-controller_global|router_setting|user_local|firewall.schedule_recurring|system_sit-tunnel|system_arp-table|firewall_carrier-endpoint-bwl|switch-controller_lldp-settings|webfilter_content-header|system_auto-install|log.fortianalyzer3_override-setting|user_domain-controller|router_multicast|firewall_ssl-server|system.replacemsg_traffic-quota|system_virtual-wire-pair|system_mac-address-table|system.replacemsg_automation|log.fortianalyzer_filter|system_network-visibility|firewall_internet-service-ipbl-vendor|switch-controller_nac-settings|firewall_interface-policy|extender_extender-info|system.replacemsg_fortiguard-wf|wireless-controller_bonjour-profile|gtp_apn-shaper|webfilter_urlfilter|wireless-controller_spectral-info|credential-store_domain-controller|hardware.npu.np6_synproxy-stats|system_probe-response|wireless-controller.hotspot20_h2qp-operator-name|switch-controller_sflow|cifs_profile|webfilter_fortiguard|extender_sys-info|wireless-controller.hotspot20_anqp-roaming-consortium|firewall_DoS-policy|firewall_proxy-addrgrp|firewall_addrgrp|system_sflow|router_ripng|firewall_vip6|web-proxy_forward-server|system.replacemsg_spam|certificate_ca|firewall_country|firewall.ssh_local-ca|spamfilter_dnsbl|firewall_access-proxy6|switch-controller_location|firewall.consolidated_policy|router_access-list6|system_session6|hardware.npu.np6_dce|waf_profile|firewall.wildcard-fqdn_group|switch-controller_managed-switch|user_group|log.syslogd2_override-setting|user_krb-keytab|firewall.iprope_list|system_ptp|dpdk_global|application_group|system.replacemsg_ftp|log_threat-weight|extender-controller_extender|wireless-controller.hotspot20_h2qp-conn-capability|router_prefix-list|system_gre-tunnel|system_ike}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# filters: # A list of expressions to filter the returned results.
		# sorters: # A list of expressions to sort the returned results.
		# formatters: # A list of fields to display for returned results.
		# selectors: # A list of selectors. if parameter selector not specified, the module will use selectors.
		# params: # the parameter for each selector, see definition in above list.
$0
endsnippet

snippet fortios_credential_store_domain_controller "Define known domain controller servers in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_credential_store_domain_controller:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# credential_store_domain_controller: # Define known domain controller servers.
$0
endsnippet

snippet fortios_dlp_filepattern "Configure file patterns used by DLP blocking in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_dlp_filepattern:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# dlp_filepattern: # Configure file patterns used by DLP blocking.
$0
endsnippet

snippet fortios_dlp_fp_doc_source "Create a DLP fingerprint database by allowing the FortiGate to access a file server containing files from which to create fingerprints in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_dlp_fp_doc_source:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# dlp_fp_doc_source: # Create a DLP fingerprint database by allowing the FortiGate to access a file server containing files from which to create fingerprints.
$0
endsnippet

snippet fortios_dlp_fp_sensitivity "Create self-explanatory DLP sensitivity levels to be used when setting sensitivity under config fp-doc-source in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_dlp_fp_sensitivity:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# dlp_fp_sensitivity: # Create self-explanatory DLP sensitivity levels to be used when setting sensitivity under config fp-doc-source.
$0
endsnippet

snippet fortios_dlp_sensitivity "Create self-explanatory DLP sensitivity levels to be used when setting sensitivity under config fp-doc-source in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_dlp_sensitivity:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# dlp_sensitivity: # Create self-explanatory DLP sensitivity levels to be used when setting sensitivity under config fp-doc-source.
$0
endsnippet

snippet fortios_dlp_sensor "Configure DLP sensors in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_dlp_sensor:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# dlp_sensor: # Configure DLP sensors.
$0
endsnippet

snippet fortios_dlp_settings "Designate logical storage for DLP fingerprint database in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_dlp_settings:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# dlp_settings: # Designate logical storage for DLP fingerprint database.
$0
endsnippet

snippet fortios_dnsfilter_domain_filter "Configure DNS domain filters in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_dnsfilter_domain_filter:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# dnsfilter_domain_filter: # Configure DNS domain filters.
$0
endsnippet

snippet fortios_dnsfilter_profile "Configure DNS domain filter profiles in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_dnsfilter_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# dnsfilter_profile: # Configure DNS domain filter profiles.
$0
endsnippet

snippet fortios_dpdk_cpus "Configure CPUs enabled to run engines in each DPDK stage in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_dpdk_cpus:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# dpdk_cpus: # Configure CPUs enabled to run engines in each DPDK stage.
$0
endsnippet

snippet fortios_dpdk_global "Configure global DPDK options in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_dpdk_global:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# dpdk_global: # Configure global DPDK options.
$0
endsnippet

snippet fortios_emailfilter_block_allow_list "Configure anti-spam block/allow list in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_emailfilter_block_allow_list:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# emailfilter_block_allow_list: # Configure anti-spam block/allow list.
$0
endsnippet

snippet fortios_emailfilter_bwl "Configure anti-spam black/white list in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_emailfilter_bwl:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# emailfilter_bwl: # Configure anti-spam black/white list.
$0
endsnippet

snippet fortios_emailfilter_bword "Configure AntiSpam banned word list in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_emailfilter_bword:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# emailfilter_bword: # Configure AntiSpam banned word list.
$0
endsnippet

snippet fortios_emailfilter_dnsbl "Configure AntiSpam DNSBL/ORBL in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_emailfilter_dnsbl:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# emailfilter_dnsbl: # Configure AntiSpam DNSBL/ORBL.
$0
endsnippet

snippet fortios_emailfilter_fortishield "Configure FortiGuard - AntiSpam in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_emailfilter_fortishield:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# emailfilter_fortishield: # Configure FortiGuard - AntiSpam.
$0
endsnippet

snippet fortios_emailfilter_iptrust "Configure AntiSpam IP trust in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_emailfilter_iptrust:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# emailfilter_iptrust: # Configure AntiSpam IP trust.
$0
endsnippet

snippet fortios_emailfilter_mheader "Configure AntiSpam MIME header in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_emailfilter_mheader:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# emailfilter_mheader: # Configure AntiSpam MIME header.
$0
endsnippet

snippet fortios_emailfilter_options "Configure AntiSpam options in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_emailfilter_options:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# emailfilter_options: # Configure AntiSpam options.
$0
endsnippet

snippet fortios_emailfilter_profile "Configure Email Filter profiles in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_emailfilter_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# emailfilter_profile: # Configure Email Filter profiles.
$0
endsnippet

snippet fortios_endpoint_control_client "Configure endpoint control client lists in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_endpoint_control_client:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# endpoint_control_client: # Configure endpoint control client lists.
$0
endsnippet

snippet fortios_endpoint_control_fctems "Configure FortiClient Enterprise Management Server (EMS) entries in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_endpoint_control_fctems:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# endpoint_control_fctems: # Configure FortiClient Enterprise Management Server (EMS) entries.
$0
endsnippet

snippet fortios_endpoint_control_forticlient_ems "Configure FortiClient Enterprise Management Server (EMS) entries in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_endpoint_control_forticlient_ems:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# endpoint_control_forticlient_ems: # Configure FortiClient Enterprise Management Server (EMS) entries.
$0
endsnippet

snippet fortios_endpoint_control_forticlient_registration_sync "Configure FortiClient registration synchronization settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_endpoint_control_forticlient_registration_sync:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# endpoint_control_forticlient_registration_sync: # Configure FortiClient registration synchronization settings.
$0
endsnippet

snippet fortios_endpoint_control_profile "Configure FortiClient endpoint control profiles in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_endpoint_control_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# endpoint_control_profile: # Configure FortiClient endpoint control profiles.
$0
endsnippet

snippet fortios_endpoint_control_registered_forticlient "Registered FortiClient list in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_endpoint_control_registered_forticlient:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# endpoint_control_registered_forticlient: # Registered FortiClient list.
$0
endsnippet

snippet fortios_endpoint_control_settings "Configure endpoint control settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_endpoint_control_settings:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# endpoint_control_settings: # Configure endpoint control settings.
$0
endsnippet

snippet fortios_export_config_playbook "Collect the current configurations of the modules and convert then into playbooks." b
- name: $1
	fortios_export_config_playbook:
		selector: ${2:log_gui-display|system_fortiguard-service|router_route-map|system_sso-admin|wireless-controller_address|vpn.ssl_monitor|system.auto-update_status|system_cmdb|authentication_rule|log.fortianalyzer_override-setting|firewall.ssl_setting|vpn.ipsec_phase2-interface|router_key-chain|system_ddns|firewall_traffic-class|system_replacemsg-group|system_ftm-push|system_sms-server|firewall_central-snat-map|firewall_multicast-address6|vpn.status.ssl_hw-acceleration-status|system.replacemsg_sslvpn|ips_view-map|firewall_pfcp|system_pppoe-interface|webfilter_categories|firewall_addrgrp6|log.disk_filter|system.session-info_full-stat|firewall_proxy-address|emailfilter_block-allow-list|router_bgp|switch-controller_custom-command|system_resource-limits|system.replacemsg_auth|system.autoupdate_schedule|waf_sub-class|firewall_local-in-policy6|log.fortianalyzer2_override-setting|log.fortianalyzer_override-filter|system.replacemsg_icap|system_object-tagging|spamfilter_profile|switch-controller_remote-log|system.replacemsg_mms|switch-controller.security-policy_local-access|web-proxy_profile|log.fortianalyzer-cloud_override-filter|spamfilter_mheader|system_smc-ntp|user_adgrp|system_auto-script|switch-controller_quarantine|firewall.service_category|system_standalone-cluster|system_link-monitor|switch-controller_stp-settings|user_security-exempt-list|log.fortianalyzer-cloud_setting|switch-controller.qos_qos-policy|firewall_sniffer|wireless-controller_ssid-policy|wireless-controller_wag-profile|log.fortiguard_override-setting|system.replacemsg_mm7|system.replacemsg_mm4|firewall_internet-service|system.replacemsg_mm3|system.replacemsg_mm1|firewall.iprope.appctrl_status|firewall_vipgrp46|log.webtrends_filter|webfilter_ips-urlfilter-setting6|system_sso-forticloud-admin|gtp_apngrp|log_setting|firewall_address6-template|wireless-controller_scan|wireless-controller.hotspot20_h2qp-wan-metric|system_automation-action|system.autoupdate_tunneling|webfilter_ips-urlfilter-setting|pfcp_message-filter|switch-controller_network-monitor-settings|system_alias|switch-controller_mac-sync-settings|web-proxy_forward-server-group|system_session-helper|router_community-list|wireless-controller_qos-profile|firewall_dnstranslation|vpn.ssl.web_portal|system_vdom-property|system.replacemsg_device-detection-portal|log.syslogd2_setting|firewall_internet-service-custom-group|system.performance.firewall_statistics|firewall_profile-group|firewall.service_group|system.autoupdate_push-update|firewall_address6|endpoint-control_profile|wireless-controller_vap-status|wireless-controller_wids-profile|emailfilter_bword|log.fortiguard_filter|firewall_ipv6-eh-filter|switch-controller.ptp_settings|endpoint-control_fctems|user_device-category|firewall_identity-based-route|system.session-helper-info_list|system_console|firewall.iprope.appctrl_list|system_ntp|firewall_access-proxy-virtual-host|system_nat64|report_layout|wireless-controller_timers|wireless-controller.hotspot20_icon|log.memory_global-setting|router_multicast-flow|ssh-filter_profile|system_fortisandbox|system_dns64|system_virtual-wan-link|ips_sensor|firewall.wildcard-fqdn_custom|router_static|alertemail_setting|user_fortitoken|web-proxy_debug-url|vpn.ike_gateway|webfilter_override|switch-controller_nac-device|system_fsso-polling|user_peer|vpn.ssl.web_host-check-software|gtp_message-filter-v0v1|switch-controller_lldp-profile|switch-controller_dynamic-port-policy|system.replacemsg_nac-quar|system_stp|user_nac-policy|wireless-controller_snmp|emailfilter_fortishield|switch-controller.security-policy_captive-portal|firewall_shaping-policy|wireless-controller_wlchanlistlic|log_custom-field|switch-controller_mac-policy|firewall_address|certificate_crl|firewall.ssh_setting|vpn.ssl.web_realm|switch-controller.auto-config_policy|router_access-list|system_nd-proxy|log.memory_setting|system_alarm|system_ipv6-neighbor-cache|wireless-controller_log|extender_lte-carrier-by-mcc-mnc|webfilter_ftgd-statistics|hardware.npu.np6_ipsec-stats|firewall_vendor-mac-summary|system_cluster-sync|wanopt_settings|emailfilter_dnsbl|endpoint-control_registered-forticlient|system_dedicated-mgmt|file-filter_profile|log.fortianalyzer-cloud_override-setting|firewall_policy46|system.source-ip_status|system_modem|router_static6|firewall_decrypted-traffic-mirror|antivirus_settings|switch-controller_storm-control-policy|switch-controller_802-1X-settings|system_session-ttl|system_storage|system_isf-queue-profile|log.memory_filter|firewall_auth-portal|antivirus_notification|user_ldap|ips_global|wanopt_remote-storage|system_speed-test-schedule|wireless-controller.hotspot20_qos-map|system.session-info_ttl|vpn_l2tp|monitoring_np6-ipsec-engine|system_npu|firewall_vip46|authentication_setting|vpn.certificate_ocsp-server|antivirus_heuristic|spamfilter_bword|system_custom-language|web-proxy_explicit|log.syslogd3_override-setting|wireless-controller_wtp-group|system_vdom-sflow|switch-controller_igmp-snooping|waf_signature|log.null-device_setting|ips_rule-settings|log.syslogd_setting|system.session-info_expectation|switch-controller.security-policy_802-1X|system_np6|report_setting|gtp_tunnel-limit|user_setting|icap_profile|system_geoip-override|vpn.ipsec_phase1|vpn.ipsec_phase2|wireless-controller.hotspot20_anqp-network-auth-type|webfilter_ips-urlfilter-cache-setting|firewall.ipmacbinding_setting|log.fortianalyzer2_filter|system.ip-conflict_status|application_rule-settings|switch-controller_flow-tracking|log.syslogd4_filter|system_speed-test-server|firewall_acl|system_proxy-arp|webfilter_ftgd-local-rating|switch-controller_snmp-user|nsxt_setting|ips_custom|switch-controller_switch-interface-tag|router_policy6|switch-controller.qos_ip-dscp-map|log_eventfilter|firewall_internet-service-custom|switch-controller_traffic-sniffer|router_auth-path|firewall_internet-service-ipbl-reason|system_external-resource|firewall_security-policy|user_exchange|sctp-filter_profile|system_ips-urlfilter-dns6|vpn.ipsec.tunnel_details|report_style|log.syslogd2_override-filter|wireless-controller_wtp|wireless-controller_rf-analysis|system_ipip-tunnel|system_saml|system.dhcp6_server|emailfilter_profile|hardware.npu.np6_sse-stats|log.fortianalyzer3_override-filter|hardware_status|firewall_multicast-policy|vpn_ocvpn|spamfilter_bwl|switch-controller_fortilink-settings|firewall_proute6|system_arp|firewall_internet-service-addition|webfilter_status|system_ips|emailfilter_bwl|system_password-policy|wireless-controller_mpsk-profile|switch-controller_virtual-port-pool|wireless-controller_setting|system.3g-modem_custom|wireless-controller.hotspot20_anqp-ip-address-type|firewall_vipgrp|switch-controller_switch-profile|vpn.ipsec.stats_tunnel|system_switch-interface|router_isis|firewall_policy|log.syslogd_override-setting|system_lte-modem|firewall_access-proxy|router_info|system.performance.firewall_packet-distribution|webfilter_content|firewall_vipgrp6|emailfilter_mheader|firewall.shaper_traffic|firewall.schedule_onetime|antivirus_profile|gtp_ie-allow-list|log.fortianalyzer_setting|videofilter_youtube-key|vpn.ipsec.tunnel_name|firewall_ippool6|wireless-controller_status|system_central-management|system.replacemsg_http|vpn.status.ssl_list|vpn.ipsec.tunnel_summary|hardware.npu.np6_session-stats|cifs_domain-controller|system_zone|system_vdom-dns|firewall_multicast-address|wireless-controller_wtp-profile|vpn.ssl_settings|router_ospf|switch-controller.qos_queue-policy|dpdk_cpus|endpoint-control_forticlient-ems|ftp-proxy_explicit|hardware.npu.np6_port-list|user_device-group|vpn.certificate_crl|system.replacemsg_admin|wireless-controller_wtp-status|webfilter_profile|switch-controller_storm-control|firewall_ssl-ssh-profile|vpn.ssl_client|gtp_ie-white-list|firewall_city|user_certificate|log.disk_setting|nsxt_service-chain|dlp_filepattern|firewall_acl6|firewall_ippool|web-proxy_url-match|dlp_fp-sensitivity|system_interface|log.syslogd3_override-filter|router_bfd|system_fortimanager|firewall_internet-service-extension|system.replacemsg_webproxy|user_password-policy|wireless-controller_inter-controller|certificate_remote|log.syslogd4_setting|firewall_internet-service-owner|hardware_cpu|switch-controller_switch-group|user_fsso|firewall_vipgrp64|user_quarantine|system_ips-urlfilter-dns|wireless-controller_addrgrp|system_fm|wireless-controller_apcfg-profile|system_global|vpn.ipsec.stats_crypto|wireless-controller.hotspot20_anqp-nai-realm|hardware_memory|system_physical-switch|system_affinity-packet-redistribution|system_status|firewall_gtp|firewall_internet-service-reputation|firewall_proute|videofilter_profile|log.fortianalyzer3_setting|system.auto-update_versions|firewall_vip|system_virtual-switch|firewall_mms-profile|wanopt_auth-group|wanopt_webcache|system.snmp_user|firewall_ip-translation|system_settings|log.fortianalyzer2_setting|wireless-controller_vap|ipsec_tunnel|wanopt_cache-service|log.syslogd4_override-filter|switch-controller_switch-log|firewall_internet-service-group|system.replacemsg_mail|extender_modem-status|system_replacemsg-image|system.performance_status|system_acme|antivirus_quarantine|switch-controller.initial-config_template|log.fortianalyzer2_override-filter|system.session-info_list|vpn.certificate_ca|endpoint-control_forticlient-registration-sync|system_sdn-connector|vpn.ssl.web_user-group-bookmark|system_fortiguard-log-service|endpoint-control_settings|system_central-mgmt|hardware_nic|log.null-device_filter|gtp_message-filter-v2|dlp_settings|wireless-controller_utm-profile|router_rip|router_aspath-list|firewall.schedule_group|firewall_internet-service-list|system_dscp-based-priority|dlp_sensitivity|icap_server|vpn.ipsec_phase1-interface|authentication_scheme|router_prefix-list6|system_sdwan|log.fortianalyzer3_filter|system_email-server|dlp_sensor|application_list|firewall_internet-service-append|vpn.ssl.web_user-bookmark|firewall.shaper_traffic-shaper|system_management-tunnel|system_csf|firewall.shaper_per-ip-shaper|switch-controller.ptp_policy|switch-controller_stp-instance|mgmt-data_status|dnsfilter_profile|user_device-access-list|system_ha-monitor|monitoring_npu-hpe|wireless-controller.hotspot20_anqp-venue-name|system.snmp_sysinfo|system_fortiai|system_session|application_custom|ips_session|system_api-user|system.info.admin_ssh|ips_rule|spamfilter_fortishield|log.fortianalyzer-cloud_filter|system_netflow|vpn.ipsec_forticlient|system_automation-trigger|firewall_policy64|wireless-controller.hotspot20_h2qp-osu-provider|application_name|wireless-controller_access-control-list|firewall.service_custom|spamfilter_iptrust|firewall_internet-service-botnet|firewall_internet-service-definition|gtp_rat-timeout-profile|system_mobile-tunnel|wireless-controller_nac-profile|user_saml|firewall_ttl-policy|wireless-controller_client-info|system_vne-tunnel|system.replacemsg_utm|gtp_apn|vpn_pptp|wireless-controller.hotspot20_hs-profile|log.webtrends_setting|firewall_local-in-policy|extender-controller_dataplan|system_gi-gk|wireless-controller_region|router_policy|switch-controller_port-policy|switch-controller.qos_dot1p-map|firewall_multicast-policy6|switch-controller.initial-config_vlans|system_federated-upgrade|wanopt_content-delivery-network-rule|firewall_region|system_dns-database|waf_main-class|firewall_policy6|system_vdom-radius-server|system_vdom|user_tacacs+|wanopt_peer|log.syslogd3_setting|report_dataset|webfilter_ftgd-local-cat|router_multicast6|vpn.certificate_remote|extender_lte-carrier-list|system_fips-cc|switch-controller_snmp-community|system_geneve|system_ha|log.syslogd3_filter|user_radius|firewall_DoS-policy6|switch-controller.auto-config_default|system_tos-based-priority|vpn.certificate_local|system_accprofile|vpn.status_pptp|wireless-controller_global|log.syslogd_filter|vpn.status_l2tp|system_ipsec-aggregate|wireless-controller_ap-status|switch-controller_poe|log.syslogd2_filter|wireless-controller_ble-profile|system_password-policy-guest-admin|user_pop3|switch-controller_vlan-policy|system_geoip-country|switch-controller_system|videofilter_youtube-channel-filter|voip_profile|vpn.ipsec_manualkey-interface|emailfilter_options|system.info.admin_status|switch-controller_snmp-sysinfo|firewall_internet-service-sld|system_vdom-netflow|firewall.ipmacbinding_table|system_automation-destination|dlp_fp-doc-source|firewall_ldb-monitor|firewall.ssh_host-key|system_vdom-link|system_admin|system_fortianalyzer-connectivity|router_ospf6|user_device|log.fortiguard_setting|system.snmp_community|wireless-controller_arrp-profile|ips_settings|log.syslogd_override-filter|system_vdom-exception|system_wccp|antivirus_mms-checksum|router_info6|system_ha-nonsync-csum|system_automation-stitch|system_mem-mgr|firewall_profile-protocol-options|report_theme|firewall.ssh_local-key|system_mgmt-csum|system.performance_top|firewall_vip64|web-proxy_wisp|spamfilter_options|system.checksum_status|system_dns-server|system.replacemsg_alertmail|log.fortiguard_override-filter|endpoint-control_client|firewall_access-proxy-ssh-client-cert|system_fortiguard|web-proxy_global|wanopt_profile|switch-controller_traffic-policy|wireless-controller.hotspot20_anqp-3gpp-cellular|system.replacemsg_ec|switch-controller_vlan|system_vxlan|switch-controller_snmp-trap-threshold|webfilter_search-engine|system_ipv6-tunnel|certificate_local|system.lldp_network-policy|user_fsso-polling|system.dhcp_server|report_chart|vpn.certificate_setting|router_bfd6|system.replacemsg_nntp|system.session-info_statistics|firewall_proxy-policy|system_dns|user_peergrp|vpn.ipsec_concentrator|webfilter_override-usr|ips_decoder|dnsfilter_domain-filter|report.sql_status|switch-controller.auto-config_custom|wireless-controller_vap-group|emailfilter_iptrust|system_startup-error-log|firewall_internet-service-name|system_affinity-interrupt|firewall_shaping-profile|log.syslogd4_override-setting|firewall_interface-policy6|vpn.ipsec_manualkey|firewall.shaper_per-ip|firewall_vendor-mac|switch-controller_global|router_setting|user_local|firewall.schedule_recurring|system_sit-tunnel|system_arp-table|firewall_carrier-endpoint-bwl|switch-controller_lldp-settings|webfilter_content-header|system_auto-install|log.fortianalyzer3_override-setting|user_domain-controller|router_multicast|firewall_ssl-server|system.replacemsg_traffic-quota|system_virtual-wire-pair|system_mac-address-table|system.replacemsg_automation|log.fortianalyzer_filter|system_network-visibility|firewall_internet-service-ipbl-vendor|switch-controller_nac-settings|firewall_interface-policy|extender_extender-info|system.replacemsg_fortiguard-wf|wireless-controller_bonjour-profile|gtp_apn-shaper|webfilter_urlfilter|wireless-controller_spectral-info|credential-store_domain-controller|hardware.npu.np6_synproxy-stats|system_probe-response|wireless-controller.hotspot20_h2qp-operator-name|switch-controller_sflow|cifs_profile|webfilter_fortiguard|extender_sys-info|wireless-controller.hotspot20_anqp-roaming-consortium|firewall_DoS-policy|firewall_proxy-addrgrp|firewall_addrgrp|system_sflow|router_ripng|firewall_vip6|web-proxy_forward-server|system.replacemsg_spam|certificate_ca|firewall_country|firewall.ssh_local-ca|spamfilter_dnsbl|firewall_access-proxy6|switch-controller_location|firewall.consolidated_policy|router_access-list6|system_session6|hardware.npu.np6_dce|waf_profile|firewall.wildcard-fqdn_group|switch-controller_managed-switch|user_group|log.syslogd2_override-setting|user_krb-keytab|firewall.iprope_list|system_ptp|dpdk_global|application_group|system.replacemsg_ftp|log_threat-weight|extender-controller_extender|wireless-controller.hotspot20_h2qp-conn-capability|router_prefix-list|system_gre-tunnel|system_ike}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# filters: # A list of expressions to filter the returned results.
		# sorters: # A list of expressions to sort the returned results.
		# formatters: # A list of fields to display for returned results.
		# selectors: # A list of selectors. the module will use selectors if parameter selector not specified.
		# params: # the parameter for each selector, see definition in above list.
$0
endsnippet

snippet fortios_extender_controller_dataplan "FortiExtender dataplan configuration in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_extender_controller_dataplan:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# extender_controller_dataplan: # FortiExtender dataplan configuration.
$0
endsnippet

snippet fortios_extender_controller_extender "Extender controller configuration in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_extender_controller_extender:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# extender_controller_extender: # Extender controller configuration.
$0
endsnippet

snippet fortios_extender_extender_info "Display extender struct information in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_extender_extender_info:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# extender_extender_info: # Display extender struct information.
$0
endsnippet

snippet fortios_extender_lte_carrier_by_mcc_mnc "Display extender modem carrier based on MCC and MNC in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_extender_lte_carrier_by_mcc_mnc:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# extender_lte_carrier_by_mcc_mnc: # Display extender modem carrier based on MCC and MNC.
$0
endsnippet

snippet fortios_extender_lte_carrier_list "Display extender modem carrier list in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_extender_lte_carrier_list:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# extender_lte_carrier_list: # Display extender modem carrier list.
$0
endsnippet

snippet fortios_extender_modem_status "Display detailed extender modem status in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_extender_modem_status:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# extender_modem_status: # Display detailed extender modem status.
$0
endsnippet

snippet fortios_extender_sys_info "Display detailed extender system information in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_extender_sys_info:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# extender_sys_info: # Display detailed extender system information.
$0
endsnippet

snippet fortios_file_filter_profile "Configure file-filter profiles in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_file_filter_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# file_filter_profile: # Configure file-filter profiles.
$0
endsnippet

snippet fortios_firewall_access_proxy "Configure Access Proxy in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_access_proxy:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_access_proxy: # Configure Access Proxy.
$0
endsnippet

snippet fortios_firewall_access_proxy6 "Configure IPv6 access proxy in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_access_proxy6:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_access_proxy6: # Configure IPv6 access proxy.
$0
endsnippet

snippet fortios_firewall_access_proxy_ssh_client_cert "Configure Access Proxy SSH client certificate in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_access_proxy_ssh_client_cert:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_access_proxy_ssh_client_cert: # Configure Access Proxy SSH client certificate.
$0
endsnippet

snippet fortios_firewall_access_proxy_virtual_host "Configure Access Proxy virtual hosts in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_access_proxy_virtual_host:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_access_proxy_virtual_host: # Configure Access Proxy virtual hosts.
$0
endsnippet

snippet fortios_firewall_acl "Configure IPv4 access control list in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_acl:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_acl: # Configure IPv4 access control list.
$0
endsnippet

snippet fortios_firewall_acl6 "Configure IPv6 access control list in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_acl6:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_acl6: # Configure IPv6 access control list.
$0
endsnippet

snippet fortios_firewall_address "Configure IPv4 addresses in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_address:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_address: # Configure IPv4 addresses.
$0
endsnippet

snippet fortios_firewall_address6 "Configure IPv6 firewall addresses in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_address6:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_address6: # Configure IPv6 firewall addresses.
$0
endsnippet

snippet fortios_firewall_address6_template "Configure IPv6 address templates in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_address6_template:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_address6_template: # Configure IPv6 address templates.
$0
endsnippet

snippet fortios_firewall_addrgrp "Configure IPv4 address groups in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_addrgrp:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_addrgrp: # Configure IPv4 address groups.
$0
endsnippet

snippet fortios_firewall_addrgrp6 "Configure IPv6 address groups in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_addrgrp6:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_addrgrp6: # Configure IPv6 address groups.
$0
endsnippet

snippet fortios_firewall_auth_portal "Configure firewall authentication portals in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_auth_portal:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_auth_portal: # Configure firewall authentication portals.
$0
endsnippet

snippet fortios_firewall_carrier_endpoint_bwl "Carrier end point black/white list tables in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_carrier_endpoint_bwl:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_carrier_endpoint_bwl: # Carrier end point black/white list tables.
$0
endsnippet

snippet fortios_firewall_central_snat_map "Configure central SNAT policies in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_central_snat_map:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# action: move
		# self: # mkey of self identifier
		# after: # mkey of target identifier
		# before: # mkey of target identifier
		# firewall_central_snat_map: # Configure central SNAT policies.
$0
endsnippet

snippet fortios_firewall_city "Define city table in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_city:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_city: # Define city table.
$0
endsnippet

snippet fortios_firewall_consolidated_policy "Configure consolidated IPv4/IPv6 policies in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_consolidated_policy:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_consolidated_policy: # Configure consolidated IPv4/IPv6 policies.
$0
endsnippet

snippet fortios_firewall_country "Define country table in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_country:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_country: # Define country table.
$0
endsnippet

snippet fortios_firewall_decrypted_traffic_mirror "Configure decrypted traffic mirror in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_decrypted_traffic_mirror:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_decrypted_traffic_mirror: # Configure decrypted traffic mirror.
$0
endsnippet

snippet fortios_firewall_dnstranslation "Configure DNS translation in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_dnstranslation:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_dnstranslation: # Configure DNS translation.
$0
endsnippet

snippet fortios_firewall_dos_policy "Configure IPv4 DoS policies in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_dos_policy:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_dos_policy: # Configure IPv4 DoS policies.
$0
endsnippet

snippet fortios_firewall_dos_policy6 "Configure IPv6 DoS policies in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_dos_policy6:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_dos_policy6: # Configure IPv6 DoS policies.
$0
endsnippet

snippet fortios_firewall_gtp "Configure GTP in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_gtp:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_gtp: # Configure GTP.
$0
endsnippet

snippet fortios_firewall_identity_based_route "Configure identity based routing in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_identity_based_route:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_identity_based_route: # Configure identity based routing.
$0
endsnippet

snippet fortios_firewall_interface_policy "Configure IPv4 interface policies in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_interface_policy:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_interface_policy: # Configure IPv4 interface policies.
$0
endsnippet

snippet fortios_firewall_interface_policy6 "Configure IPv6 interface policies in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_interface_policy6:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_interface_policy6: # Configure IPv6 interface policies.
$0
endsnippet

snippet fortios_firewall_internet_service "Show Internet Service application in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_internet_service:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_internet_service: # Show Internet Service application.
$0
endsnippet

snippet fortios_firewall_internet_service_addition "Configure Internet Services Addition in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_internet_service_addition:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_internet_service_addition: # Configure Internet Services Addition.
$0
endsnippet

snippet fortios_firewall_internet_service_append "Configure additional port mappings for Internet Services in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_internet_service_append:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_internet_service_append: # Configure additional port mappings for Internet Services.
$0
endsnippet

snippet fortios_firewall_internet_service_botnet "Show Internet Service botnet in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_internet_service_botnet:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_internet_service_botnet: # Show Internet Service botnet.
$0
endsnippet

snippet fortios_firewall_internet_service_custom "Configure custom Internet Services in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_internet_service_custom:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_internet_service_custom: # Configure custom Internet Services.
$0
endsnippet

snippet fortios_firewall_internet_service_custom_group "Configure custom Internet Service group in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_internet_service_custom_group:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_internet_service_custom_group: # Configure custom Internet Service group.
$0
endsnippet

snippet fortios_firewall_internet_service_definition "Configure Internet Service definition in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_internet_service_definition:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_internet_service_definition: # Configure Internet Service definition.
$0
endsnippet

snippet fortios_firewall_internet_service_extension "Configure Internet Services Extension in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_internet_service_extension:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_internet_service_extension: # Configure Internet Services Extension.
$0
endsnippet

snippet fortios_firewall_internet_service_group "Configure group of Internet Service in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_internet_service_group:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_internet_service_group: # Configure group of Internet Service.
$0
endsnippet

snippet fortios_firewall_internet_service_ipbl_reason "IP blacklist reason in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_internet_service_ipbl_reason:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_internet_service_ipbl_reason: # IP blacklist reason.
$0
endsnippet

snippet fortios_firewall_internet_service_ipbl_vendor "IP blacklist vendor in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_internet_service_ipbl_vendor:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_internet_service_ipbl_vendor: # IP blacklist vendor.
$0
endsnippet

snippet fortios_firewall_internet_service_list "Internet Service list in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_internet_service_list:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_internet_service_list: # Internet Service list.
$0
endsnippet

snippet fortios_firewall_internet_service_name "Define internet service names in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_internet_service_name:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_internet_service_name: # Define internet service names.
$0
endsnippet

snippet fortios_firewall_internet_service_owner "Internet Service owner in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_internet_service_owner:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_internet_service_owner: # Internet Service owner.
$0
endsnippet

snippet fortios_firewall_internet_service_reputation "Show Internet Service reputation in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_internet_service_reputation:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_internet_service_reputation: # Show Internet Service reputation.
$0
endsnippet

snippet fortios_firewall_internet_service_sld "Internet Service Second Level Domain in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_internet_service_sld:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_internet_service_sld: # Internet Service Second Level Domain.
$0
endsnippet

snippet fortios_firewall_ip_translation "Configure firewall IP-translation in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_ip_translation:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_ip_translation: # Configure firewall IP-translation.
$0
endsnippet

snippet fortios_firewall_ipmacbinding_setting "Configure IP to MAC binding settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_ipmacbinding_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_ipmacbinding_setting: # Configure IP to MAC binding settings.
$0
endsnippet

snippet fortios_firewall_ipmacbinding_table "Configure IP to MAC address pairs in the IP/MAC binding table in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_ipmacbinding_table:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_ipmacbinding_table: # Configure IP to MAC address pairs in the IP/MAC binding table.
$0
endsnippet

snippet fortios_firewall_ippool "Configure IPv4 IP pools in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_ippool:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_ippool: # Configure IPv4 IP pools.
$0
endsnippet

snippet fortios_firewall_ippool6 "Configure IPv6 IP pools in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_ippool6:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_ippool6: # Configure IPv6 IP pools.
$0
endsnippet

snippet fortios_firewall_iprope_list "lis in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_iprope_list:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_iprope_list: # list
$0
endsnippet

snippet fortios_firewall_ipv6_eh_filter "Configure IPv6 extension header filter in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_ipv6_eh_filter:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_ipv6_eh_filter: # Configure IPv6 extension header filter.
$0
endsnippet

snippet fortios_firewall_ldb_monitor "Configure server load balancing health monitors in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_ldb_monitor:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_ldb_monitor: # Configure server load balancing health monitors.
$0
endsnippet

snippet fortios_firewall_local_in_policy "Configure user defined IPv4 local-in policies in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_local_in_policy:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_local_in_policy: # Configure user defined IPv4 local-in policies.
$0
endsnippet

snippet fortios_firewall_local_in_policy6 "Configure user defined IPv6 local-in policies in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_local_in_policy6:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_local_in_policy6: # Configure user defined IPv6 local-in policies.
$0
endsnippet

snippet fortios_firewall_mms_profile "Configure MMS profiles in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_mms_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_mms_profile: # Configure MMS profiles.
$0
endsnippet

snippet fortios_firewall_multicast_address "Configure multicast addresses in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_multicast_address:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_multicast_address: # Configure multicast addresses.
$0
endsnippet

snippet fortios_firewall_multicast_address6 "Configure IPv6 multicast address in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_multicast_address6:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_multicast_address6: # Configure IPv6 multicast address.
$0
endsnippet

snippet fortios_firewall_multicast_policy "Configure multicast NAT policies in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_multicast_policy:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_multicast_policy: # Configure multicast NAT policies.
$0
endsnippet

snippet fortios_firewall_multicast_policy6 "Configure IPv6 multicast NAT policies in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_multicast_policy6:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_multicast_policy6: # Configure IPv6 multicast NAT policies.
$0
endsnippet

snippet fortios_firewall_pfcp "Configure PFCP in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_pfcp:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_pfcp: # Configure PFCP.
$0
endsnippet

snippet fortios_firewall_policy "Configure IPv4 policies in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_policy:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# action: move
		# self: # mkey of self identifier
		# after: # mkey of target identifier
		# before: # mkey of target identifier
		# firewall_policy: # Configure IPv4 policies.
$0
endsnippet

snippet fortios_firewall_policy46 "Configure IPv4 to IPv6 policies in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_policy46:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_policy46: # Configure IPv4 to IPv6 policies.
$0
endsnippet

snippet fortios_firewall_policy6 "Configure IPv6 policies in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_policy6:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_policy6: # Configure IPv6 policies.
$0
endsnippet

snippet fortios_firewall_policy64 "Configure IPv6 to IPv4 policies in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_policy64:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_policy64: # Configure IPv6 to IPv4 policies.
$0
endsnippet

snippet fortios_firewall_profile_group "Configure profile groups in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_profile_group:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_profile_group: # Configure profile groups.
$0
endsnippet

snippet fortios_firewall_profile_protocol_options "Configure protocol options in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_profile_protocol_options:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_profile_protocol_options: # Configure protocol options.
$0
endsnippet

snippet fortios_firewall_proute "List policy routing in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_proute:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_proute: # List policy routing.
$0
endsnippet

snippet fortios_firewall_proxy_address "Web proxy address configuration in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_proxy_address:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_proxy_address: # Web proxy address configuration.
$0
endsnippet

snippet fortios_firewall_proxy_addrgrp "Web proxy address group configuration in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_proxy_addrgrp:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_proxy_addrgrp: # Web proxy address group configuration.
$0
endsnippet

snippet fortios_firewall_proxy_policy "Configure proxy policies in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_proxy_policy:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_proxy_policy: # Configure proxy policies.
$0
endsnippet

snippet fortios_firewall_region "Define region table in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_region:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_region: # Define region table.
$0
endsnippet

snippet fortios_firewall_schedule_group "Schedule group configuration in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_schedule_group:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_schedule_group: # Schedule group configuration.
$0
endsnippet

snippet fortios_firewall_schedule_onetime "Onetime schedule configuration in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_schedule_onetime:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_schedule_onetime: # Onetime schedule configuration.
$0
endsnippet

snippet fortios_firewall_schedule_recurring "Recurring schedule configuration in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_schedule_recurring:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_schedule_recurring: # Recurring schedule configuration.
$0
endsnippet

snippet fortios_firewall_security_policy "Configure NGFW IPv4/IPv6 application policies in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_security_policy:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_security_policy: # Configure NGFW IPv4/IPv6 application policies.
$0
endsnippet

snippet fortios_firewall_service_category "Configure service categories in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_service_category:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_service_category: # Configure service categories.
$0
endsnippet

snippet fortios_firewall_service_custom "Configure custom services in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_service_custom:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_service_custom: # Configure custom services.
$0
endsnippet

snippet fortios_firewall_service_group "Configure service groups in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_service_group:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_service_group: # Configure service groups.
$0
endsnippet

snippet fortios_firewall_shaper_per_ip_shaper "Configure per-IP traffic shaper in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_shaper_per_ip_shaper:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_shaper_per_ip_shaper: # Configure per-IP traffic shaper.
$0
endsnippet

snippet fortios_firewall_shaper_traffic_shaper "Configure shared traffic shaper in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_shaper_traffic_shaper:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_shaper_traffic_shaper: # Configure shared traffic shaper.
$0
endsnippet

snippet fortios_firewall_shaping_policy "Configure shaping policies in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_shaping_policy:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_shaping_policy: # Configure shaping policies.
$0
endsnippet

snippet fortios_firewall_shaping_profile "Configure shaping profiles in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_shaping_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_shaping_profile: # Configure shaping profiles.
$0
endsnippet

snippet fortios_firewall_sniffer "Configure sniffer in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_sniffer:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_sniffer: # Configure sniffer.
$0
endsnippet

snippet fortios_firewall_ssh_host_key "SSH proxy host public keys in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_ssh_host_key:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_ssh_host_key: # SSH proxy host public keys.
$0
endsnippet

snippet fortios_firewall_ssh_local_ca "SSH proxy local CA in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_ssh_local_ca:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_ssh_local_ca: # SSH proxy local CA.
$0
endsnippet

snippet fortios_firewall_ssh_local_key "SSH proxy local keys in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_ssh_local_key:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_ssh_local_key: # SSH proxy local keys.
$0
endsnippet

snippet fortios_firewall_ssh_setting "SSH proxy settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_ssh_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_ssh_setting: # SSH proxy settings.
$0
endsnippet

snippet fortios_firewall_ssl_server "Configure SSL servers in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_ssl_server:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_ssl_server: # Configure SSL servers.
$0
endsnippet

snippet fortios_firewall_ssl_setting "SSL proxy settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_ssl_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_ssl_setting: # SSL proxy settings.
$0
endsnippet

snippet fortios_firewall_ssl_ssh_profile "Configure SSL/SSH protocol options in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_ssl_ssh_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_ssl_ssh_profile: # Configure SSL/SSH protocol options.
$0
endsnippet

snippet fortios_firewall_traffic_class "Configure names for shaping classes in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_traffic_class:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_traffic_class: # Configure names for shaping classes.
$0
endsnippet

snippet fortios_firewall_ttl_policy "Configure TTL policies in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_ttl_policy:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_ttl_policy: # Configure TTL policies.
$0
endsnippet

snippet fortios_firewall_vendor_mac "Show vendor and the MAC address they have in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_vendor_mac:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_vendor_mac: # Show vendor and the MAC address they have.
$0
endsnippet

snippet fortios_firewall_vip "Configure virtual IP for IPv4 in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_vip:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_vip: # Configure virtual IP for IPv4.
$0
endsnippet

snippet fortios_firewall_vip46 "Configure IPv4 to IPv6 virtual IPs in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_vip46:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_vip46: # Configure IPv4 to IPv6 virtual IPs.
$0
endsnippet

snippet fortios_firewall_vip6 "Configure virtual IP for IPv6 in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_vip6:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_vip6: # Configure virtual IP for IPv6.
$0
endsnippet

snippet fortios_firewall_vip64 "Configure IPv6 to IPv4 virtual IPs in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_vip64:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_vip64: # Configure IPv6 to IPv4 virtual IPs.
$0
endsnippet

snippet fortios_firewall_vipgrp "Configure IPv4 virtual IP groups in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_vipgrp:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_vipgrp: # Configure IPv4 virtual IP groups.
$0
endsnippet

snippet fortios_firewall_vipgrp46 "Configure IPv4 to IPv6 virtual IP groups in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_vipgrp46:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_vipgrp46: # Configure IPv4 to IPv6 virtual IP groups.
$0
endsnippet

snippet fortios_firewall_vipgrp6 "Configure IPv6 virtual IP groups in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_vipgrp6:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_vipgrp6: # Configure IPv6 virtual IP groups.
$0
endsnippet

snippet fortios_firewall_vipgrp64 "Configure IPv6 to IPv4 virtual IP groups in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_vipgrp64:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_vipgrp64: # Configure IPv6 to IPv4 virtual IP groups.
$0
endsnippet

snippet fortios_firewall_wildcard_fqdn_custom "Config global/VDOM Wildcard FQDN address in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_wildcard_fqdn_custom:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_wildcard_fqdn_custom: # Config global/VDOM Wildcard FQDN address.
$0
endsnippet

snippet fortios_firewall_wildcard_fqdn_group "Config global Wildcard FQDN address groups in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_firewall_wildcard_fqdn_group:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# firewall_wildcard_fqdn_group: # Config global Wildcard FQDN address groups.
$0
endsnippet

snippet fortios_ftp_proxy_explicit "Configure explicit FTP proxy settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_ftp_proxy_explicit:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# ftp_proxy_explicit: # Configure explicit FTP proxy settings.
$0
endsnippet

snippet fortios_gtp_apn "Configure APN for GTP in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_gtp_apn:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# gtp_apn: # Configure APN for GTP.
$0
endsnippet

snippet fortios_gtp_apn_shaper "Global per-APN shaper in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_gtp_apn_shaper:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# gtp_apn_shaper: # Global per-APN shaper.
$0
endsnippet

snippet fortios_gtp_apngrp "Configure APN groups for GTP in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_gtp_apngrp:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# gtp_apngrp: # Configure APN groups for GTP.
$0
endsnippet

snippet fortios_gtp_ie_allow_list "IE allow list in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_gtp_ie_allow_list:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# gtp_ie_allow_list: # IE allow list.
$0
endsnippet

snippet fortios_gtp_ie_white_list "IE white list in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_gtp_ie_white_list:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# gtp_ie_white_list: # IE white list.
$0
endsnippet

snippet fortios_gtp_message_filter_v0v1 "Message filter for GTPv0/v1 messages in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_gtp_message_filter_v0v1:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# gtp_message_filter_v0v1: # Message filter for GTPv0/v1 messages.
$0
endsnippet

snippet fortios_gtp_message_filter_v2 "Message filter for GTPv2 messages in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_gtp_message_filter_v2:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# gtp_message_filter_v2: # Message filter for GTPv2 messages.
$0
endsnippet

snippet fortios_gtp_rat_timeout_profile "RAT timeout profil in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_gtp_rat_timeout_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# gtp_rat_timeout_profile: # RAT timeout profile
$0
endsnippet

snippet fortios_gtp_tunnel_limit "GTP tunnel limiter in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_gtp_tunnel_limit:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# gtp_tunnel_limit: # GTP tunnel limiter.
$0
endsnippet

snippet fortios_hardware_nic "Display NIC information in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_hardware_nic:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# hardware_nic: # Display NIC information.
$0
endsnippet

snippet fortios_hardware_npu_np6_dce "Show NP6 non-zero subengine drop counters in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_hardware_npu_np6_dce:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# hardware_npu_np6_dce: # Show NP6 non-zero subengine drop counters.
$0
endsnippet

snippet fortios_hardware_npu_np6_session_stats "Show NP6 session offloading statistics counters in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_hardware_npu_np6_session_stats:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# hardware_npu_np6_session_stats: # Show NP6 session offloading statistics counters.
$0
endsnippet

snippet fortios_hardware_npu_np6_sse_stats "Show NP6 hardware session statistics counters in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_hardware_npu_np6_sse_stats:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# hardware_npu_np6_sse_stats: # Show NP6 hardware session statistics counters.
$0
endsnippet

snippet fortios_icap_profile "Configure ICAP profiles in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_icap_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# icap_profile: # Configure ICAP profiles.
$0
endsnippet

snippet fortios_icap_server "Configure ICAP servers in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_icap_server:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# icap_server: # Configure ICAP servers.
$0
endsnippet

snippet fortios_ips_custom "Configure IPS custom signature in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_ips_custom:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# ips_custom: # Configure IPS custom signature.
$0
endsnippet

snippet fortios_ips_decoder "Configure IPS decoder in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_ips_decoder:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# ips_decoder: # Configure IPS decoder.
$0
endsnippet

snippet fortios_ips_global "Configure IPS global parameter in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_ips_global:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# ips_global: # Configure IPS global parameter.
$0
endsnippet

snippet fortios_ips_rule "Configure IPS rules in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_ips_rule:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# ips_rule: # Configure IPS rules.
$0
endsnippet

snippet fortios_ips_rule_settings "Configure IPS rule setting in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_ips_rule_settings:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# ips_rule_settings: # Configure IPS rule setting.
$0
endsnippet

snippet fortios_ips_sensor "Configure IPS sensor in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_ips_sensor:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# ips_sensor: # Configure IPS sensor.
$0
endsnippet

snippet fortios_ips_settings "Configure IPS VDOM parameter in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_ips_settings:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# ips_settings: # Configure IPS VDOM parameter.
$0
endsnippet

snippet fortios_ips_view_map "configure ips view-ma in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_ips_view_map:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# ips_view_map: # configure ips view-map
$0
endsnippet

snippet fortios_json_generic "Config Fortinet's FortiOS and FortiGate with json generic method." b
- name: $1
	fortios_json_generic:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# json_generic: # json generic
$0
endsnippet

snippet fortios_log_custom_field "Configure custom log fields in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_custom_field:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_custom_field: # Configure custom log fields.
$0
endsnippet

snippet fortios_log_disk_filter "Configure filters for local disk logging. Use these filters to determine the log messages to record according to severity and type in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_disk_filter:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_disk_filter: # Configure filters for local disk logging. Use these filters to determine the log messages to record according to severity and type.
$0
endsnippet

snippet fortios_log_disk_setting "Settings for local disk logging in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_disk_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_disk_setting: # Settings for local disk logging.
$0
endsnippet

snippet fortios_log_eventfilter "Configure log event filters in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_eventfilter:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_eventfilter: # Configure log event filters.
$0
endsnippet

snippet fortios_log_fact "Retrieve log data of fortios log objects." b
- name: $1
	fortios_log_fact:
		selector: ${2:memory_event_connector|memory_virus_archive|forticloud_event_router|forticloud_app-ctrl_raw|memory_cifs_raw|disk_waf_raw|forticloud_emailfilter_raw|disk_traffic_sniffer|memory_traffic_multicast|fortianalyzer_event_vpn|disk_ips_archive-download|disk_gtp_raw|memory_app-ctrl_archive|forticloud_webfilter_raw|fortianalyzer_ips_archive|disk_app-ctrl_archive-download|memory_emailfilter_raw|fortianalyzer_traffic_fortiview|forticloud_event_security-rating|disk_event_security-rating|memory_event_user|fortianalyzer_event_router|fortianalyzer_event_compliance-check|disk_ips_raw|fortianalyzer_app-ctrl_archive|disk_event_router|disk_event_wireless|fortianalyzer_traffic_threat|forticloud_event_user|forticloud_ips_archive|forticloud_dns_raw|fortianalyzer_event_system|forticloud_event_wireless|forticloud_event_connector|forticloud_traffic_local|fortianalyzer_app-ctrl_archive-download|memory_virus_raw|fortianalyzer_event_connector|forticloud_app-ctrl_archive-download|memory_event_endpoint|disk_traffic_forward|disk_dlp_raw|memory_waf_raw|disk_app-ctrl_archive|disk_event_fortiextender|memory_ssl_raw|memory_event_vpn|memory_voip_raw|forticloud_traffic_sniffer|memory_event_fortiextender|forticloud_traffic_threat|disk_ips_archive|fortianalyzer_event_wireless|memory_traffic_forward|memory_event_system|disk_traffic_local|fortianalyzer_cifs_raw|memory_traffic_local|memory_anomaly_raw|disk_webfilter_raw|forticloud_dlp_raw|fortianalyzer_voip_raw|fortianalyzer_traffic_multicast|forticloud_cifs_raw|disk_voip_raw|fortianalyzer_file-filter_raw|disk_app-ctrl_raw|disk_event_ha|disk_event_vpn|memory_event_router|memory_event_ha|forticloud_traffic_fortiview|forticloud_virus_archive|fortianalyzer_app-ctrl_raw|fortianalyzer_traffic_forward|fortianalyzer_dns_raw|forticloud_ips_raw|disk_ssh_raw|fortianalyzer_ips_archive-download|disk_anomaly_raw|disk_ssl_raw|memory_event_compliance-check|forticloud_event_wad|fortianalyzer_gtp_raw|memory_ssh_raw|disk_virus_archive|forticloud_traffic_forward|forticloud_ssh_raw|forticloud_ssl_raw|memory_ips_archive|forticloud_event_fortiextender|forticloud_waf_raw|disk_traffic_fortiview|memory_traffic_sniffer|forticloud_gtp_raw|fortianalyzer_emailfilter_raw|forticloud_file-filter_raw|fortianalyzer_event_wad|disk_virus_raw|disk_dns_raw|memory_ips_raw|forticloud_anomaly_raw|forticloud_app-ctrl_archive|memory_app-ctrl_raw|fortianalyzer_event_user|disk_traffic_multicast|fortianalyzer_anomaly_raw|memory_traffic_threat|fortianalyzer_virus_archive|memory_event_wireless|memory_webfilter_raw|forticloud_virus_raw|memory_event_security-rating|fortianalyzer_dlp_raw|forticloud_voip_raw|memory_file-filter_raw|forticloud_event_compliance-check|fortianalyzer_webfilter_raw|disk_file-filter_raw|disk_event_wad|fortianalyzer_virus_raw|fortianalyzer_ssh_raw|forticloud_event_ha|memory_gtp_raw|forticloud_event_vpn|memory_event_wad|fortianalyzer_ips_raw|disk_event_endpoint|disk_event_system|memory_dlp_raw|forticloud_event_system|disk_event_connector|fortianalyzer_event_ha|forticloud_ips_archive-download|fortianalyzer_ssl_raw|fortianalyzer_traffic_local|disk_emailfilter_raw|memory_traffic_fortiview|forticloud_traffic_multicast|fortianalyzer_event_security-rating|disk_event_compliance-check|fortianalyzer_event_fortiextender|disk_event_user|disk_traffic_threat|forticloud_event_endpoint|fortianalyzer_traffic_sniffer|fortianalyzer_event_endpoint|memory_dns_raw|memory_ips_archive-download|fortianalyzer_waf_raw|disk_cifs_raw|memory_app-ctrl_archive-download}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# filters: # A list of expressions to filter the returned results.
		# sorters: # A list of expressions to sort the returned results.
		# formatters: # A list of fields to display for returned results.
		# params: # the parameter for each selector, see definition in above list.
$0
endsnippet

snippet fortios_log_fortianalyzer2_filter "Filters for FortiAnalyzer in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_fortianalyzer2_filter:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_fortianalyzer2_filter: # Filters for FortiAnalyzer.
$0
endsnippet

snippet fortios_log_fortianalyzer2_override_filter "Override filters for FortiAnalyzer in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_fortianalyzer2_override_filter:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_fortianalyzer2_override_filter: # Override filters for FortiAnalyzer.
$0
endsnippet

snippet fortios_log_fortianalyzer2_override_setting "Override FortiAnalyzer settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_fortianalyzer2_override_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_fortianalyzer2_override_setting: # Override FortiAnalyzer settings.
$0
endsnippet

snippet fortios_log_fortianalyzer2_setting "Global FortiAnalyzer settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_fortianalyzer2_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_fortianalyzer2_setting: # Global FortiAnalyzer settings.
$0
endsnippet

snippet fortios_log_fortianalyzer3_filter "Filters for FortiAnalyzer in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_fortianalyzer3_filter:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_fortianalyzer3_filter: # Filters for FortiAnalyzer.
$0
endsnippet

snippet fortios_log_fortianalyzer3_override_filter "Override filters for FortiAnalyzer in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_fortianalyzer3_override_filter:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_fortianalyzer3_override_filter: # Override filters for FortiAnalyzer.
$0
endsnippet

snippet fortios_log_fortianalyzer3_override_setting "Override FortiAnalyzer settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_fortianalyzer3_override_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_fortianalyzer3_override_setting: # Override FortiAnalyzer settings.
$0
endsnippet

snippet fortios_log_fortianalyzer3_setting "Global FortiAnalyzer settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_fortianalyzer3_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_fortianalyzer3_setting: # Global FortiAnalyzer settings.
$0
endsnippet

snippet fortios_log_fortianalyzer_cloud_filter "Filters for FortiAnalyzer Cloud in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_fortianalyzer_cloud_filter:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_fortianalyzer_cloud_filter: # Filters for FortiAnalyzer Cloud.
$0
endsnippet

snippet fortios_log_fortianalyzer_cloud_override_filter "Override filters for FortiAnalyzer Cloud in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_fortianalyzer_cloud_override_filter:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_fortianalyzer_cloud_override_filter: # Override filters for FortiAnalyzer Cloud.
$0
endsnippet

snippet fortios_log_fortianalyzer_cloud_override_setting "Override FortiAnalyzer Cloud settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_fortianalyzer_cloud_override_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_fortianalyzer_cloud_override_setting: # Override FortiAnalyzer Cloud settings.
$0
endsnippet

snippet fortios_log_fortianalyzer_cloud_setting "Global FortiAnalyzer Cloud settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_fortianalyzer_cloud_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_fortianalyzer_cloud_setting: # Global FortiAnalyzer Cloud settings.
$0
endsnippet

snippet fortios_log_fortianalyzer_filter "Filters for FortiAnalyzer in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_fortianalyzer_filter:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_fortianalyzer_filter: # Filters for FortiAnalyzer.
$0
endsnippet

snippet fortios_log_fortianalyzer_override_filter "Override filters for FortiAnalyzer in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_fortianalyzer_override_filter:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_fortianalyzer_override_filter: # Override filters for FortiAnalyzer.
$0
endsnippet

snippet fortios_log_fortianalyzer_override_setting "Override FortiAnalyzer settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_fortianalyzer_override_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_fortianalyzer_override_setting: # Override FortiAnalyzer settings.
$0
endsnippet

snippet fortios_log_fortianalyzer_setting "Global FortiAnalyzer settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_fortianalyzer_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_fortianalyzer_setting: # Global FortiAnalyzer settings.
$0
endsnippet

snippet fortios_log_fortiguard_filter "Filters for FortiCloud in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_fortiguard_filter:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_fortiguard_filter: # Filters for FortiCloud.
$0
endsnippet

snippet fortios_log_fortiguard_override_filter "Override filters for FortiCloud in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_fortiguard_override_filter:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_fortiguard_override_filter: # Override filters for FortiCloud.
$0
endsnippet

snippet fortios_log_fortiguard_override_setting "Override global FortiCloud logging settings for this VDOM in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_fortiguard_override_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_fortiguard_override_setting: # Override global FortiCloud logging settings for this VDOM.
$0
endsnippet

snippet fortios_log_fortiguard_setting "Configure logging to FortiCloud in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_fortiguard_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_fortiguard_setting: # Configure logging to FortiCloud.
$0
endsnippet

snippet fortios_log_gui_display "Configure how log messages are displayed on the GUI in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_gui_display:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_gui_display: # Configure how log messages are displayed on the GUI.
$0
endsnippet

snippet fortios_log_memory_filter "Filters for memory buffer in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_memory_filter:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_memory_filter: # Filters for memory buffer.
$0
endsnippet

snippet fortios_log_memory_global_setting "Global settings for memory logging in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_memory_global_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_memory_global_setting: # Global settings for memory logging.
$0
endsnippet

snippet fortios_log_memory_setting "Settings for memory buffer in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_memory_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_memory_setting: # Settings for memory buffer.
$0
endsnippet

snippet fortios_log_null_device_filter "Filters for null device logging in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_null_device_filter:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_null_device_filter: # Filters for null device logging.
$0
endsnippet

snippet fortios_log_null_device_setting "Settings for null device logging in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_null_device_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_null_device_setting: # Settings for null device logging.
$0
endsnippet

snippet fortios_log_setting "Configure general log settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_setting: # Configure general log settings.
$0
endsnippet

snippet fortios_log_syslogd2_filter "Filters for remote system server in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_syslogd2_filter:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_syslogd2_filter: # Filters for remote system server.
$0
endsnippet

snippet fortios_log_syslogd2_override_filter "Override filters for remote system server in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_syslogd2_override_filter:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_syslogd2_override_filter: # Override filters for remote system server.
$0
endsnippet

snippet fortios_log_syslogd2_override_setting "Override settings for remote syslog server in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_syslogd2_override_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_syslogd2_override_setting: # Override settings for remote syslog server.
$0
endsnippet

snippet fortios_log_syslogd2_setting "Global settings for remote syslog server in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_syslogd2_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_syslogd2_setting: # Global settings for remote syslog server.
$0
endsnippet

snippet fortios_log_syslogd3_filter "Filters for remote system server in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_syslogd3_filter:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_syslogd3_filter: # Filters for remote system server.
$0
endsnippet

snippet fortios_log_syslogd3_override_filter "Override filters for remote system server in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_syslogd3_override_filter:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_syslogd3_override_filter: # Override filters for remote system server.
$0
endsnippet

snippet fortios_log_syslogd3_override_setting "Override settings for remote syslog server in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_syslogd3_override_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_syslogd3_override_setting: # Override settings for remote syslog server.
$0
endsnippet

snippet fortios_log_syslogd3_setting "Global settings for remote syslog server in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_syslogd3_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_syslogd3_setting: # Global settings for remote syslog server.
$0
endsnippet

snippet fortios_log_syslogd4_filter "Filters for remote system server in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_syslogd4_filter:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_syslogd4_filter: # Filters for remote system server.
$0
endsnippet

snippet fortios_log_syslogd4_override_filter "Override filters for remote system server in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_syslogd4_override_filter:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_syslogd4_override_filter: # Override filters for remote system server.
$0
endsnippet

snippet fortios_log_syslogd4_override_setting "Override settings for remote syslog server in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_syslogd4_override_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_syslogd4_override_setting: # Override settings for remote syslog server.
$0
endsnippet

snippet fortios_log_syslogd4_setting "Global settings for remote syslog server in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_syslogd4_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_syslogd4_setting: # Global settings for remote syslog server.
$0
endsnippet

snippet fortios_log_syslogd_filter "Filters for remote system server in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_syslogd_filter:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_syslogd_filter: # Filters for remote system server.
$0
endsnippet

snippet fortios_log_syslogd_override_filter "Override filters for remote system server in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_syslogd_override_filter:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_syslogd_override_filter: # Override filters for remote system server.
$0
endsnippet

snippet fortios_log_syslogd_override_setting "Override settings for remote syslog server in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_syslogd_override_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_syslogd_override_setting: # Override settings for remote syslog server.
$0
endsnippet

snippet fortios_log_syslogd_setting "Global settings for remote syslog server in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_syslogd_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_syslogd_setting: # Global settings for remote syslog server.
$0
endsnippet

snippet fortios_log_threat_weight "Configure threat weight settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_threat_weight:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_threat_weight: # Configure threat weight settings.
$0
endsnippet

snippet fortios_log_webtrends_filter "Filters for WebTrends in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_webtrends_filter:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_webtrends_filter: # Filters for WebTrends.
$0
endsnippet

snippet fortios_log_webtrends_setting "Settings for WebTrends in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_log_webtrends_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# log_webtrends_setting: # Settings for WebTrends.
$0
endsnippet

snippet fortios_monitor "Ansible Module for FortiOS Monitor API" b
- name: $1
	fortios_monitor:
		selector: ${2:format.system.logdisk|update.switch-controller.managed-switch|update.system.ha-peer|add-license.registration.vdom|geoip.geoip-query|clear-statistics.system.fortiguard|enable-app-bandwidth-tracking.system.traffic-history|upgrade.license.database|run.system.compliance|clear_counters.firewall.policy|test-availability.system.fortiguard|download.wifi.firmware|provision.user.fortitoken|reset.firewall.per-ip-shaper|clear-counters.firewall.central-snat-map|update.system.modem|update.web-ui.custom-language|stop.wifi.vlan-probe|import.vpn-certificate.local|create.registration.forticare|save.system.config|tunnel_reset_stats.vpn.ipsec|toggle-vdom-mode.system.admin|register-device.registration.forticloud|quarantine.endpoint-control.registration|set_status.wifi.rogue_ap|email.user.guest|add.firewall.clearpass-address|transfer.registration.forticare|import.vpn-certificate.crl|reset.firewall.dnat|disassociate.wifi.client|reset.webfilter.category-quota|upgrade.system.firmware|tunnel_up.vpn.ipsec|read-info.system.certificate|deregister.endpoint-control.registration|clear-soft-out.router.bgp|factory-reset.switch-controller.managed-switch|clear-soft-in.router.bgp|stop.system.sniffer|delete.log.local-report|add-license.registration.forticare|verify-cert.endpoint-control.ems|cancel.fortiview.session|restart.wifi.managed_ap|delete.webfilter.override|unblock.endpoint-control.registration|stop.system.usb-log|close.firewall.session|reset.firewall.shaper|clear_all.firewall.session|clear_counters.firewall.acl|reset.wifi.euclid|revoke.system.dhcp|add_users.user.banned|start.system.fsck|clear_counters.firewall.multicast-policy6|clear_counters.firewall.policy6|change-vdom-mode.system.admin|refresh-server.user.fsso|clear_counters.firewall.consolidated-policy|trigger.system.security-rating|webhook.system.automation-stitch|generate.vpn-certificate.csr|upload.system.vmlicense|reset.firewall.multicast-policy6|push.wifi.firmware|eject.system.usb-device|start.system.sniffer|reboot.system.os|reset.firewall.consolidated-policy|set.system.time|remove.user.device|import.vpn-certificate.remote|upload.webproxy.pacfile|push.switch-controller.fsw-firmware|reset.wanopt.peer_stats|delete.vpn.ssl|block.endpoint-control.registration|backup-action.system.fortimanager|start.system.usb-log|system.change-password|reset.firewall.multicast-policy|tunnel_down.vpn.ipsec|clear_all.wifi.rogue_ap|import-seed.user.fortitoken|poe-reset.switch-controller.managed-switch|logout.registration.forticloud|clear_counters.firewall.acl6|restore.system.config|import.vpn-certificate.ca|upload.switch-controller.fsw-firmware|test.user.tacacs-plus|upload.system.config-script|system.password-policy-conform|sms.user.guest|delete.system.config-script|reset.wanopt.history|reset.firewall.policy6|import-mobile.user.fortitoken|download.switch-controller.fsw-firmware|stop.wifi.spectrum|reset.firewall.central-snat-map|login.registration.forticare|create.registration.forticloud|upload.wifi.firmware|start.wifi.spectrum|disconnect.system.modem|disconnect.system.ha-peer|keep-alive.wifi.spectrum|reset.system.modem|activate.user.fortitoken|register-appliance.system.csf|refresh.azure.application-list|start.wifi.vlan-probe|clear.system.sniffer|reset.extender-controller.extender|validate-gcp-key.system.sdn-connector|restart.system.sniffer|import.web-ui.language|import-trial.user.fortitoken|dump.system.com-log|diagnose.extender-controller.extender|update-comments.system.config-revision|refresh.user.fortitoken|reset.firewall.policy|shutdown.system.os|reset.log.stats|revoke.system.dhcp6|login.registration.forticloud|reset.wanopt.webcache|save.system.config-revision|set_status.wifi.managed_ap|deauth.user.firewall|upgrade.extender-controller.extender|delete.system.config-revision|clear_users.user.banned|send-activation.user.fortitoken|reset.webcache.stats|clear_counters.firewall.proxy-policy|utm.rating-lookup|test.system.automation-stitch|refresh.system.external-resource|auth.user.firewall|dhcp-renew.system.interface|migrate.registration.forticloud|clear_counters.firewall.multicast-policy|connect.wifi.network|test-connect.user.radius|speed-test-trigger.system.interface|generate-key.system.api-user|upload.wifi.region-image|run.system.config-script|clear_tunnel.vpn.ssl|add.nsx.service|update.system.fortiguard|restart.switch-controller.managed-switch|unquarantine.endpoint-control.registration|led-blink.wifi.managed_ap|update.system.sdn-connector|config.system.fortimanager|system.disconnect-admins|provision-user.vpn.ssl|create.web-ui.custom-language|check.endpoint-control.registration-password|clear-counters.firewall.dnat|scan.wifi.network|clear.vpn.ike|clear_counters.firewall.security-policy|clear_all.user.banned|delete.firewall.clearpass-address|connect.system.modem|generate-keys.wifi.ssid}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# params: # the parameter for each selector, see definition in above list.
$0
endsnippet

snippet fortios_monitor_fact "Retrieve Facts of FortiOS Monitor Objects." b
- name: $1
	fortios_monitor_fact:
		selector: ${2:firewall_acl6|firewall_ippool|webfilter_malicious-urls|fortiguard_redirect-portal|firewall_policy-lookup|system_acquired-dns|wifi_interfering_ap|system_botnet-domains|firewall_address-dynamic|vpn_ocvpn_status|wifi_vlan-probe|system_sandbox_status|system_running-processes|system_storage|router_ipv4|log_historic-daily-remote-logs|webfilter_malicious-urls_stat|ips_anomaly|wanopt_peer_stats|wifi_network_status|log_hourly-disk-usage|wifi_region-image|system_object_usage|wifi_euclid|system_current-admins|system_sandbox_test-connect|system_interface_speed-test-status|user_info_query|firewall_central-snat-map|wifi_rogue_ap|system_config-revision_info|ips_hold-signatures|utm_antivirus_stats|system_3g-modem|endpoint-control_installer_download|network_arp|firewall_address-fqdns|wifi_firmware|user_fsso|switch-controller_managed-switch_port-stats|endpoint-control_installer|utm_app-lookup|system_firmware|system_interface_dhcp-status|wifi_client|system_botnet-domains_stat|firewall_address6-dynamic|system_external-resource_entry-list|webfilter_fortiguard-categories|log_local-report-list|firewall_internet-service-match|router_policy6|virtual-wan_sla-log|system_security-rating|switch-controller_managed-switch_dhcp-snooping|system_time|system_fortimanager_backup-details|firewall_shaper|system_available-interfaces|system_fortimanager_status|system_sensor-info|system_status|switch-controller_managed-switch_status|nsx_instance|web-ui_custom-language_download|wanopt_history|log_forticloud|system_vdom-link|utm_blacklisted-certificates|webcache_stats|system_config-revision_file|user_device|system_dhcp|router_lookup|utm_blacklisted-certificates_statistics|log_device_state|vpn_one-click_status|system_sniffer|system_firmware_upgrade-paths|router_ospf_neighbors|system_sandbox_stats|wanopt_webcache|network_lldp_neighbors|log_local-report_download|system_config-error-log_download|firewall_load-balance|vpn_ocvpn_meta|system_sandbox_cloud-regions|firewall_address-fqdns6|firewall_acl|system_link-monitor|system_com-log_download|user_device_query|fortiguard_service-communication-stats|fortiview_sandbox-file-details|system_available-certificates|registration_forticloud_domains|switch-controller_fsw-firmware|system_ha-table-checksums|fortiview_statistics|router_ipv6|endpoint-control_registration_summary|firewall_gtp-runtime-statistics|firewall_uuid-list|router_statistics|system_config_usb-filelist|endpoint-control_ems_cert-status|system_config-script|user_banned|system_sdn-connector_nsx-security-tags|system_object-tagging_usage|system_com-log_update|system_global-resources|system_ipconf|switch-controller_mclag-icl_eligible-peer|user_fortitoken-cloud_status|firewall_per-ip-shaper|wifi_network_list|ips_exceed-scan-range|log_current-disk-usage|license_status|firewall_session|firewall_ippool_mapping|virtual-wan_members|switch-controller_managed-switch_faceplate-xml|firewall_security-policy|endpoint-control_record-list|videofilter_fortiguard-categories|webfilter_category-quota|log_forticloud-report-list|log_policy-archive_download|wifi_ap-names|system_debug_download|system_automation-action_stats|log_fortianalyzer-queue|network_ddns_servers|system_nat46-ippools|system_vdom-resource|system_modem|firewall_proxy-policy|nsx_service_status|azure_application-list|log_forticloud-report_download|user_info_thumbnail|system_sdn-connector_status|vpn_ipsec|endpoint-control_ems_status-summary|firewall_dnat|firewall_multicast-policy|switch-controller_validate-switch-prefix|system_security-rating_history|system_lte-modem_status|endpoint-control_summary|system_csf|license_forticare-resellers|switch-controller_managed-switch_models|endpoint-control_profile_xml|wifi_ap_status|user_device-category|system_ntp_status|firewall_gtp-statistics|utm_application-categories|router_lookup-policy|system_ha-history|license_forticare-org-list|system_security-rating_lang|system_global-search|router_bgp_paths6|vpn_one-click_members|system_interface_kernel-interfaces|switch-controller_managed-switch_health|system_timezone|firewall_sdn-connector-filters|router_bgp_paths-statistics|webfilter_trusted-urls|system_usb-log|network_lldp_ports|system_fortiguard-blacklist|firewall_policy|system_ha-statistics|switch-controller_matched-devices|network_dns_latency|system_fortimanager_backup-summary|system_sniffer_download|user_detected-device|system_botnet_stat|system_vm-information|system_security-rating_supported-reports|user_fortitoken|system_botnet|vpn_ssl_stats|system_ha-checksums|webfilter_override|log_stats|system_csf_pending-authorizations|system_resolve-fqdn|log_fortianalyzer|log_ips-archive_download|wifi_meta|system_interface-connected-admins-info|system_config-revision|router_bgp_neighbors|user_collected-email|ips_rate-based|switch-controller_detected-device|webproxy_pacfile_download|registration_forticloud_device-status|firewall_policy6|endpoint-control_ems_status|router_policy|switch-controller_managed-switch_transceivers|user_firewall|firewall_multicast-policy6|user_device-type|switch-controller_managed-switch_cable-status|system_automation-stitch_stats|system_traffic-history_interface|network_ddns_lookup|wifi_managed_ap|system_interface_transceivers|system_config_backup|system_traffic-history_top-applications|firewall_uuid-type-lookup|virtual-wan_interface-log|network_reverse-ip-lookup|firewall_health|router_bgp_neighbors6|system_security-rating_status|registration_forticloud_disclaimer|wifi_ap_channels|system_botnet-domains_hits|firewall_internet-service-details|log_event|system_config-sync_status|network_fortiguard_live-services-latency|fortiview_sandbox-file-list|system_fortiguard_server-info|vpn_ssl|system_check-port-availability|log_av-archive_download|license_fortianalyzer-status|virtual-wan_health-check|system_config_restore-status|router_bgp_paths|endpoint-control_avatar_download|system_resource_usage|system_certificate_download|system_ha-peer|system_sandbox_connection|system_interface_poe|ips_metadata|system_interface|extender-controller_extender|firewall_local-in|wifi_spectrum|firewall_consolidated-policy|switch-controller_managed-switch|system_trusted-cert-authorities|vpn_ocvpn_members}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# filters: # A list of expressions to filter the returned results.
		# sorters: # A list of expressions to sort the returned results.
		# formatters: # A list of fields to display for returned results.
		# params: # the parameter for each selector, see definition in above list.
$0
endsnippet

snippet fortios_monitoring_np6_ipsec_engine "Configure NP6 IPsec engine status monitoring in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_monitoring_np6_ipsec_engine:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# monitoring_np6_ipsec_engine: # Configure NP6 IPsec engine status monitoring.
$0
endsnippet

snippet fortios_monitoring_npu_hpe "Configure npu-hpe status monitoring in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_monitoring_npu_hpe:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# monitoring_npu_hpe: # Configure npu-hpe status monitoring.
$0
endsnippet

snippet fortios_nsxt_service_chain "Configure NSX-T service chain in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_nsxt_service_chain:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# nsxt_service_chain: # Configure NSX-T service chain.
$0
endsnippet

snippet fortios_nsxt_setting "Configure NSX-T setting in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_nsxt_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# nsxt_setting: # Configure NSX-T setting.
$0
endsnippet

snippet fortios_pfcp_message_filter "Message filter for PFCP messages in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_pfcp_message_filter:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# pfcp_message_filter: # Message filter for PFCP messages.
$0
endsnippet

snippet fortios_report_chart "Report chart widget configuration in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_report_chart:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# report_chart: # Report chart widget configuration.
$0
endsnippet

snippet fortios_report_dataset "Report dataset configuration in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_report_dataset:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# report_dataset: # Report dataset configuration.
$0
endsnippet

snippet fortios_report_layout "Report layout configuration in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_report_layout:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# report_layout: # Report layout configuration.
$0
endsnippet

snippet fortios_report_setting "Report setting configuration in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_report_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# report_setting: # Report setting configuration.
$0
endsnippet

snippet fortios_report_style "Report style configuration in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_report_style:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# report_style: # Report style configuration.
$0
endsnippet

snippet fortios_report_theme "Report themes configuratio in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_report_theme:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# report_theme: # Report themes configuration
$0
endsnippet

snippet fortios_router_access_list "Configure access lists in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_router_access_list:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# router_access_list: # Configure access lists.
$0
endsnippet

snippet fortios_router_access_list6 "Configure IPv6 access lists in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_router_access_list6:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# router_access_list6: # Configure IPv6 access lists.
$0
endsnippet

snippet fortios_router_aspath_list "Configure Autonomous System (AS) path lists in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_router_aspath_list:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# router_aspath_list: # Configure Autonomous System (AS) path lists.
$0
endsnippet

snippet fortios_router_auth_path "Configure authentication based routing in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_router_auth_path:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# router_auth_path: # Configure authentication based routing.
$0
endsnippet

snippet fortios_router_bfd "Configure BFD in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_router_bfd:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# router_bfd: # Configure BFD.
$0
endsnippet

snippet fortios_router_bfd6 "Configure IPv6 BFD in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_router_bfd6:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# router_bfd6: # Configure IPv6 BFD.
$0
endsnippet

snippet fortios_router_bgp "Configure BGP in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_router_bgp:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# router_bgp: # Configure BGP.
$0
endsnippet

snippet fortios_router_community_list "Configure community lists in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_router_community_list:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# router_community_list: # Configure community lists.
$0
endsnippet

snippet fortios_router_isis "Configure IS-IS in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_router_isis:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# router_isis: # Configure IS-IS.
$0
endsnippet

snippet fortios_router_key_chain "Configure key-chain in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_router_key_chain:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# router_key_chain: # Configure key-chain.
$0
endsnippet

snippet fortios_router_multicast "Configure router multicast in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_router_multicast:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# router_multicast: # Configure router multicast.
$0
endsnippet

snippet fortios_router_multicast6 "Configure IPv6 multicast in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_router_multicast6:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# router_multicast6: # Configure IPv6 multicast.
$0
endsnippet

snippet fortios_router_multicast_flow "Configure multicast-flow in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_router_multicast_flow:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# router_multicast_flow: # Configure multicast-flow.
$0
endsnippet

snippet fortios_router_ospf "Configure OSPF in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_router_ospf:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# router_ospf: # Configure OSPF.
$0
endsnippet

snippet fortios_router_ospf6 "Configure IPv6 OSPF in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_router_ospf6:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# router_ospf6: # Configure IPv6 OSPF.
$0
endsnippet

snippet fortios_router_policy "Configure IPv4 routing policies in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_router_policy:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# router_policy: # Configure IPv4 routing policies.
$0
endsnippet

snippet fortios_router_policy6 "Configure IPv6 routing policies in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_router_policy6:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# router_policy6: # Configure IPv6 routing policies.
$0
endsnippet

snippet fortios_router_prefix_list "Configure IPv4 prefix lists in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_router_prefix_list:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# router_prefix_list: # Configure IPv4 prefix lists.
$0
endsnippet

snippet fortios_router_prefix_list6 "Configure IPv6 prefix lists in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_router_prefix_list6:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# router_prefix_list6: # Configure IPv6 prefix lists.
$0
endsnippet

snippet fortios_router_rip "Configure RIP in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_router_rip:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# router_rip: # Configure RIP.
$0
endsnippet

snippet fortios_router_ripng "Configure RIPng in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_router_ripng:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# router_ripng: # Configure RIPng.
$0
endsnippet

snippet fortios_router_route_map "Configure route maps in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_router_route_map:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# router_route_map: # Configure route maps.
$0
endsnippet

snippet fortios_router_setting "Configure router settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_router_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# router_setting: # Configure router settings.
$0
endsnippet

snippet fortios_router_static "Configure IPv4 static routing tables in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_router_static:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# router_static: # Configure IPv4 static routing tables.
$0
endsnippet

snippet fortios_router_static6 "Configure IPv6 static routing tables in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_router_static6:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# router_static6: # Configure IPv6 static routing tables.
$0
endsnippet

snippet fortios_sctp_filter_profile "Configure SCTP filter profiles in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_sctp_filter_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# sctp_filter_profile: # Configure SCTP filter profiles.
$0
endsnippet

snippet fortios_spamfilter_bwl "Configure anti-spam black/white list in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_spamfilter_bwl:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# spamfilter_bwl: # Configure anti-spam black/white list.
$0
endsnippet

snippet fortios_spamfilter_bword "Configure AntiSpam banned word list in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_spamfilter_bword:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# spamfilter_bword: # Configure AntiSpam banned word list.
$0
endsnippet

snippet fortios_spamfilter_dnsbl "Configure AntiSpam DNSBL/ORBL in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_spamfilter_dnsbl:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# spamfilter_dnsbl: # Configure AntiSpam DNSBL/ORBL.
$0
endsnippet

snippet fortios_spamfilter_fortishield "Configure FortiGuard - AntiSpam in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_spamfilter_fortishield:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# spamfilter_fortishield: # Configure FortiGuard - AntiSpam.
$0
endsnippet

snippet fortios_spamfilter_iptrust "Configure AntiSpam IP trust in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_spamfilter_iptrust:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# spamfilter_iptrust: # Configure AntiSpam IP trust.
$0
endsnippet

snippet fortios_spamfilter_mheader "Configure AntiSpam MIME header in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_spamfilter_mheader:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# spamfilter_mheader: # Configure AntiSpam MIME header.
$0
endsnippet

snippet fortios_spamfilter_options "Configure AntiSpam options in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_spamfilter_options:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# spamfilter_options: # Configure AntiSpam options.
$0
endsnippet

snippet fortios_spamfilter_profile "Configure AntiSpam profiles in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_spamfilter_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# spamfilter_profile: # Configure AntiSpam profiles.
$0
endsnippet

snippet fortios_ssh_filter_profile "SSH filter profile in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_ssh_filter_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# ssh_filter_profile: # SSH filter profile.
$0
endsnippet

snippet fortios_switch_controller_802_1x_settings "Configure global 802.1X settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_802_1x_settings:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_802_1x_settings: # Configure global 802.1X settings.
$0
endsnippet

snippet fortios_switch_controller_auto_config_custom "Policies which can override the 'default' for specific ISL/ICL/FortiLink interface in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_auto_config_custom:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_auto_config_custom: # Policies which can override the 'default' for specific ISL/ICL/FortiLink interface.
$0
endsnippet

snippet fortios_switch_controller_auto_config_default "Policies which are applied automatically to all ISL/ICL/FortiLink interfaces in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_auto_config_default:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_auto_config_default: # Policies which are applied automatically to all ISL/ICL/FortiLink interfaces.
$0
endsnippet

snippet fortios_switch_controller_auto_config_policy "Policy definitions which can define the behavior on auto configured interfaces in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_auto_config_policy:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_auto_config_policy: # Policy definitions which can define the behavior on auto configured interfaces.
$0
endsnippet

snippet fortios_switch_controller_custom_command "Configure the FortiGate switch controller to send custom commands to managed FortiSwitch devices in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_custom_command:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_custom_command: # Configure the FortiGate switch controller to send custom commands to managed FortiSwitch devices.
$0
endsnippet

snippet fortios_switch_controller_dynamic_port_policy "Configure Dynamic port policy to be applied on the managed FortiSwitch ports through DPP device in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_dynamic_port_policy:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_dynamic_port_policy: # Configure Dynamic port policy to be applied on the managed FortiSwitch ports through DPP device.
$0
endsnippet

snippet fortios_switch_controller_flow_tracking "Configure FortiSwitch flow tracking and export via ipfix/netflow in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_flow_tracking:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_flow_tracking: # Configure FortiSwitch flow tracking and export via ipfix/netflow.
$0
endsnippet

snippet fortios_switch_controller_fortilink_settings "Configure integrated FortiLink settings for FortiSwitch in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_fortilink_settings:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_fortilink_settings: # Configure integrated FortiLink settings for FortiSwitch.
$0
endsnippet

snippet fortios_switch_controller_global "Configure FortiSwitch global settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_global:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_global: # Configure FortiSwitch global settings.
$0
endsnippet

snippet fortios_switch_controller_igmp_snooping "Configure FortiSwitch IGMP snooping global settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_igmp_snooping:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_igmp_snooping: # Configure FortiSwitch IGMP snooping global settings.
$0
endsnippet

snippet fortios_switch_controller_initial_config_template "Configure template for auto-generated VLANs in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_initial_config_template:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_initial_config_template: # Configure template for auto-generated VLANs.
$0
endsnippet

snippet fortios_switch_controller_initial_config_vlans "Configure initial template for auto-generated VLAN interfaces in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_initial_config_vlans:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_initial_config_vlans: # Configure initial template for auto-generated VLAN interfaces.
$0
endsnippet

snippet fortios_switch_controller_lldp_profile "Configure FortiSwitch LLDP profiles in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_lldp_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_lldp_profile: # Configure FortiSwitch LLDP profiles.
$0
endsnippet

snippet fortios_switch_controller_lldp_settings "Configure FortiSwitch LLDP settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_lldp_settings:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_lldp_settings: # Configure FortiSwitch LLDP settings.
$0
endsnippet

snippet fortios_switch_controller_location "Configure FortiSwitch location services in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_location:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_location: # Configure FortiSwitch location services.
$0
endsnippet

snippet fortios_switch_controller_mac_policy "Configure MAC policy to be applied on the managed FortiSwitch devices through NAC device in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_mac_policy:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_mac_policy: # Configure MAC policy to be applied on the managed FortiSwitch devices through NAC device.
$0
endsnippet

snippet fortios_switch_controller_mac_sync_settings "Configure global MAC synchronization settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_mac_sync_settings:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_mac_sync_settings: # Configure global MAC synchronization settings.
$0
endsnippet

snippet fortios_switch_controller_managed_switch "Configure FortiSwitch devices that are managed by this FortiGate in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_managed_switch:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_managed_switch: # Configure FortiSwitch devices that are managed by this FortiGate.
$0
endsnippet

snippet fortios_switch_controller_nac_device "Configure/list NAC devices learned on the managed FortiSwitch ports which matches NAC policy in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_nac_device:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_nac_device: # Configure/list NAC devices learned on the managed FortiSwitch ports which matches NAC policy.
$0
endsnippet

snippet fortios_switch_controller_nac_settings "Configure integrated NAC settings for FortiSwitch in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_nac_settings:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_nac_settings: # Configure integrated NAC settings for FortiSwitch.
$0
endsnippet

snippet fortios_switch_controller_network_monitor_settings "Configure network monitor settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_network_monitor_settings:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_network_monitor_settings: # Configure network monitor settings.
$0
endsnippet

snippet fortios_switch_controller_poe "List PoE end-points status in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_poe:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_poe: # List PoE end-points status.
$0
endsnippet

snippet fortios_switch_controller_port_policy "Configure port policy to be applied on the managed FortiSwitch ports through NAC device in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_port_policy:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_port_policy: # Configure port policy to be applied on the managed FortiSwitch ports through NAC device.
$0
endsnippet

snippet fortios_switch_controller_ptp_policy "PTP policy configuration in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_ptp_policy:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_ptp_policy: # PTP policy configuration.
$0
endsnippet

snippet fortios_switch_controller_ptp_settings "Global PTP settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_ptp_settings:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_ptp_settings: # Global PTP settings.
$0
endsnippet

snippet fortios_switch_controller_qos_dot1p_map "Configure FortiSwitch QoS 802.1p in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_qos_dot1p_map:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_qos_dot1p_map: # Configure FortiSwitch QoS 802.1p.
$0
endsnippet

snippet fortios_switch_controller_qos_ip_dscp_map "Configure FortiSwitch QoS IP precedence/DSCP in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_qos_ip_dscp_map:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_qos_ip_dscp_map: # Configure FortiSwitch QoS IP precedence/DSCP.
$0
endsnippet

snippet fortios_switch_controller_qos_qos_policy "Configure FortiSwitch QoS policy in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_qos_qos_policy:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_qos_qos_policy: # Configure FortiSwitch QoS policy.
$0
endsnippet

snippet fortios_switch_controller_qos_queue_policy "Configure FortiSwitch QoS egress queue policy in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_qos_queue_policy:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_qos_queue_policy: # Configure FortiSwitch QoS egress queue policy.
$0
endsnippet

snippet fortios_switch_controller_quarantine "Configure FortiSwitch quarantine support in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_quarantine:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_quarantine: # Configure FortiSwitch quarantine support.
$0
endsnippet

snippet fortios_switch_controller_remote_log "Configure logging by FortiSwitch device to a remote syslog server in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_remote_log:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_remote_log: # Configure logging by FortiSwitch device to a remote syslog server.
$0
endsnippet

snippet fortios_switch_controller_security_policy_802_1x "Configure 802.1x MAC Authentication Bypass (MAB) policies in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_security_policy_802_1x:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_security_policy_802_1x: # Configure 802.1x MAC Authentication Bypass (MAB) policies.
$0
endsnippet

snippet fortios_switch_controller_security_policy_captive_portal "Names of VLANs that use captive portal authentication in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_security_policy_captive_portal:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_security_policy_captive_portal: # Names of VLANs that use captive portal authentication.
$0
endsnippet

snippet fortios_switch_controller_security_policy_local_access "Configure allowaccess list for mgmt and internal interfaces on managed FortiSwitch in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_security_policy_local_access:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_security_policy_local_access: # Configure allowaccess list for mgmt and internal interfaces on managed FortiSwitch.
$0
endsnippet

snippet fortios_switch_controller_sflow "Configure FortiSwitch sFlow in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_sflow:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_sflow: # Configure FortiSwitch sFlow.
$0
endsnippet

snippet fortios_switch_controller_snmp_community "Configure FortiSwitch SNMP v1/v2c communities globally in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_snmp_community:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_snmp_community: # Configure FortiSwitch SNMP v1/v2c communities globally.
$0
endsnippet

snippet fortios_switch_controller_snmp_sysinfo "Configure FortiSwitch SNMP system information globally in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_snmp_sysinfo:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_snmp_sysinfo: # Configure FortiSwitch SNMP system information globally.
$0
endsnippet

snippet fortios_switch_controller_snmp_trap_threshold "Configure FortiSwitch SNMP trap threshold values globally in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_snmp_trap_threshold:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_snmp_trap_threshold: # Configure FortiSwitch SNMP trap threshold values globally.
$0
endsnippet

snippet fortios_switch_controller_snmp_user "Configure FortiSwitch SNMP v3 users globally in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_snmp_user:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_snmp_user: # Configure FortiSwitch SNMP v3 users globally.
$0
endsnippet

snippet fortios_switch_controller_storm_control "Configure FortiSwitch storm control in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_storm_control:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_storm_control: # Configure FortiSwitch storm control.
$0
endsnippet

snippet fortios_switch_controller_storm_control_policy "Configure FortiSwitch storm control policy to be applied on managed-switch ports in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_storm_control_policy:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_storm_control_policy: # Configure FortiSwitch storm control policy to be applied on managed-switch ports.
$0
endsnippet

snippet fortios_switch_controller_stp_instance "Configure FortiSwitch multiple spanning tree protocol (MSTP) instances in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_stp_instance:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_stp_instance: # Configure FortiSwitch multiple spanning tree protocol (MSTP) instances.
$0
endsnippet

snippet fortios_switch_controller_stp_settings "Configure FortiSwitch spanning tree protocol (STP) in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_stp_settings:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_stp_settings: # Configure FortiSwitch spanning tree protocol (STP).
$0
endsnippet

snippet fortios_switch_controller_switch_group "Configure FortiSwitch switch groups in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_switch_group:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_switch_group: # Configure FortiSwitch switch groups.
$0
endsnippet

snippet fortios_switch_controller_switch_interface_tag "Configure switch object tags in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_switch_interface_tag:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_switch_interface_tag: # Configure switch object tags.
$0
endsnippet

snippet fortios_switch_controller_switch_log "Configure FortiSwitch logging (logs are transferred to and inserted into FortiGate event log) in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_switch_log:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_switch_log: # Configure FortiSwitch logging (logs are transferred to and inserted into FortiGate event log).
$0
endsnippet

snippet fortios_switch_controller_switch_profile "Configure FortiSwitch switch profile in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_switch_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_switch_profile: # Configure FortiSwitch switch profile.
$0
endsnippet

snippet fortios_switch_controller_system "Configure system-wide switch controller settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_system:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_system: # Configure system-wide switch controller settings.
$0
endsnippet

snippet fortios_switch_controller_traffic_policy "Configure FortiSwitch traffic policy in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_traffic_policy:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_traffic_policy: # Configure FortiSwitch traffic policy.
$0
endsnippet

snippet fortios_switch_controller_traffic_sniffer "Configure FortiSwitch RSPAN/ERSPAN traffic sniffing parameters in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_traffic_sniffer:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_traffic_sniffer: # Configure FortiSwitch RSPAN/ERSPAN traffic sniffing parameters.
$0
endsnippet

snippet fortios_switch_controller_virtual_port_pool "Configure virtual pool in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_virtual_port_pool:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_virtual_port_pool: # Configure virtual pool.
$0
endsnippet

snippet fortios_switch_controller_vlan "Configure VLANs for switch controller in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_vlan:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_vlan: # Configure VLANs for switch controller.
$0
endsnippet

snippet fortios_switch_controller_vlan_policy "Configure VLAN policy to be applied on the managed FortiSwitch ports through port-policy in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_switch_controller_vlan_policy:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# switch_controller_vlan_policy: # Configure VLAN policy to be applied on the managed FortiSwitch ports through port-policy.
$0
endsnippet

snippet fortios_system_3g_modem_custom "3G MODEM custom in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_3g_modem_custom:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_3g_modem_custom: # 3G MODEM custom.
$0
endsnippet

snippet fortios_system_accprofile "Configure access profiles for system administrators in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_accprofile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_accprofile: # Configure access profiles for system administrators.
$0
endsnippet

snippet fortios_system_acme "Configure ACME client in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_acme:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_acme: # Configure ACME client.
$0
endsnippet

snippet fortios_system_admin "Configure admin users in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_admin:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_admin: # Configure admin users.
$0
endsnippet

snippet fortios_system_affinity_interrupt "Configure interrupt affinity in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_affinity_interrupt:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_affinity_interrupt: # Configure interrupt affinity.
$0
endsnippet

snippet fortios_system_affinity_packet_redistribution "Configure packet redistribution in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_affinity_packet_redistribution:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_affinity_packet_redistribution: # Configure packet redistribution.
$0
endsnippet

snippet fortios_system_alarm "Configure alarm in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_alarm:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_alarm: # Configure alarm.
$0
endsnippet

snippet fortios_system_alias "Configure alias command in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_alias:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_alias: # Configure alias command.
$0
endsnippet

snippet fortios_system_api_user "Configure API users in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_api_user:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_api_user: # Configure API users.
$0
endsnippet

snippet fortios_system_arp_table "Configure ARP table in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_arp_table:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_arp_table: # Configure ARP table.
$0
endsnippet

snippet fortios_system_auto_install "Configure USB auto installation in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_auto_install:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_auto_install: # Configure USB auto installation.
$0
endsnippet

snippet fortios_system_auto_script "Configure auto script in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_auto_script:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_auto_script: # Configure auto script.
$0
endsnippet

snippet fortios_system_automation_action "Action for automation stitches in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_automation_action:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_automation_action: # Action for automation stitches.
$0
endsnippet

snippet fortios_system_automation_destination "Automation destinations in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_automation_destination:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_automation_destination: # Automation destinations.
$0
endsnippet

snippet fortios_system_automation_stitch "Automation stitches in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_automation_stitch:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_automation_stitch: # Automation stitches.
$0
endsnippet

snippet fortios_system_automation_trigger "Trigger for automation stitches in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_automation_trigger:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_automation_trigger: # Trigger for automation stitches.
$0
endsnippet

snippet fortios_system_autoupdate_push_update "Configure push updates in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_autoupdate_push_update:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_autoupdate_push_update: # Configure push updates.
$0
endsnippet

snippet fortios_system_autoupdate_schedule "Configure update schedule in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_autoupdate_schedule:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_autoupdate_schedule: # Configure update schedule.
$0
endsnippet

snippet fortios_system_autoupdate_tunneling "Configure web proxy tunnelling for the FDN in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_autoupdate_tunneling:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_autoupdate_tunneling: # Configure web proxy tunnelling for the FDN.
$0
endsnippet

snippet fortios_system_central_management "Configure central management in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_central_management:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_central_management: # Configure central management.
$0
endsnippet

snippet fortios_system_cluster_sync "Configure FortiGate Session Life Support Protocol (FGSP) session synchronization in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_cluster_sync:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_cluster_sync: # Configure FortiGate Session Life Support Protocol (FGSP) session synchronization.
$0
endsnippet

snippet fortios_system_console "Configure console in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_console:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_console: # Configure console.
$0
endsnippet

snippet fortios_system_csf "Add this FortiGate to a Security Fabric or set up a new Security Fabric on this FortiGate in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_csf:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_csf: # Add this FortiGate to a Security Fabric or set up a new Security Fabric on this FortiGate.
$0
endsnippet

snippet fortios_system_custom_language "Configure custom languages in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_custom_language:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_custom_language: # Configure custom languages.
$0
endsnippet

snippet fortios_system_ddns "Configure DDNS in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_ddns:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_ddns: # Configure DDNS.
$0
endsnippet

snippet fortios_system_dedicated_mgmt "Configure dedicated management in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_dedicated_mgmt:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_dedicated_mgmt: # Configure dedicated management.
$0
endsnippet

snippet fortios_system_dhcp6_server "Configure DHCPv6 servers in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_dhcp6_server:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_dhcp6_server: # Configure DHCPv6 servers.
$0
endsnippet

snippet fortios_system_dhcp_server "Configure DHCP servers in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_dhcp_server:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_dhcp_server: # Configure DHCP servers.
$0
endsnippet

snippet fortios_system_dns "Configure DNS in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_dns:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_dns: # Configure DNS.
$0
endsnippet

snippet fortios_system_dns64 "Configure DNS64 in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_dns64:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_dns64: # Configure DNS64.
$0
endsnippet

snippet fortios_system_dns_database "Configure DNS databases in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_dns_database:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_dns_database: # Configure DNS databases.
$0
endsnippet

snippet fortios_system_dns_server "Configure DNS servers in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_dns_server:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_dns_server: # Configure DNS servers.
$0
endsnippet

snippet fortios_system_dscp_based_priority "Configure DSCP based priority table in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_dscp_based_priority:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_dscp_based_priority: # Configure DSCP based priority table.
$0
endsnippet

snippet fortios_system_email_server "Configure the email server used by the FortiGate various things. For example, for sending email messages to users to support user authentication features in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_email_server:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_email_server: # Configure the email server used by the FortiGate various things. For example, for sending email messages to users to support user authentication features.
$0
endsnippet

snippet fortios_system_external_resource "Configure external resource in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_external_resource:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_external_resource: # Configure external resource.
$0
endsnippet

snippet fortios_system_federated_upgrade "Coordinate federated upgrades within the Security Fabric in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_federated_upgrade:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_federated_upgrade: # Coordinate federated upgrades within the Security Fabric.
$0
endsnippet

snippet fortios_system_fips_cc "Configure FIPS-CC mode in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_fips_cc:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_fips_cc: # Configure FIPS-CC mode.
$0
endsnippet

snippet fortios_system_fm "Configure FM in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_fm:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_fm: # Configure FM.
$0
endsnippet

snippet fortios_system_fortiai "Configure FortiAI in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_fortiai:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_fortiai: # Configure FortiAI.
$0
endsnippet

snippet fortios_system_fortiguard "Configure FortiGuard services in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_fortiguard:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_fortiguard: # Configure FortiGuard services.
$0
endsnippet

snippet fortios_system_fortimanager "Configure FortiManager in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_fortimanager:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_fortimanager: # Configure FortiManager.
$0
endsnippet

snippet fortios_system_fortisandbox "Configure FortiSandbox in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_fortisandbox:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_fortisandbox: # Configure FortiSandbox.
$0
endsnippet

snippet fortios_system_fsso_polling "Configure Fortinet Single Sign On (FSSO) server in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_fsso_polling:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_fsso_polling: # Configure Fortinet Single Sign On (FSSO) server.
$0
endsnippet

snippet fortios_system_ftm_push "Configure FortiToken Mobile push services in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_ftm_push:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_ftm_push: # Configure FortiToken Mobile push services.
$0
endsnippet

snippet fortios_system_geneve "Configure GENEVE devices in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_geneve:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_geneve: # Configure GENEVE devices.
$0
endsnippet

snippet fortios_system_geoip_country "Define geoip country name-ID table in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_geoip_country:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_geoip_country: # Define geoip country name-ID table.
$0
endsnippet

snippet fortios_system_geoip_override "Configure geographical location mapping for IP address(es) to override mappings from FortiGuard in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_geoip_override:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_geoip_override: # Configure geographical location mapping for IP address(es) to override mappings from FortiGuard.
$0
endsnippet

snippet fortios_system_gi_gk "Configure Gi Firewall Gatekeeper in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_gi_gk:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_gi_gk: # Configure Gi Firewall Gatekeeper.
$0
endsnippet

snippet fortios_system_global "Configure global attributes in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_global:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_global: # Configure global attributes.
$0
endsnippet

snippet fortios_system_gre_tunnel "Configure GRE tunnel in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_gre_tunnel:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_gre_tunnel: # Configure GRE tunnel.
$0
endsnippet

snippet fortios_system_ha "Configure HA in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_ha:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_ha: # Configure HA.
$0
endsnippet

snippet fortios_system_ha_monitor "Configure HA monitor in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_ha_monitor:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_ha_monitor: # Configure HA monitor.
$0
endsnippet

snippet fortios_system_ike "Configure IKE global attributes in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_ike:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_ike: # Configure IKE global attributes.
$0
endsnippet

snippet fortios_system_interface "Configure interfaces in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_interface:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_interface: # Configure interfaces.
$0
endsnippet

snippet fortios_system_ipip_tunnel "Configure IP in IP Tunneling in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_ipip_tunnel:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_ipip_tunnel: # Configure IP in IP Tunneling.
$0
endsnippet

snippet fortios_system_ips "Configure IPS system settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_ips:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_ips: # Configure IPS system settings.
$0
endsnippet

snippet fortios_system_ips_urlfilter_dns "Configure IPS URL filter DNS servers in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_ips_urlfilter_dns:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_ips_urlfilter_dns: # Configure IPS URL filter DNS servers.
$0
endsnippet

snippet fortios_system_ips_urlfilter_dns6 "Configure IPS URL filter IPv6 DNS servers in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_ips_urlfilter_dns6:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_ips_urlfilter_dns6: # Configure IPS URL filter IPv6 DNS servers.
$0
endsnippet

snippet fortios_system_ipsec_aggregate "Configure an aggregate of IPsec tunnels in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_ipsec_aggregate:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_ipsec_aggregate: # Configure an aggregate of IPsec tunnels.
$0
endsnippet

snippet fortios_system_ipv6_neighbor_cache "Configure IPv6 neighbor cache table in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_ipv6_neighbor_cache:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_ipv6_neighbor_cache: # Configure IPv6 neighbor cache table.
$0
endsnippet

snippet fortios_system_ipv6_tunnel "Configure IPv6/IPv4 in IPv6 tunnel in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_ipv6_tunnel:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_ipv6_tunnel: # Configure IPv6/IPv4 in IPv6 tunnel.
$0
endsnippet

snippet fortios_system_isf_queue_profile "Create a queue profile of switch in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_isf_queue_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_isf_queue_profile: # Create a queue profile of switch.
$0
endsnippet

snippet fortios_system_link_monitor "Configure Link Health Monitor in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_link_monitor:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_link_monitor: # Configure Link Health Monitor.
$0
endsnippet

snippet fortios_system_lldp_network_policy "Configure LLDP network policy in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_lldp_network_policy:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_lldp_network_policy: # Configure LLDP network policy.
$0
endsnippet

snippet fortios_system_lte_modem "Configure USB LTE/WIMAX devices in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_lte_modem:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_lte_modem: # Configure USB LTE/WIMAX devices.
$0
endsnippet

snippet fortios_system_mac_address_table "Configure MAC address tables in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_mac_address_table:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_mac_address_table: # Configure MAC address tables.
$0
endsnippet

snippet fortios_system_management_tunnel "Management tunnel configuration in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_management_tunnel:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_management_tunnel: # Management tunnel configuration.
$0
endsnippet

snippet fortios_system_mem_mgr "Configure memory manager in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_mem_mgr:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_mem_mgr: # Configure memory manager.
$0
endsnippet

snippet fortios_system_mobile_tunnel "Configure Mobile tunnels, an implementation of Network Mobility (NEMO) extensions for Mobile IPv4 RFC5177 in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_mobile_tunnel:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_mobile_tunnel: # Configure Mobile tunnels, an implementation of Network Mobility (NEMO) extensions for Mobile IPv4 RFC5177.
$0
endsnippet

snippet fortios_system_modem "Configure MODEM in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_modem:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_modem: # Configure MODEM.
$0
endsnippet

snippet fortios_system_nat64 "Configure NAT64 in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_nat64:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_nat64: # Configure NAT64.
$0
endsnippet

snippet fortios_system_nd_proxy "Configure IPv6 neighbor discovery proxy (RFC4389) in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_nd_proxy:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_nd_proxy: # Configure IPv6 neighbor discovery proxy (RFC4389).
$0
endsnippet

snippet fortios_system_netflow "Configure NetFlow in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_netflow:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_netflow: # Configure NetFlow.
$0
endsnippet

snippet fortios_system_network_visibility "Configure network visibility settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_network_visibility:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_network_visibility: # Configure network visibility settings.
$0
endsnippet

snippet fortios_system_np6 "Configure NP6 attributes in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_np6:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_np6: # Configure NP6 attributes.
$0
endsnippet

snippet fortios_system_npu "Configure NPU attributes in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_npu:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_npu: # Configure NPU attributes.
$0
endsnippet

snippet fortios_system_ntp "Configure system NTP information in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_ntp:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_ntp: # Configure system NTP information.
$0
endsnippet

snippet fortios_system_object_tagging "Configure object tagging in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_object_tagging:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_object_tagging: # Configure object tagging.
$0
endsnippet

snippet fortios_system_password_policy "Configure password policy for locally defined administrator passwords and IPsec VPN pre-shared keys in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_password_policy:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_password_policy: # Configure password policy for locally defined administrator passwords and IPsec VPN pre-shared keys.
$0
endsnippet

snippet fortios_system_password_policy_guest_admin "Configure the password policy for guest administrators in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_password_policy_guest_admin:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_password_policy_guest_admin: # Configure the password policy for guest administrators.
$0
endsnippet

snippet fortios_system_performance_top "Display information about the top CPU processes in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_performance_top:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_performance_top: # Display information about the top CPU processes.
$0
endsnippet

snippet fortios_system_physical_switch "Configure physical switches in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_physical_switch:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_physical_switch: # Configure physical switches.
$0
endsnippet

snippet fortios_system_pppoe_interface "Configure the PPPoE interfaces in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_pppoe_interface:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_pppoe_interface: # Configure the PPPoE interfaces.
$0
endsnippet

snippet fortios_system_probe_response "Configure system probe response in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_probe_response:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_probe_response: # Configure system probe response.
$0
endsnippet

snippet fortios_system_proxy_arp "Configure proxy-ARP in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_proxy_arp:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_proxy_arp: # Configure proxy-ARP.
$0
endsnippet

snippet fortios_system_ptp "Configure system PTP information in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_ptp:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_ptp: # Configure system PTP information.
$0
endsnippet

snippet fortios_system_replacemsg_admin "Replacement messages in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_replacemsg_admin:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_replacemsg_admin: # Replacement messages.
$0
endsnippet

snippet fortios_system_replacemsg_alertmail "Replacement messages in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_replacemsg_alertmail:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_replacemsg_alertmail: # Replacement messages.
$0
endsnippet

snippet fortios_system_replacemsg_auth "Replacement messages in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_replacemsg_auth:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_replacemsg_auth: # Replacement messages.
$0
endsnippet

snippet fortios_system_replacemsg_automation "Replacement messages in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_replacemsg_automation:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_replacemsg_automation: # Replacement messages.
$0
endsnippet

snippet fortios_system_replacemsg_device_detection_portal "Replacement messages in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_replacemsg_device_detection_portal:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_replacemsg_device_detection_portal: # Replacement messages.
$0
endsnippet

snippet fortios_system_replacemsg_ec "Replacement messages in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_replacemsg_ec:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_replacemsg_ec: # Replacement messages.
$0
endsnippet

snippet fortios_system_replacemsg_fortiguard_wf "Replacement messages in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_replacemsg_fortiguard_wf:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_replacemsg_fortiguard_wf: # Replacement messages.
$0
endsnippet

snippet fortios_system_replacemsg_ftp "Replacement messages in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_replacemsg_ftp:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_replacemsg_ftp: # Replacement messages.
$0
endsnippet

snippet fortios_system_replacemsg_group "Configure replacement message groups in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_replacemsg_group:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_replacemsg_group: # Configure replacement message groups.
$0
endsnippet

snippet fortios_system_replacemsg_http "Replacement messages in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_replacemsg_http:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_replacemsg_http: # Replacement messages.
$0
endsnippet

snippet fortios_system_replacemsg_icap "Replacement messages in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_replacemsg_icap:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_replacemsg_icap: # Replacement messages.
$0
endsnippet

snippet fortios_system_replacemsg_image "Configure replacement message images in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_replacemsg_image:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_replacemsg_image: # Configure replacement message images.
$0
endsnippet

snippet fortios_system_replacemsg_mail "Replacement messages in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_replacemsg_mail:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_replacemsg_mail: # Replacement messages.
$0
endsnippet

snippet fortios_system_replacemsg_mm1 "Replacement messages in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_replacemsg_mm1:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_replacemsg_mm1: # Replacement messages.
$0
endsnippet

snippet fortios_system_replacemsg_mm3 "Replacement messages in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_replacemsg_mm3:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_replacemsg_mm3: # Replacement messages.
$0
endsnippet

snippet fortios_system_replacemsg_mm4 "Replacement messages in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_replacemsg_mm4:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_replacemsg_mm4: # Replacement messages.
$0
endsnippet

snippet fortios_system_replacemsg_mm7 "Replacement messages in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_replacemsg_mm7:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_replacemsg_mm7: # Replacement messages.
$0
endsnippet

snippet fortios_system_replacemsg_mms "Replacement messages in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_replacemsg_mms:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_replacemsg_mms: # Replacement messages.
$0
endsnippet

snippet fortios_system_replacemsg_nac_quar "Replacement messages in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_replacemsg_nac_quar:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_replacemsg_nac_quar: # Replacement messages.
$0
endsnippet

snippet fortios_system_replacemsg_nntp "Replacement messages in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_replacemsg_nntp:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_replacemsg_nntp: # Replacement messages.
$0
endsnippet

snippet fortios_system_replacemsg_spam "Replacement messages in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_replacemsg_spam:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_replacemsg_spam: # Replacement messages.
$0
endsnippet

snippet fortios_system_replacemsg_sslvpn "Replacement messages in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_replacemsg_sslvpn:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_replacemsg_sslvpn: # Replacement messages.
$0
endsnippet

snippet fortios_system_replacemsg_traffic_quota "Replacement messages in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_replacemsg_traffic_quota:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_replacemsg_traffic_quota: # Replacement messages.
$0
endsnippet

snippet fortios_system_replacemsg_utm "Replacement messages in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_replacemsg_utm:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_replacemsg_utm: # Replacement messages.
$0
endsnippet

snippet fortios_system_replacemsg_webproxy "Replacement messages in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_replacemsg_webproxy:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_replacemsg_webproxy: # Replacement messages.
$0
endsnippet

snippet fortios_system_resource_limits "Configure resource limits in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_resource_limits:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_resource_limits: # Configure resource limits.
$0
endsnippet

snippet fortios_system_saml "Global settings for SAML authentication in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_saml:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_saml: # Global settings for SAML authentication.
$0
endsnippet

snippet fortios_system_sdn_connector "Configure connection to SDN Connector in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_sdn_connector:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_sdn_connector: # Configure connection to SDN Connector.
$0
endsnippet

snippet fortios_system_sdwan "Configure redundant internet connections using SD-WAN (formerly virtual WAN link) in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_sdwan:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_sdwan: # Configure redundant internet connections using SD-WAN (formerly virtual WAN link).
$0
endsnippet

snippet fortios_system_session_helper "Configure session helper in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_session_helper:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_session_helper: # Configure session helper.
$0
endsnippet

snippet fortios_system_session_ttl "Configure global session TTL timers for this FortiGate in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_session_ttl:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_session_ttl: # Configure global session TTL timers for this FortiGate.
$0
endsnippet

snippet fortios_system_settings "Configure VDOM settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_settings:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_settings: # Configure VDOM settings.
$0
endsnippet

snippet fortios_system_sflow "Configure sFlow in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_sflow:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_sflow: # Configure sFlow.
$0
endsnippet

snippet fortios_system_sit_tunnel "Configure IPv6 tunnel over IPv4 in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_sit_tunnel:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_sit_tunnel: # Configure IPv6 tunnel over IPv4.
$0
endsnippet

snippet fortios_system_smc_ntp "Configure SMC NTP information in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_smc_ntp:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_smc_ntp: # Configure SMC NTP information.
$0
endsnippet

snippet fortios_system_sms_server "Configure SMS server for sending SMS messages to support user authentication in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_sms_server:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_sms_server: # Configure SMS server for sending SMS messages to support user authentication.
$0
endsnippet

snippet fortios_system_snmp_community "SNMP community configuration in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_snmp_community:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_snmp_community: # SNMP community configuration.
$0
endsnippet

snippet fortios_system_snmp_sysinfo "SNMP system info configuration in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_snmp_sysinfo:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_snmp_sysinfo: # SNMP system info configuration.
$0
endsnippet

snippet fortios_system_snmp_user "SNMP user configuration in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_snmp_user:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_snmp_user: # SNMP user configuration.
$0
endsnippet

snippet fortios_system_speed_test_schedule "Speed test schedule for each interface in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_speed_test_schedule:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_speed_test_schedule: # Speed test schedule for each interface.
$0
endsnippet

snippet fortios_system_speed_test_server "Configure speed test server list in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_speed_test_server:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_speed_test_server: # Configure speed test server list.
$0
endsnippet

snippet fortios_system_sso_admin "Configure SSO admin users in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_sso_admin:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_sso_admin: # Configure SSO admin users.
$0
endsnippet

snippet fortios_system_sso_forticloud_admin "Configure FortiCloud SSO admin users in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_sso_forticloud_admin:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_sso_forticloud_admin: # Configure FortiCloud SSO admin users.
$0
endsnippet

snippet fortios_system_standalone_cluster "Configure FortiGate Session Life Support Protocol (FGSP) cluster attributes in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_standalone_cluster:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_standalone_cluster: # Configure FortiGate Session Life Support Protocol (FGSP) cluster attributes.
$0
endsnippet

snippet fortios_system_storage "Configure logical storage in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_storage:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_storage: # Configure logical storage.
$0
endsnippet

snippet fortios_system_stp "Configure Spanning Tree Protocol (STP) in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_stp:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_stp: # Configure Spanning Tree Protocol (STP).
$0
endsnippet

snippet fortios_system_switch_interface "Configure software switch interfaces by grouping physical and WiFi interfaces in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_switch_interface:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_switch_interface: # Configure software switch interfaces by grouping physical and WiFi interfaces.
$0
endsnippet

snippet fortios_system_tos_based_priority "Configure Type of Service (ToS) based priority table to set network traffic priorities in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_tos_based_priority:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_tos_based_priority: # Configure Type of Service (ToS) based priority table to set network traffic priorities.
$0
endsnippet

snippet fortios_system_vdom "Configure virtual domain in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_vdom:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_vdom: # Configure virtual domain.
$0
endsnippet

snippet fortios_system_vdom_dns "Configure DNS servers for a non-management VDOM in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_vdom_dns:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_vdom_dns: # Configure DNS servers for a non-management VDOM.
$0
endsnippet

snippet fortios_system_vdom_exception "Global configuration objects that can be configured independently for all VDOMs or for the defined VDOM scope in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_vdom_exception:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_vdom_exception: # Global configuration objects that can be configured independently for all VDOMs or for the defined VDOM scope.
$0
endsnippet

snippet fortios_system_vdom_link "Configure VDOM links in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_vdom_link:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_vdom_link: # Configure VDOM links.
$0
endsnippet

snippet fortios_system_vdom_netflow "Configure NetFlow per VDOM in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_vdom_netflow:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_vdom_netflow: # Configure NetFlow per VDOM.
$0
endsnippet

snippet fortios_system_vdom_property "Configure VDOM property in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_vdom_property:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_vdom_property: # Configure VDOM property.
$0
endsnippet

snippet fortios_system_vdom_radius_server "Configure a RADIUS server to use as a RADIUS Single Sign On (RSSO) server for this VDOM in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_vdom_radius_server:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_vdom_radius_server: # Configure a RADIUS server to use as a RADIUS Single Sign On (RSSO) server for this VDOM.
$0
endsnippet

snippet fortios_system_vdom_sflow "Configure sFlow per VDOM to add or change the IP address and UDP port that FortiGate sFlow agents in this VDOM use to send sFlow datagrams to an sFlow collector in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_vdom_sflow:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_vdom_sflow: # Configure sFlow per VDOM to add or change the IP address and UDP port that FortiGate sFlow agents in this VDOM use to send sFlow datagrams to an sFlow collector.
$0
endsnippet

snippet fortios_system_virtual_switch "Configure virtual hardware switch interfaces in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_virtual_switch:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_virtual_switch: # Configure virtual hardware switch interfaces.
$0
endsnippet

snippet fortios_system_virtual_wan_link "Configure redundant internet connections using SD-WAN (formerly virtual WAN link) in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_virtual_wan_link:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_virtual_wan_link: # Configure redundant internet connections using SD-WAN (formerly virtual WAN link).
$0
endsnippet

snippet fortios_system_virtual_wire_pair "Configure virtual wire pairs in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_virtual_wire_pair:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_virtual_wire_pair: # Configure virtual wire pairs.
$0
endsnippet

snippet fortios_system_vne_tunnel "Configure virtual network enabler tunnel in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_vne_tunnel:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_vne_tunnel: # Configure virtual network enabler tunnel.
$0
endsnippet

snippet fortios_system_vxlan "Configure VXLAN devices in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_vxlan:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_vxlan: # Configure VXLAN devices.
$0
endsnippet

snippet fortios_system_wccp "Configure WCCP in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_wccp:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_wccp: # Configure WCCP.
$0
endsnippet

snippet fortios_system_zone "Configure zones to group two or more interfaces. When a zone is created you can configure policies for the zone instead of individual interfaces in the zone in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_system_zone:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# system_zone: # Configure zones to group two or more interfaces. When a zone is created you can configure policies for the zone instead of individual interfaces in the zone.
$0
endsnippet

snippet fortios_user_adgrp "Configure FSSO groups in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_user_adgrp:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# user_adgrp: # Configure FSSO groups.
$0
endsnippet

snippet fortios_user_certificate "Configure certificate users in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_user_certificate:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# user_certificate: # Configure certificate users.
$0
endsnippet

snippet fortios_user_device "Configure devices in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_user_device:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# user_device: # Configure devices.
$0
endsnippet

snippet fortios_user_device_access_list "Configure device access control lists in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_user_device_access_list:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# user_device_access_list: # Configure device access control lists.
$0
endsnippet

snippet fortios_user_device_category "Configure device categories in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_user_device_category:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# user_device_category: # Configure device categories.
$0
endsnippet

snippet fortios_user_device_group "Configure device groups in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_user_device_group:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# user_device_group: # Configure device groups.
$0
endsnippet

snippet fortios_user_domain_controller "Configure domain controller entries in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_user_domain_controller:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# user_domain_controller: # Configure domain controller entries.
$0
endsnippet

snippet fortios_user_exchange "Configure MS Exchange server entries in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_user_exchange:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# user_exchange: # Configure MS Exchange server entries.
$0
endsnippet

snippet fortios_user_fortitoken "Configure FortiToken in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_user_fortitoken:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# user_fortitoken: # Configure FortiToken.
$0
endsnippet

snippet fortios_user_fsso "Configure Fortinet Single Sign On (FSSO) agents in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_user_fsso:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# user_fsso: # Configure Fortinet Single Sign On (FSSO) agents.
$0
endsnippet

snippet fortios_user_fsso_polling "Configure FSSO active directory servers for polling mode in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_user_fsso_polling:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# user_fsso_polling: # Configure FSSO active directory servers for polling mode.
$0
endsnippet

snippet fortios_user_group "Configure user groups in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_user_group:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# user_group: # Configure user groups.
$0
endsnippet

snippet fortios_user_krb_keytab "Configure Kerberos keytab entries in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_user_krb_keytab:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# user_krb_keytab: # Configure Kerberos keytab entries.
$0
endsnippet

snippet fortios_user_ldap "Configure LDAP server entries in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_user_ldap:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# user_ldap: # Configure LDAP server entries.
$0
endsnippet

snippet fortios_user_local "Configure local users in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_user_local:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# user_local: # Configure local users.
$0
endsnippet

snippet fortios_user_nac_policy "Configure NAC policy matching pattern to identify matching NAC devices in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_user_nac_policy:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# user_nac_policy: # Configure NAC policy matching pattern to identify matching NAC devices.
$0
endsnippet

snippet fortios_user_password_policy "Configure user password policy in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_user_password_policy:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# user_password_policy: # Configure user password policy.
$0
endsnippet

snippet fortios_user_peer "Configure peer users in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_user_peer:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# user_peer: # Configure peer users.
$0
endsnippet

snippet fortios_user_peergrp "Configure peer groups in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_user_peergrp:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# user_peergrp: # Configure peer groups.
$0
endsnippet

snippet fortios_user_pop3 "POP3 server entry configuration in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_user_pop3:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# user_pop3: # POP3 server entry configuration.
$0
endsnippet

snippet fortios_user_quarantine "Configure quarantine support in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_user_quarantine:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# user_quarantine: # Configure quarantine support.
$0
endsnippet

snippet fortios_user_radius "Configure RADIUS server entries in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_user_radius:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# user_radius: # Configure RADIUS server entries.
$0
endsnippet

snippet fortios_user_saml "SAML server entry configuration in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_user_saml:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# user_saml: # SAML server entry configuration.
$0
endsnippet

snippet fortios_user_security_exempt_list "Configure security exemption list in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_user_security_exempt_list:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# user_security_exempt_list: # Configure security exemption list.
$0
endsnippet

snippet fortios_user_setting "Configure user authentication setting in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_user_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# user_setting: # Configure user authentication setting.
$0
endsnippet

snippet fortios_user_tacacsplus "Configure TACACS+ server entries in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_user_tacacsplus:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# user_tacacsplus: # Configure TACACS+ server entries.
$0
endsnippet

snippet fortios_videofilter_profile "Configure VideoFilter profile in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_videofilter_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# videofilter_profile: # Configure VideoFilter profile.
$0
endsnippet

snippet fortios_videofilter_youtube_channel_filter "Configure YouTube channel filter in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_videofilter_youtube_channel_filter:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# videofilter_youtube_channel_filter: # Configure YouTube channel filter.
$0
endsnippet

snippet fortios_videofilter_youtube_key "Configure YouTube API keys in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_videofilter_youtube_key:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# videofilter_youtube_key: # Configure YouTube API keys.
$0
endsnippet

snippet fortios_voip_profile "Configure VoIP profiles in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_voip_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# voip_profile: # Configure VoIP profiles.
$0
endsnippet

snippet fortios_vpn_certificate_ca "CA certificate in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_vpn_certificate_ca:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# vpn_certificate_ca: # CA certificate.
$0
endsnippet

snippet fortios_vpn_certificate_crl "Certificate Revocation List as a PEM file in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_vpn_certificate_crl:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# vpn_certificate_crl: # Certificate Revocation List as a PEM file.
$0
endsnippet

snippet fortios_vpn_certificate_local "Local keys and certificates in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_vpn_certificate_local:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# vpn_certificate_local: # Local keys and certificates.
$0
endsnippet

snippet fortios_vpn_certificate_ocsp_server "OCSP server configuration in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_vpn_certificate_ocsp_server:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# vpn_certificate_ocsp_server: # OCSP server configuration.
$0
endsnippet

snippet fortios_vpn_certificate_remote "Remote certificate as a PEM file in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_vpn_certificate_remote:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# vpn_certificate_remote: # Remote certificate as a PEM file.
$0
endsnippet

snippet fortios_vpn_certificate_setting "VPN certificate setting in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_vpn_certificate_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# vpn_certificate_setting: # VPN certificate setting.
$0
endsnippet

snippet fortios_vpn_ike_gateway "List gateways in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_vpn_ike_gateway:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# vpn_ike_gateway: # List gateways.
$0
endsnippet

snippet fortios_vpn_ipsec_concentrator "Concentrator configuration in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_vpn_ipsec_concentrator:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# vpn_ipsec_concentrator: # Concentrator configuration.
$0
endsnippet

snippet fortios_vpn_ipsec_forticlient "Configure FortiClient policy realm in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_vpn_ipsec_forticlient:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# vpn_ipsec_forticlient: # Configure FortiClient policy realm.
$0
endsnippet

snippet fortios_vpn_ipsec_manualkey "Configure IPsec manual keys in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_vpn_ipsec_manualkey:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# vpn_ipsec_manualkey: # Configure IPsec manual keys.
$0
endsnippet

snippet fortios_vpn_ipsec_manualkey_interface "Configure IPsec manual keys in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_vpn_ipsec_manualkey_interface:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# vpn_ipsec_manualkey_interface: # Configure IPsec manual keys.
$0
endsnippet

snippet fortios_vpn_ipsec_phase1 "Configure VPN remote gateway in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_vpn_ipsec_phase1:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# vpn_ipsec_phase1: # Configure VPN remote gateway.
$0
endsnippet

snippet fortios_vpn_ipsec_phase1_interface "Configure VPN remote gateway in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_vpn_ipsec_phase1_interface:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# vpn_ipsec_phase1_interface: # Configure VPN remote gateway.
$0
endsnippet

snippet fortios_vpn_ipsec_phase2 "Configure VPN autokey tunnel in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_vpn_ipsec_phase2:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# vpn_ipsec_phase2: # Configure VPN autokey tunnel.
$0
endsnippet

snippet fortios_vpn_ipsec_phase2_interface "Configure VPN autokey tunnel in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_vpn_ipsec_phase2_interface:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# vpn_ipsec_phase2_interface: # Configure VPN autokey tunnel.
$0
endsnippet

snippet fortios_vpn_l2tp "Configure L2TP in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_vpn_l2tp:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# vpn_l2tp: # Configure L2TP.
$0
endsnippet

snippet fortios_vpn_ocvpn "Configure Overlay Controller VPN settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_vpn_ocvpn:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# vpn_ocvpn: # Configure Overlay Controller VPN settings.
$0
endsnippet

snippet fortios_vpn_pptp "Configure PPTP in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_vpn_pptp:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# vpn_pptp: # Configure PPTP.
$0
endsnippet

snippet fortios_vpn_ssl_client "clien in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_vpn_ssl_client:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# vpn_ssl_client: # client
$0
endsnippet

snippet fortios_vpn_ssl_settings "Configure SSL VPN in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_vpn_ssl_settings:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# vpn_ssl_settings: # Configure SSL VPN.
$0
endsnippet

snippet fortios_vpn_ssl_web_host_check_software "SSL-VPN host check software in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_vpn_ssl_web_host_check_software:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# vpn_ssl_web_host_check_software: # SSL-VPN host check software.
$0
endsnippet

snippet fortios_vpn_ssl_web_portal "Portal in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_vpn_ssl_web_portal:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# vpn_ssl_web_portal: # Portal.
$0
endsnippet

snippet fortios_vpn_ssl_web_realm "Realm in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_vpn_ssl_web_realm:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# vpn_ssl_web_realm: # Realm.
$0
endsnippet

snippet fortios_vpn_ssl_web_user_bookmark "Configure SSL VPN user bookmark in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_vpn_ssl_web_user_bookmark:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# vpn_ssl_web_user_bookmark: # Configure SSL VPN user bookmark.
$0
endsnippet

snippet fortios_vpn_ssl_web_user_group_bookmark "Configure SSL VPN user group bookmark in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_vpn_ssl_web_user_group_bookmark:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# vpn_ssl_web_user_group_bookmark: # Configure SSL VPN user group bookmark.
$0
endsnippet

snippet fortios_waf_main_class "Hidden table for datasource in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_waf_main_class:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# waf_main_class: # Hidden table for datasource.
$0
endsnippet

snippet fortios_waf_profile "Web application firewall configuration in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_waf_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# waf_profile: # Web application firewall configuration.
$0
endsnippet

snippet fortios_waf_signature "Hidden table for datasource in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_waf_signature:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# waf_signature: # Hidden table for datasource.
$0
endsnippet

snippet fortios_waf_sub_class "Hidden table for datasource in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_waf_sub_class:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# waf_sub_class: # Hidden table for datasource.
$0
endsnippet

snippet fortios_wanopt_auth_group "Configure WAN optimization authentication groups in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wanopt_auth_group:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wanopt_auth_group: # Configure WAN optimization authentication groups.
$0
endsnippet

snippet fortios_wanopt_cache_service "Designate cache-service for wan-optimization and webcache in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wanopt_cache_service:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wanopt_cache_service: # Designate cache-service for wan-optimization and webcache.
$0
endsnippet

snippet fortios_wanopt_content_delivery_network_rule "Configure WAN optimization content delivery network rules in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wanopt_content_delivery_network_rule:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wanopt_content_delivery_network_rule: # Configure WAN optimization content delivery network rules.
$0
endsnippet

snippet fortios_wanopt_peer "Configure WAN optimization peers in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wanopt_peer:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wanopt_peer: # Configure WAN optimization peers.
$0
endsnippet

snippet fortios_wanopt_profile "Configure WAN optimization profiles in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wanopt_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wanopt_profile: # Configure WAN optimization profiles.
$0
endsnippet

snippet fortios_wanopt_remote_storage "Configure a remote cache device as Web cache storage in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wanopt_remote_storage:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wanopt_remote_storage: # Configure a remote cache device as Web cache storage.
$0
endsnippet

snippet fortios_wanopt_settings "Configure WAN optimization settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wanopt_settings:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wanopt_settings: # Configure WAN optimization settings.
$0
endsnippet

snippet fortios_wanopt_webcache "Configure global Web cache settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wanopt_webcache:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wanopt_webcache: # Configure global Web cache settings.
$0
endsnippet

snippet fortios_web_proxy_debug_url "Configure debug URL addresses in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_web_proxy_debug_url:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# web_proxy_debug_url: # Configure debug URL addresses.
$0
endsnippet

snippet fortios_web_proxy_explicit "Configure explicit Web proxy settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_web_proxy_explicit:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# web_proxy_explicit: # Configure explicit Web proxy settings.
$0
endsnippet

snippet fortios_web_proxy_forward_server "Configure forward-server addresses in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_web_proxy_forward_server:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# web_proxy_forward_server: # Configure forward-server addresses.
$0
endsnippet

snippet fortios_web_proxy_forward_server_group "Configure a forward server group consisting or multiple forward servers. Supports failover and load balancing in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_web_proxy_forward_server_group:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# web_proxy_forward_server_group: # Configure a forward server group consisting or multiple forward servers. Supports failover and load balancing.
$0
endsnippet

snippet fortios_web_proxy_global "Configure Web proxy global settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_web_proxy_global:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# web_proxy_global: # Configure Web proxy global settings.
$0
endsnippet

snippet fortios_web_proxy_profile "Configure web proxy profiles in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_web_proxy_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# web_proxy_profile: # Configure web proxy profiles.
$0
endsnippet

snippet fortios_web_proxy_url_match "Exempt URLs from web proxy forwarding and caching in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_web_proxy_url_match:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# web_proxy_url_match: # Exempt URLs from web proxy forwarding and caching.
$0
endsnippet

snippet fortios_web_proxy_wisp "Configure Wireless Internet service provider (WISP) servers in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_web_proxy_wisp:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# web_proxy_wisp: # Configure Wireless Internet service provider (WISP) servers.
$0
endsnippet

snippet fortios_webfilter_content "Configure Web filter banned word table in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_webfilter_content:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# webfilter_content: # Configure Web filter banned word table.
$0
endsnippet

snippet fortios_webfilter_content_header "Configure content types used by Web filter in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_webfilter_content_header:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# webfilter_content_header: # Configure content types used by Web filter.
$0
endsnippet

snippet fortios_webfilter_fortiguard "Configure FortiGuard Web Filter service in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_webfilter_fortiguard:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# webfilter_fortiguard: # Configure FortiGuard Web Filter service.
$0
endsnippet

snippet fortios_webfilter_ftgd_local_cat "Configure FortiGuard Web Filter local categories in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_webfilter_ftgd_local_cat:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# webfilter_ftgd_local_cat: # Configure FortiGuard Web Filter local categories.
$0
endsnippet

snippet fortios_webfilter_ftgd_local_rating "Configure local FortiGuard Web Filter local ratings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_webfilter_ftgd_local_rating:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# webfilter_ftgd_local_rating: # Configure local FortiGuard Web Filter local ratings.
$0
endsnippet

snippet fortios_webfilter_ips_urlfilter_cache_setting "Configure IPS URL filter cache settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_webfilter_ips_urlfilter_cache_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# webfilter_ips_urlfilter_cache_setting: # Configure IPS URL filter cache settings.
$0
endsnippet

snippet fortios_webfilter_ips_urlfilter_setting "Configure IPS URL filter settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_webfilter_ips_urlfilter_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# webfilter_ips_urlfilter_setting: # Configure IPS URL filter settings.
$0
endsnippet

snippet fortios_webfilter_ips_urlfilter_setting6 "Configure IPS URL filter settings for IPv6 in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_webfilter_ips_urlfilter_setting6:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# webfilter_ips_urlfilter_setting6: # Configure IPS URL filter settings for IPv6.
$0
endsnippet

snippet fortios_webfilter_override "Configure FortiGuard Web Filter administrative overrides in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_webfilter_override:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# webfilter_override: # Configure FortiGuard Web Filter administrative overrides.
$0
endsnippet

snippet fortios_webfilter_profile "Configure Web filter profiles in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_webfilter_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# webfilter_profile: # Configure Web filter profiles.
$0
endsnippet

snippet fortios_webfilter_search_engine "Configure web filter search engines in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_webfilter_search_engine:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# webfilter_search_engine: # Configure web filter search engines.
$0
endsnippet

snippet fortios_webfilter_status "Display rating info in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_webfilter_status:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# webfilter_status: # Display rating info.
$0
endsnippet

snippet fortios_webfilter_urlfilter "Configure URL filter lists in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_webfilter_urlfilter:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# webfilter_urlfilter: # Configure URL filter lists.
$0
endsnippet

snippet fortios_wireless_controller_access_control_list "Configure WiFi bridge access control list in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_access_control_list:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_access_control_list: # Configure WiFi bridge access control list.
$0
endsnippet

snippet fortios_wireless_controller_address "Configure the client with its MAC address in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_address:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_address: # Configure the client with its MAC address.
$0
endsnippet

snippet fortios_wireless_controller_addrgrp "Configure the MAC address group in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_addrgrp:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_addrgrp: # Configure the MAC address group.
$0
endsnippet

snippet fortios_wireless_controller_ap_status "Configure access point status (rogue | accepted | suppressed) in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_ap_status:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_ap_status: # Configure access point status (rogue | accepted | suppressed).
$0
endsnippet

snippet fortios_wireless_controller_apcfg_profile "Configure AP local configuration profiles in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_apcfg_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_apcfg_profile: # Configure AP local configuration profiles.
$0
endsnippet

snippet fortios_wireless_controller_arrp_profile "Configure WiFi Automatic Radio Resource Provisioning (ARRP) profiles in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_arrp_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_arrp_profile: # Configure WiFi Automatic Radio Resource Provisioning (ARRP) profiles.
$0
endsnippet

snippet fortios_wireless_controller_ble_profile "Configure Bluetooth Low Energy profile in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_ble_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_ble_profile: # Configure Bluetooth Low Energy profile.
$0
endsnippet

snippet fortios_wireless_controller_bonjour_profile "Configure Bonjour profiles. Bonjour is Apple's zero configuration networking protocol. Bonjour profiles allow APs and FortiAPs to connnect to networks using Bonjour in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_bonjour_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_bonjour_profile: # Configure Bonjour profiles. Bonjour is Apple's zero configuration networking protocol. Bonjour profiles allow APs and FortiAPs to connnect to networks using Bonjour.
$0
endsnippet

snippet fortios_wireless_controller_client_info "Wireless controller client-info in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_client_info:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_client_info: # Wireless controller client-info.
$0
endsnippet

snippet fortios_wireless_controller_global "Configure wireless controller global settings in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_global:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_global: # Configure wireless controller global settings.
$0
endsnippet

snippet fortios_wireless_controller_hotspot20_anqp_3gpp_cellular "Configure 3GPP public land mobile network (PLMN) in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_hotspot20_anqp_3gpp_cellular:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_hotspot20_anqp_3gpp_cellular: # Configure 3GPP public land mobile network (PLMN).
$0
endsnippet

snippet fortios_wireless_controller_hotspot20_anqp_ip_address_type "Configure IP address type availability in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_hotspot20_anqp_ip_address_type:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_hotspot20_anqp_ip_address_type: # Configure IP address type availability.
$0
endsnippet

snippet fortios_wireless_controller_hotspot20_anqp_nai_realm "Configure network access identifier (NAI) realm in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_hotspot20_anqp_nai_realm:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_hotspot20_anqp_nai_realm: # Configure network access identifier (NAI) realm.
$0
endsnippet

snippet fortios_wireless_controller_hotspot20_anqp_network_auth_type "Configure network authentication type in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_hotspot20_anqp_network_auth_type:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_hotspot20_anqp_network_auth_type: # Configure network authentication type.
$0
endsnippet

snippet fortios_wireless_controller_hotspot20_anqp_roaming_consortium "Configure roaming consortium in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_hotspot20_anqp_roaming_consortium:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_hotspot20_anqp_roaming_consortium: # Configure roaming consortium.
$0
endsnippet

snippet fortios_wireless_controller_hotspot20_anqp_venue_name "Configure venue name duple in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_hotspot20_anqp_venue_name:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_hotspot20_anqp_venue_name: # Configure venue name duple.
$0
endsnippet

snippet fortios_wireless_controller_hotspot20_h2qp_conn_capability "Configure connection capability in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_hotspot20_h2qp_conn_capability:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_hotspot20_h2qp_conn_capability: # Configure connection capability.
$0
endsnippet

snippet fortios_wireless_controller_hotspot20_h2qp_operator_name "Configure operator friendly name in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_hotspot20_h2qp_operator_name:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_hotspot20_h2qp_operator_name: # Configure operator friendly name.
$0
endsnippet

snippet fortios_wireless_controller_hotspot20_h2qp_osu_provider "Configure online sign up (OSU) provider list in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_hotspot20_h2qp_osu_provider:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_hotspot20_h2qp_osu_provider: # Configure online sign up (OSU) provider list.
$0
endsnippet

snippet fortios_wireless_controller_hotspot20_h2qp_wan_metric "Configure WAN metrics in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_hotspot20_h2qp_wan_metric:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_hotspot20_h2qp_wan_metric: # Configure WAN metrics.
$0
endsnippet

snippet fortios_wireless_controller_hotspot20_hs_profile "Configure hotspot profile in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_hotspot20_hs_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_hotspot20_hs_profile: # Configure hotspot profile.
$0
endsnippet

snippet fortios_wireless_controller_hotspot20_icon "Configure OSU provider icon in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_hotspot20_icon:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_hotspot20_icon: # Configure OSU provider icon.
$0
endsnippet

snippet fortios_wireless_controller_hotspot20_qos_map "Configure QoS map set in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_hotspot20_qos_map:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_hotspot20_qos_map: # Configure QoS map set.
$0
endsnippet

snippet fortios_wireless_controller_inter_controller "Configure inter wireless controller operation in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_inter_controller:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_inter_controller: # Configure inter wireless controller operation.
$0
endsnippet

snippet fortios_wireless_controller_log "Configure wireless controller event log filters in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_log:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_log: # Configure wireless controller event log filters.
$0
endsnippet

snippet fortios_wireless_controller_mpsk_profile "Configure MPSK profile in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_mpsk_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_mpsk_profile: # Configure MPSK profile.
$0
endsnippet

snippet fortios_wireless_controller_nac_profile "Configure WiFi network access control (NAC) profiles in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_nac_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_nac_profile: # Configure WiFi network access control (NAC) profiles.
$0
endsnippet

snippet fortios_wireless_controller_qos_profile "Configure WiFi quality of service (QoS) profiles in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_qos_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_qos_profile: # Configure WiFi quality of service (QoS) profiles.
$0
endsnippet

snippet fortios_wireless_controller_region "Configure FortiAP regions (for floor plans and maps) in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_region:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_region: # Configure FortiAP regions (for floor plans and maps).
$0
endsnippet

snippet fortios_wireless_controller_rf_analysis "Wireless controller rf-analysis in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_rf_analysis:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_rf_analysis: # Wireless controller rf-analysis.
$0
endsnippet

snippet fortios_wireless_controller_setting "VDOM wireless controller configuration in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_setting:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_setting: # VDOM wireless controller configuration.
$0
endsnippet

snippet fortios_wireless_controller_snmp "Configure SNMP in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_snmp:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_snmp: # Configure SNMP.
$0
endsnippet

snippet fortios_wireless_controller_spectral_info "Wireless controller spectrum analysis in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_spectral_info:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_spectral_info: # Wireless controller spectrum analysis.
$0
endsnippet

snippet fortios_wireless_controller_ssid_policy "Configure WiFi SSID policies in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_ssid_policy:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_ssid_policy: # Configure WiFi SSID policies.
$0
endsnippet

snippet fortios_wireless_controller_status "Wireless controller status in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_status:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_status: # Wireless controller status.
$0
endsnippet

snippet fortios_wireless_controller_timers "Configure CAPWAP timers in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_timers:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_timers: # Configure CAPWAP timers.
$0
endsnippet

snippet fortios_wireless_controller_utm_profile "Configure UTM (Unified Threat Management) profile in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_utm_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_utm_profile: # Configure UTM (Unified Threat Management) profile.
$0
endsnippet

snippet fortios_wireless_controller_vap "Configure Virtual Access Points (VAPs) in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_vap:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_vap: # Configure Virtual Access Points (VAPs).
$0
endsnippet

snippet fortios_wireless_controller_vap_group "Configure virtual Access Point (VAP) groups in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_vap_group:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_vap_group: # Configure virtual Access Point (VAP) groups.
$0
endsnippet

snippet fortios_wireless_controller_vap_status "Wireless controller VAP-status in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_vap_status:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_vap_status: # Wireless controller VAP-status.
$0
endsnippet

snippet fortios_wireless_controller_wag_profile "Configure wireless access gateway (WAG) profiles used for tunnels on AP in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_wag_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_wag_profile: # Configure wireless access gateway (WAG) profiles used for tunnels on AP.
$0
endsnippet

snippet fortios_wireless_controller_wids_profile "Configure wireless intrusion detection system (WIDS) profiles in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_wids_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_wids_profile: # Configure wireless intrusion detection system (WIDS) profiles.
$0
endsnippet

snippet fortios_wireless_controller_wtp "Configure Wireless Termination Points (WTPs), that is, FortiAPs or APs to be managed by FortiGate in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_wtp:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_wtp: # Configure Wireless Termination Points (WTPs), that is, FortiAPs or APs to be managed by FortiGate.
$0
endsnippet

snippet fortios_wireless_controller_wtp_group "Configure WTP groups in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_wtp_group:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_wtp_group: # Configure WTP groups.
$0
endsnippet

snippet fortios_wireless_controller_wtp_profile "Configure WTP profiles or FortiAP profiles that define radio settings for manageable FortiAP platforms in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_wtp_profile:
		state: ${2:present|absent}
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_wtp_profile: # Configure WTP profiles or FortiAP profiles that define radio settings for manageable FortiAP platforms.
$0
endsnippet

snippet fortios_wireless_controller_wtp_status "Wireless controller WTP-status in Fortinet's FortiOS and FortiGate." b
- name: $1
	fortios_wireless_controller_wtp_status:
		# access_token: # Token-based authentication. Generated from GUI of Fortigate.
		# enable_log: no
		# vdom: root
		# member_path: # Member attribute path to operate on.
		# member_state: present|absent
		# wireless_controller_wtp_status: # Wireless controller WTP-status.
$0
endsnippet

snippet gluster_heal_info "Gather information on self-heal or rebalance status" b
- name: $1
	gluster_heal_info:
		name: ${2:# The volume name.}
		# status_filter: #self-heal|rebalance
$0
endsnippet

snippet gluster_peer "Attach/Detach peers to/from the cluster" b
- name: $1
	gluster_peer:
		state: ${2:#present|absent}
		nodes: ${3:# List of nodes that have to be probed into the pool.}
		# force: false
$0
endsnippet

snippet gluster_volume "Manage GlusterFS volumes" b
- name: $1
	gluster_volume:
		name: ${2:# The volume name.}
		state: ${3:absent|present|started|stopped}
		# cluster: # List of hosts to use for probing and brick setup.
		# host: # Override local hostname (for peer probing purposes).
		# replicas: # Replica count for volume.
		# arbiters: # Arbiter count for volume.
		# stripes: # Stripe count for volume.
		# disperses: # Disperse count for volume.
		# redundancies: # Redundancy count for volume.
		# transport: #tcp|rdma|tcp,rdma
		# bricks: # Brick paths on servers. Multiple brick paths can be separated by commas.
		# start_on_create: yes
		# rebalance: no
		# directory: # Directory for limit-usage.
		# options: # A dictionary/hash with options/settings for the volume.
		# quota: # Quota value for limit-usage (be sure to use 10.0MB instead of 10MB, see quota list).
		# force: # If brick is being created in the root partition, module will fail. Set force to true to override this behaviour.
$0
endsnippet

snippet gcp_appengine_firewall_rule "Creates a GCP FirewallRule" b
- name: $1
	gcp_appengine_firewall_rule:
		source_range: ${2:# IP address or range, defined using CIDR notation, of requests that this rule applies to.}
		action: ${3:# The action to take if this rule matches.}
		auth_kind: ${4:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional string description of this rule.
		# priority: # A positive integer that defines the order of rule evaluation.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_appengine_firewall_rule_info "Gather info for GCP FirewallRule" b
- name: $1
	gcp_appengine_firewall_rule_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_bigquery_dataset "Creates a GCP Dataset" b
- name: $1
	gcp_bigquery_dataset:
		dataset_reference: ${2:# A reference that identifies the dataset.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# state: #present|absent
		# name: # Dataset name.
		# access: # An array of objects that define dataset access for one or more entities.
		# default_table_expiration_ms: # The default lifetime of all tables in the dataset, in milliseconds.
		# default_partition_expiration_ms: # The default partition expiration for all partitioned tables in the dataset, in milliseconds.
		# description: # A user-friendly description of the dataset.
		# friendly_name: # A descriptive name for the dataset.
		# labels: # The labels associated with this dataset. You can use these to organize and group your datasets .
		# location: US
		# default_encryption_configuration: # The default encryption key for all tables in the dataset. Once this property is set, all newly-created partitioned tables in the dataset will have encryption key set to this value, unless table creation request (or query) overrides the key.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_bigquery_dataset_info "Gather info for GCP Dataset" b
- name: $1
	gcp_bigquery_dataset_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_bigquery_table "Creates a GCP Table" b
- name: $1
	gcp_bigquery_table:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# state: #present|absent
		# table_reference: # Reference describing the ID of this table.
		# clustering: # One or more fields on which data should be clustered. Only top-level, non-repeated, simple-type fields are supported. When you cluster a table using multiple columns, the order of columns you specify is important. The order of the specified columns determines the sort order of the data.
		# description: # A user-friendly description of the dataset.
		# friendly_name: # A descriptive name for this table.
		# labels: # The labels associated with this dataset. You can use these to organize and group your datasets .
		# name: # Name of the table.
		# num_rows: # The number of rows of data in this table, excluding any data in the streaming buffer.
		# view: # The view definition.
		# time_partitioning: # If specified, configures time-based partitioning for this table.
		# schema: # Describes the schema of this table.
		# encryption_configuration: # Custom encryption configuration.
		# expiration_time: # The time when this table expires, in milliseconds since the epoch. If not present, the table will persist indefinitely.
		# external_data_configuration: # Describes the data format, location, and other properties of a table stored outside of BigQuery. By defining these properties, the data source can then be queried as if it were a standard BigQuery table.
		# dataset: # Name of the dataset.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_bigquery_table_info "Gather info for GCP Table" b
- name: $1
	gcp_bigquery_table_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# dataset: # Name of the dataset.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_bigtable_instance "Creates a GCP Instance" b
- name: $1
	gcp_bigtable_instance:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# state: #present|absent
		# name: # The unique name of the instance.
		# display_name: # The descriptive name for this instance as it appears in UIs.
		# type: # The type of the instance. Defaults to `PRODUCTION`.
		# labels: # Labels are a flexible and lightweight mechanism for organizing cloud resources into groups that reflect a customer's organizational needs and deployment strategies. They can be used to filter resources and aggregate metrics.
		# clusters: # An array of clusters. Maximum 4.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_bigtable_instance_info "Gather info for GCP Instance" b
- name: $1
	gcp_bigtable_instance_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_cloudbuild_trigger "Creates a GCP Trigger" b
- name: $1
	gcp_cloudbuild_trigger:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# state: #present|absent
		# id: # The unique identifier for the trigger.
		# name: # Name of the trigger. Must be unique within the project.
		# description: # Human-readable description of the trigger.
		# tags: # Tags for annotation of a BuildTrigger .
		# disabled: # Whether the trigger is disabled or not. If true, the trigger will never result in a build.
		# substitutions: # Substitutions data for Build resource.
		# filename: # Path, from the source root, to a file whose contents is used for the template. Either a filename or build template must be provided.
		# ignored_files: # ignoredFiles and includedFiles are file glob matches using U(https://golang.org/pkg/path/filepath/#Match) extended with support for `**`.
		# included_files: # ignoredFiles and includedFiles are file glob matches using U(https://golang.org/pkg/path/filepath/#Match) extended with support for `**`.
		# trigger_template: # Template describing the types of source changes to trigger a build.
		# github: # Describes the configuration of a trigger that creates a build whenever a GitHub event is received.
		# build: # Contents of the build template. Either a filename or build template must be provided.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_cloudbuild_trigger_info "Gather info for GCP Trigger" b
- name: $1
	gcp_cloudbuild_trigger_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_cloudfunctions_cloud_function "Creates a GCP CloudFunction" b
- name: $1
	gcp_cloudfunctions_cloud_function:
		name: ${2:# A user-defined name of the function. Function names must be unique globally and match pattern `projects/*/locations/*/functions/*`.}
		location: ${3:# The location of this cloud function.}
		auth_kind: ${4:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # User-provided description of a function.
		# entry_point: # The name of the function (as defined in source code) that will be executed.
		# runtime: # The runtime in which the function is going to run. If empty, defaults to Node.js 6.
		# timeout: # The function execution timeout. Execution is considered failed and can be terminated if the function is not completed at the end of the timeout period. Defaults to 60 seconds.
		# available_memory_mb: # The amount of memory in MB available for a function.
		# labels: # A set of key/value label pairs associated with this Cloud Function.
		# environment_variables: # Environment variables that shall be available during function execution.
		# source_archive_url: # The Google Cloud Storage URL, starting with gs://, pointing to the zip archive which contains the function.
		# source_upload_url: # The Google Cloud Storage signed URL used for source uploading.
		# source_repository: # The source repository where a function is hosted.
		# https_trigger: # An HTTPS endpoint type of source that can be triggered via URL.
		# event_trigger: # An HTTPS endpoint type of source that can be triggered via URL.
		# trigger_http: # Use HTTP to trigger this function.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_cloudfunctions_cloud_function_info "Gather info for GCP CloudFunction" b
- name: $1
	gcp_cloudfunctions_cloud_function_info:
		location: ${2:# The location of this cloud function.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_cloudscheduler_job "Creates a GCP Job" b
- name: $1
	gcp_cloudscheduler_job:
		name: ${2:# The name of the job.}
		region: ${3:# Region where the scheduler job resides .}
		auth_kind: ${4:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # A human-readable description for the job. This string must not contain more than 500 characters.
		# schedule: # Describes the schedule on which the job will be executed.
		# time_zone: Etc/UTC
		# attempt_deadline: 180s
		# retry_config: # By default, if a job does not complete successfully, meaning that an acknowledgement is not received from the handler, then it will be retried with exponential backoff according to the settings .
		# pubsub_target: # Pub/Sub target If the job providers a Pub/Sub target the cron will publish a message to the provided topic .
		# app_engine_http_target: # App Engine HTTP target.
		# http_target: # HTTP target.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_cloudscheduler_job_info "Gather info for GCP Job" b
- name: $1
	gcp_cloudscheduler_job_info:
		region: ${2:# Region where the scheduler job resides .}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_cloudtasks_queue "Creates a GCP Queue" b
- name: $1
	gcp_cloudtasks_queue:
		location: ${2:# The location of the queue.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# state: #present|absent
		# name: # The queue name.
		# app_engine_routing_override: # Overrides for task-level appEngineRouting. These settings apply only to App Engine tasks in this queue .
		# rate_limits: # Rate limits for task dispatches.
		# retry_config: # Settings that determine the retry behavior.
		# stackdriver_logging_config: # Configuration options for writing logs to Stackdriver Logging.
		# status: # The current state of the queue.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_cloudtasks_queue_info "Gather info for GCP Queue" b
- name: $1
	gcp_cloudtasks_queue_info:
		location: ${2:# The location of the queue.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_address "Creates a GCP Address" b
- name: $1
	gcp_compute_address:
		name: ${2:# Name of the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		region: ${3:# URL of the region where the regional address resides.}
		auth_kind: ${4:application|machineaccount|serviceaccount}
		# state: #present|absent
		# address: # The static external IP address represented by this resource. Only IPv4 is supported. An address may only be specified for INTERNAL address types. The IP address must be inside the specified subnetwork, if any.
		# address_type: EXTERNAL
		# description: # An optional description of this resource.
		# purpose: # The purpose of this resource, which can be one of the following values: * GCE_ENDPOINT for addresses that are used by VM instances, alias IP ranges, internal load balancers, and similar resources.
		# network_tier: # The networking tier used for configuring this address. If this field is not specified, it is assumed to be PREMIUM.
		# subnetwork: # The URL of the subnetwork in which to reserve the address. If an IP address is specified, it must be within the subnetwork's IP range.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_address_info "Gather info for GCP Address" b
- name: $1
	gcp_compute_address_info:
		region: ${2:# URL of the region where the regional address resides.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_autoscaler "Creates a GCP Autoscaler" b
- name: $1
	gcp_compute_autoscaler:
		name: ${2:# Name of the resource. The name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		autoscaling_policy: ${3:# The configuration parameters for the autoscaling algorithm. You can define one or more of the policies for an autoscaler: cpuUtilization, customMetricUtilizations, and loadBalancingUtilization.}
		target: ${4:# URL of the managed instance group that this autoscaler will scale.}
		zone: ${5:# URL of the zone where the instance group resides.}
		auth_kind: ${6:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_autoscaler_info "Gather info for GCP Autoscaler" b
- name: $1
	gcp_compute_autoscaler_info:
		zone: ${2:# URL of the zone where the instance group resides.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_backend_bucket "Creates a GCP BackendBucket" b
- name: $1
	gcp_compute_backend_bucket:
		bucket_name: ${2:# Cloud Storage bucket name.}
		name: ${3:# Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		auth_kind: ${4:application|machineaccount|serviceaccount}
		# state: #present|absent
		# cdn_policy: # Cloud CDN configuration for this Backend Bucket.
		# description: # An optional textual description of the resource; provided by the client when the resource is created.
		# enable_cdn: # If true, enable Cloud CDN for this BackendBucket.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_backend_bucket_info "Gather info for GCP BackendBucket" b
- name: $1
	gcp_compute_backend_bucket_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_backend_service "Creates a GCP BackendService" b
- name: $1
	gcp_compute_backend_service:
		name: ${2:# Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# state: #present|absent
		# affinity_cookie_ttl_sec: # Lifetime of cookies in seconds if session_affinity is GENERATED_COOKIE. If set to 0, the cookie is non-persistent and lasts only until the end of the browser session (or equivalent). The maximum allowed value for TTL is one day.
		# backends: # The set of backends that serve this BackendService.
		# circuit_breakers: # Settings controlling the volume of connections to a backend service. This field is applicable only when the load_balancing_scheme is set to INTERNAL_SELF_MANAGED.
		# consistent_hash: # Consistent Hash-based load balancing can be used to provide soft session affinity based on HTTP headers, cookies or other properties. This load balancing policy is applicable only for HTTP connections. The affinity to a particular destination host will be lost when one or more hosts are added/removed from the destination service. This field specifies parameters that control consistent hashing. This field only applies if the load_balancing_scheme is set to INTERNAL_SELF_MANAGED. This field is only applicable when locality_lb_policy is set to MAGLEV or RING_HASH.
		# cdn_policy: # Cloud CDN configuration for this BackendService.
		# connection_draining: # Settings for connection draining .
		# custom_request_headers: # Headers that the HTTP/S load balancer should add to proxied requests.
		# description: # An optional description of this resource.
		# enable_cdn: # If true, enable Cloud CDN for this BackendService.
		# health_checks: # The set of URLs to the HttpHealthCheck or HttpsHealthCheck resource for health checking this BackendService. Currently at most one health check can be specified.
		# iap: # Settings for enabling Cloud Identity Aware Proxy.
		# load_balancing_scheme: EXTERNAL
		# locality_lb_policy: # The load balancing algorithm used within the scope of the locality.
		# outlier_detection: # Settings controlling eviction of unhealthy hosts from the load balancing pool.
		# port_name: # Name of backend port. The same name should appear in the instance groups referenced by this service. Required when the load balancing scheme is EXTERNAL.
		# protocol: # The protocol this BackendService uses to communicate with backends.
		# security_policy: # The security policy associated with this backend service.
		# session_affinity: # Type of session affinity to use. The default is NONE. Session affinity is not applicable if the protocol is UDP.
		# timeout_sec: # How many seconds to wait for the backend before considering it a failed request. Default is 30 seconds. Valid range is [1, 86400].
		# log_config: # This field denotes the logging options for the load balancer traffic served by this backend service.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_backend_service_info "Gather info for GCP BackendService" b
- name: $1
	gcp_compute_backend_service_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_disk "Creates a GCP Disk" b
- name: $1
	gcp_compute_disk:
		name: ${2:# Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		zone: ${3:# A reference to the zone where the disk resides.}
		auth_kind: ${4:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource. Provide this property when you create the resource.
		# labels: # Labels to apply to this disk. A list of key->value pairs.
		# licenses: # Any applicable publicly visible licenses.
		# size_gb: # Size of the persistent disk, specified in GB. You can specify this field when creating a persistent disk using the sourceImage or sourceSnapshot parameter, or specify it alone to create an empty persistent disk.
		# physical_block_size_bytes: # Physical block size of the persistent disk, in bytes. If not present in a request, a default value is used. Currently supported sizes are 4096 and 16384, other sizes may be added in the future.
		# type: # URL of the disk type resource describing which disk type to use to create the disk. Provide this when creating the disk.
		# source_image: # The source image used to create this disk. If the source image is deleted, this field will not be set.
		# source_image_encryption_key: # The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key.
		# disk_encryption_key: # Encrypts the disk using a customer-supplied encryption key.
		# source_snapshot: # The source snapshot used to create this disk. You can provide this as a partial or full URL to the resource.
		# source_snapshot_encryption_key: # The customer-supplied encryption key of the source snapshot. Required if the source snapshot is protected by a customer-supplied encryption key.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_disk_info "Gather info for GCP Disk" b
- name: $1
	gcp_compute_disk_info:
		zone: ${2:# A reference to the zone where the disk resides.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_external_vpn_gateway "Creates a GCP ExternalVpnGateway" b
- name: $1
	gcp_compute_external_vpn_gateway:
		name: ${2:# Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource.
		# redundancy_type: # Indicates the redundancy type of this external VPN gateway .
		# interfaces: # A list of interfaces on this external VPN gateway.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_external_vpn_gateway_info "Gather info for GCP ExternalVpnGateway" b
- name: $1
	gcp_compute_external_vpn_gateway_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_firewall "Creates a GCP Firewall" b
- name: $1
	gcp_compute_firewall:
		name: ${2:# Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# state: #present|absent
		# allowed: # The list of ALLOW rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a permitted connection.
		# denied: # The list of DENY rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a denied connection.
		# description: # An optional description of this resource. Provide this property when you create the resource.
		# destination_ranges: # If destination ranges are specified, the firewall will apply only to traffic that has destination IP address in these ranges. These ranges must be expressed in CIDR format. Only IPv4 is supported.
		# direction: # Direction of traffic to which this firewall applies; default is INGRESS. Note: For INGRESS traffic, it is NOT supported to specify destinationRanges; For EGRESS traffic, it is NOT supported to specify sourceRanges OR sourceTags.
		# disabled: # Denotes whether the firewall rule is disabled, i.e not applied to the network it is associated with. When set to true, the firewall rule is not enforced and the network behaves as if it did not exist. If this is unspecified, the firewall rule will be enabled.
		# log_config: # This field denotes the logging options for a particular firewall rule.
		# network: {'selfLink': 'global/networks/default'}
		# priority: 1000
		# source_ranges: # If source ranges are specified, the firewall will apply only to traffic that has source IP address in these ranges. These ranges must be expressed in CIDR format. One or both of sourceRanges and sourceTags may be set. If both properties are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP that belongs to a tag listed in the sourceTags property. The connection does not need to match both properties for the firewall to apply. Only IPv4 is supported.
		# source_service_accounts: # If source service accounts are specified, the firewall will apply only to traffic originating from an instance with a service account in this list. Source service accounts cannot be used to control traffic to an instance's external IP address because service accounts are associated with an instance, not an IP address. sourceRanges can be set at the same time as sourceServiceAccounts. If both are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP belongs to an instance with service account listed in sourceServiceAccount. The connection does not need to match both properties for the firewall to apply. sourceServiceAccounts cannot be used at the same time as sourceTags or targetTags.
		# source_tags: # If source tags are specified, the firewall will apply only to traffic with source IP that belongs to a tag listed in source tags. Source tags cannot be used to control traffic to an instance's external IP address. Because tags are associated with an instance, not an IP address. One or both of sourceRanges and sourceTags may be set. If both properties are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP that belongs to a tag listed in the sourceTags property. The connection does not need to match both properties for the firewall to apply.
		# target_service_accounts: # A list of service accounts indicating sets of instances located in the network that may make network connections as specified in allowed[].
		# target_tags: # A list of instance tags indicating sets of instances located in the network that may make network connections as specified in allowed[].
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_firewall_info "Gather info for GCP Firewall" b
- name: $1
	gcp_compute_firewall_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_forwarding_rule "Creates a GCP ForwardingRule" b
- name: $1
	gcp_compute_forwarding_rule:
		name: ${2:# Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		region: ${3:# A reference to the region where the regional forwarding rule resides.}
		auth_kind: ${4:application|machineaccount|serviceaccount}
		# state: #present|absent
		# is_mirroring_collector: # Indicates whether or not this load balancer can be used as a collector for packet mirroring. To prevent mirroring loops, instances behind this load balancer will not have their traffic mirrored even if a PacketMirroring rule applies to them. This can only be set to true for load balancers that have their loadBalancingScheme set to INTERNAL.
		# description: # An optional description of this resource. Provide this property when you create the resource.
		# ip_address: # The IP address that this forwarding rule is serving on behalf of.
		# ip_protocol: # The IP protocol to which this rule applies.
		# backend_service: # A BackendService to receive the matched traffic. This is used only for INTERNAL load balancing.
		# load_balancing_scheme: # This signifies what the ForwardingRule will be used for and can be EXTERNAL, INTERNAL, or INTERNAL_MANAGED. EXTERNAL is used for Classic Cloud VPN gateways, protocol forwarding to VMs from an external IP address, and HTTP(S), SSL Proxy, TCP Proxy, and Network TCP/UDP load balancers.
		# network: # For internal load balancing, this field identifies the network that the load balanced IP should belong to for this Forwarding Rule. If this field is not specified, the default network will be used.
		# port_range: # This field is used along with the target field for TargetHttpProxy, TargetHttpsProxy, TargetSslProxy, TargetTcpProxy, TargetVpnGateway, TargetPool, TargetInstance.
		# ports: # This field is used along with the backend_service field for internal load balancing.
		# subnetwork: # The subnetwork that the load balanced IP should belong to for this Forwarding Rule. This field is only used for INTERNAL load balancing.
		# target: # The URL of the target resource to receive the matched traffic.
		# allow_global_access: # If true, clients can access ILB from all regions.
		# all_ports: # For internal TCP/UDP load balancing (i.e. load balancing scheme is INTERNAL and protocol is TCP/UDP), set this to true to allow packets addressed to any ports to be forwarded to the backends configured with this forwarding rule. Used with backend service. Cannot be set if port or portRange are set.
		# network_tier: # The networking tier used for configuring this address. If this field is not specified, it is assumed to be PREMIUM.
		# service_label: # An optional prefix to the service name for this Forwarding Rule.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_forwarding_rule_info "Gather info for GCP ForwardingRule" b
- name: $1
	gcp_compute_forwarding_rule_info:
		region: ${2:# A reference to the region where the regional forwarding rule resides.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_global_address "Creates a GCP GlobalAddress" b
- name: $1
	gcp_compute_global_address:
		name: ${2:# Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# state: #present|absent
		# address: # The static external IP address represented by this resource.
		# description: # An optional description of this resource.
		# ip_version: # The IP Version that will be used by this address. The default value is `IPV4`.
		# prefix_length: # The prefix length of the IP range. If not present, it means the address field is a single IP address.
		# address_type: EXTERNAL
		# purpose: # The purpose of the resource. For global internal addresses it can be * VPC_PEERING - for peer networks This should only be set when using an Internal address.
		# network: # The URL of the network in which to reserve the IP range. The IP range must be in RFC1918 space. The network cannot be deleted if there are any reserved IP ranges referring to it.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_global_address_info "Gather info for GCP GlobalAddress" b
- name: $1
	gcp_compute_global_address_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_global_forwarding_rule "Creates a GCP GlobalForwardingRule" b
- name: $1
	gcp_compute_global_forwarding_rule:
		name: ${2:# Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		target: ${3:# The URL of the target resource to receive the matched traffic.}
		auth_kind: ${4:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource. Provide this property when you create the resource.
		# ip_address: # The IP address that this forwarding rule is serving on behalf of.
		# ip_protocol: # The IP protocol to which this rule applies. When the load balancing scheme is INTERNAL_SELF_MANAGED, only TCP is valid.
		# ip_version: # The IP Version that will be used by this global forwarding rule.
		# load_balancing_scheme: EXTERNAL
		# metadata_filters: # Opaque filter criteria used by Loadbalancer to restrict routing configuration to a limited set xDS compliant clients. In their xDS requests to Loadbalancer, xDS clients present node metadata. If a match takes place, the relevant routing configuration is made available to those proxies.
		# network: # This field is not used for external load balancing.
		# port_range: # This field is used along with the target field for TargetHttpProxy, TargetHttpsProxy, TargetSslProxy, TargetTcpProxy, TargetVpnGateway, TargetPool, TargetInstance.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_global_forwarding_rule_info "Gather info for GCP GlobalForwardingRule" b
- name: $1
	gcp_compute_global_forwarding_rule_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_health_check "Creates a GCP HealthCheck" b
- name: $1
	gcp_compute_health_check:
		name: ${2:# Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# state: #present|absent
		# check_interval_sec: 5
		# description: # An optional description of this resource. Provide this property when you create the resource.
		# healthy_threshold: 2
		# timeout_sec: 5
		# unhealthy_threshold: 2
		# type: # Specifies the type of the healthCheck, either TCP, SSL, HTTP or HTTPS. If not specified, the default is TCP. Exactly one of the protocol-specific health check field must be specified, which must match type field.
		# http_health_check: # A nested object resource.
		# https_health_check: # A nested object resource.
		# tcp_health_check: # A nested object resource.
		# ssl_health_check: # A nested object resource.
		# http2_health_check: # A nested object resource.
		# grpc_health_check: # A nested object resource.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_health_check_info "Gather info for GCP HealthCheck" b
- name: $1
	gcp_compute_health_check_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_http_health_check "Creates a GCP HttpHealthCheck" b
- name: $1
	gcp_compute_http_health_check:
		name: ${2:# Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# state: #present|absent
		# check_interval_sec: 5
		# description: # An optional description of this resource. Provide this property when you create the resource.
		# healthy_threshold: # A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
		# host: # The value of the host header in the HTTP health check request. If left empty (default value), the public IP on behalf of which this health check is performed will be used.
		# port: # The TCP port number for the HTTP health check request.
		# request_path: # The request path of the HTTP health check request.
		# timeout_sec: # How long (in seconds) to wait before claiming failure.
		# unhealthy_threshold: # A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_http_health_check_info "Gather info for GCP HttpHealthCheck" b
- name: $1
	gcp_compute_http_health_check_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_https_health_check "Creates a GCP HttpsHealthCheck" b
- name: $1
	gcp_compute_https_health_check:
		name: ${2:# Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# state: #present|absent
		# check_interval_sec: # How often (in seconds) to send a health check. The default value is 5 seconds.
		# description: # An optional description of this resource. Provide this property when you create the resource.
		# healthy_threshold: # A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
		# host: # The value of the host header in the HTTPS health check request. If left empty (default value), the public IP on behalf of which this health check is performed will be used.
		# port: # The TCP port number for the HTTPS health check request.
		# request_path: # The request path of the HTTPS health check request.
		# timeout_sec: # How long (in seconds) to wait before claiming failure.
		# unhealthy_threshold: # A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_https_health_check_info "Gather info for GCP HttpsHealthCheck" b
- name: $1
	gcp_compute_https_health_check_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_image "Creates a GCP Image" b
- name: $1
	gcp_compute_image:
		name: ${2:# Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource. Provide this property when you create the resource.
		# disk_size_gb: # Size of the image when restored onto a persistent disk (in GB).
		# family: # The name of the image family to which this image belongs. You can create disks by specifying an image family instead of a specific image name. The image family always returns its latest image that is not deprecated. The name of the image family must comply with RFC1035.
		# guest_os_features: # A list of features to enable on the guest operating system.
		# image_encryption_key: # Encrypts the image using a customer-supplied encryption key.
		# labels: # Labels to apply to this Image.
		# licenses: # Any applicable license URI.
		# raw_disk: # The parameters of the raw disk image.
		# source_disk: # The source disk to create this image based on.
		# source_disk_encryption_key: # The customer-supplied encryption key of the source disk. Required if the source disk is protected by a customer-supplied encryption key.
		# source_disk_id: # The ID value of the disk used to create this image. This value may be used to determine whether the image was taken from the current or a previous instance of a given disk name.
		# source_image: # URL of the source image used to create this image. In order to create an image, you must provide the full or partial URL of one of the following: * The selfLink URL * This property * The rawDisk.source URL * The sourceDisk URL .
		# source_snapshot: # URL of the source snapshot used to create this image.
		# source_type: # The type of the image used to create this disk. The default and only value is RAW .
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_image_info "Gather info for GCP Image" b
- name: $1
	gcp_compute_image_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_instance "Creates a GCP Instance" b
- name: $1
	gcp_compute_instance:
		zone: ${2:# A reference to the zone where the machine resides.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# state: #present|absent
		# can_ip_forward: # Allows this instance to send and receive packets with non-matching destination or source IPs. This is required if you plan to use this instance to forward routes.
		# deletion_protection: # Whether the resource should be protected against deletion.
		# disks: # An array of disks that are associated with the instances that are created from this template.
		# guest_accelerators: # List of the type and count of accelerator cards attached to the instance .
		# hostname: # The hostname of the instance to be created. The specified hostname must be RFC1035 compliant. If hostname is not specified, the default hostname is [INSTANCE_NAME].c.[PROJECT_ID].internal when using the global DNS, and [INSTANCE_NAME].[ZONE].c.[PROJECT_ID].internal when using zonal DNS.
		# labels: # Labels to apply to this instance. A list of key->value pairs.
		# metadata: # The metadata key/value pairs to assign to instances that are created from this template. These pairs can consist of custom metadata or predefined keys.
		# machine_type: # A reference to a machine type which defines VM kind.
		# min_cpu_platform: # Specifies a minimum CPU platform for the VM instance. Applicable values are the friendly names of CPU platforms .
		# name: # The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
		# network_interfaces: # An array of configurations for this interface. This specifies how this interface is configured to interact with other network services, such as connecting to the internet. Only one network interface is supported per instance.
		# scheduling: # Sets the scheduling options for this instance.
		# service_accounts: # A list of service accounts, with their specified scopes, authorized for this instance. Only one service account per VM instance is supported.
		# shielded_instance_config: # Configuration for various parameters related to shielded instances.
		# status: # The status of the instance. One of the following values: PROVISIONING, STAGING, RUNNING, STOPPING, SUSPENDING, SUSPENDED, and TERMINATED.
		# tags: # A list of tags to apply to this instance. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during instance creation. The tags can be later modified by the setTags method. Each tag within the list must comply with RFC1035.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_instance_group "Creates a GCP InstanceGroup" b
- name: $1
	gcp_compute_instance_group:
		zone: ${2:# A reference to the zone where the instance group resides.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource. Provide this property when you create the resource.
		# name: # The name of the instance group.
		# named_ports: # Assigns a name to a port number.
		# network: # The network to which all instances in the instance group belong.
		# region: # The region where the instance group is located (for regional resources).
		# subnetwork: # The subnetwork to which all instances in the instance group belong.
		# instances: # The list of instances associated with this InstanceGroup.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_instance_group_info "Gather info for GCP InstanceGroup" b
- name: $1
	gcp_compute_instance_group_info:
		zone: ${2:# A reference to the zone where the instance group resides.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_instance_group_manager "Creates a GCP InstanceGroupManager" b
- name: $1
	gcp_compute_instance_group_manager:
		base_instance_name: ${2:# The base instance name to use for instances in this group. The value must be 1-58 characters long. Instances are named by appending a hyphen and a random four-character string to the base instance name.}
		instance_template: ${3:# The instance template that is specified for this managed instance group. The group uses this template to create all new instances in the managed instance group.}
		name: ${4:# The name of the managed instance group. The name must be 1-63 characters long, and comply with RFC1035.}
		zone: ${5:# The zone the managed instance group resides.}
		auth_kind: ${6:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource. Provide this property when you create the resource.
		# named_ports: # Named ports configured for the Instance Groups complementary to this Instance Group Manager.
		# target_pools: # TargetPool resources to which instances in the instanceGroup field are added. The target pools automatically apply to all of the instances in the managed instance group.
		# target_size: # The target number of running instances for this managed instance group. Deleting or abandoning instances reduces this number. Resizing the group changes this number.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_instance_group_manager_info "Gather info for GCP InstanceGroupManager" b
- name: $1
	gcp_compute_instance_group_manager_info:
		zone: ${2:# The zone the managed instance group resides.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_instance_info "Gather info for GCP Instance" b
- name: $1
	gcp_compute_instance_info:
		zone: ${2:# A reference to the zone where the machine resides.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_instance_template "Creates a GCP InstanceTemplate" b
- name: $1
	gcp_compute_instance_template:
		name: ${2:# Name of the resource. The name is 1-63 characters long and complies with RFC1035.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource. Provide this property when you create the resource.
		# properties: # The instance properties for this instance template.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_instance_template_info "Gather info for GCP InstanceTemplate" b
- name: $1
	gcp_compute_instance_template_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_interconnect_attachment "Creates a GCP InterconnectAttachment" b
- name: $1
	gcp_compute_interconnect_attachment:
		router: ${2:# URL of the cloud router to be used for dynamic routing. This router must be in the same region as this InterconnectAttachment. The InterconnectAttachment will automatically connect the Interconnect to the network & region within which the Cloud Router is configured.}
		name: ${3:# Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		region: ${4:# Region where the regional interconnect attachment resides.}
		auth_kind: ${5:application|machineaccount|serviceaccount}
		# state: #present|absent
		# admin_enabled: true
		# interconnect: # URL of the underlying Interconnect object that this attachment's traffic will traverse through. Required if type is DEDICATED, must not be set if type is PARTNER.
		# description: # An optional description of this resource.
		# bandwidth: # Provisioned bandwidth capacity for the interconnect attachment.
		# edge_availability_domain: # Desired availability domain for the attachment. Only available for type PARTNER, at creation time. For improved reliability, customers should configure a pair of attachments with one per availability domain. The selected availability domain will be provided to the Partner via the pairing key so that the provisioned circuit will lie in the specified domain. If not specified, the value will default to AVAILABILITY_DOMAIN_ANY.
		# type: # The type of InterconnectAttachment you wish to create. Defaults to DEDICATED.
		# candidate_subnets: # Up to 16 candidate prefixes that can be used to restrict the allocation of cloudRouterIpAddress and customerRouterIpAddress for this attachment.
		# vlan_tag8021q: # The IEEE 802.1Q VLAN tag for this attachment, in the range 2-4094. When using PARTNER type this will be managed upstream.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_interconnect_attachment_info "Gather info for GCP InterconnectAttachment" b
- name: $1
	gcp_compute_interconnect_attachment_info:
		region: ${2:# Region where the regional interconnect attachment resides.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_network "Creates a GCP Network" b
- name: $1
	gcp_compute_network:
		name: ${2:# Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource. The resource must be recreated to modify this field.
		# auto_create_subnetworks: # When set to `true`, the network is created in "auto subnet mode" and it will create a subnet for each region automatically across the `10.128.0.0/9` address range.
		# routing_config: # The network-level routing configuration for this network. Used by Cloud Router to determine what type of network-wide routing behavior to enforce.
		# mtu: # Maximum Transmission Unit in bytes. The minimum value for this field is 1460 and the maximum value is 1500 bytes.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_network_endpoint_group "Creates a GCP NetworkEndpointGroup" b
- name: $1
	gcp_compute_network_endpoint_group:
		name: ${2:# Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		network: ${3:# The network to which all network endpoints in the NEG belong.}
		zone: ${4:# Zone where the network endpoint group is located.}
		auth_kind: ${5:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource. Provide this property when you create the resource.
		# network_endpoint_type: GCE_VM_IP_PORT
		# subnetwork: # Optional subnetwork to which all network endpoints in the NEG belong.
		# default_port: # The default port used if the port number is not specified in the network endpoint.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_network_endpoint_group_info "Gather info for GCP NetworkEndpointGroup" b
- name: $1
	gcp_compute_network_endpoint_group_info:
		zone: ${2:# Zone where the network endpoint group is located.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_network_info "Gather info for GCP Network" b
- name: $1
	gcp_compute_network_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_node_group "Creates a GCP NodeGroup" b
- name: $1
	gcp_compute_node_group:
		node_template: ${2:# The URL of the node template to which this node group belongs.}
		size: ${3:# The total number of nodes in the node group.}
		zone: ${4:# Zone where this node group is located .}
		auth_kind: ${5:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional textual description of the resource.
		# name: # Name of the resource.
		# maintenance_policy: DEFAULT
		# autoscaling_policy: # If you use sole-tenant nodes for your workloads, you can use the node group autoscaler to automatically manage the sizes of your node groups.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_node_group_info "Gather info for GCP NodeGroup" b
- name: $1
	gcp_compute_node_group_info:
		zone: ${2:# Zone where this node group is located .}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_node_template "Creates a GCP NodeTemplate" b
- name: $1
	gcp_compute_node_template:
		region: ${2:# Region where nodes using the node template will be created .}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional textual description of the resource.
		# name: # Name of the resource.
		# node_affinity_labels: # Labels to use for node affinity, which will be used in instance scheduling.
		# node_type: # Node type to use for nodes group that are created from this template.
		# node_type_flexibility: # Flexible properties for the desired node type. Node groups that use this node template will create nodes of a type that matches these properties. Only one of nodeTypeFlexibility and nodeType can be specified.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_node_template_info "Gather info for GCP NodeTemplate" b
- name: $1
	gcp_compute_node_template_info:
		region: ${2:# Region where nodes using the node template will be created .}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_region_autoscaler "Creates a GCP RegionAutoscaler" b
- name: $1
	gcp_compute_region_autoscaler:
		name: ${2:# Name of the resource. The name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		autoscaling_policy: ${3:# The configuration parameters for the autoscaling algorithm. You can define one or more of the policies for an autoscaler: cpuUtilization, customMetricUtilizations, and loadBalancingUtilization.}
		target: ${4:# URL of the managed instance group that this autoscaler will scale.}
		region: ${5:# URL of the region where the instance group resides.}
		auth_kind: ${6:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_region_autoscaler_info "Gather info for GCP RegionAutoscaler" b
- name: $1
	gcp_compute_region_autoscaler_info:
		region: ${2:# URL of the region where the instance group resides.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_region_backend_service "Creates a GCP RegionBackendService" b
- name: $1
	gcp_compute_region_backend_service:
		name: ${2:# Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		region: ${3:# A reference to the region where the regional backend service resides.}
		auth_kind: ${4:application|machineaccount|serviceaccount}
		# state: #present|absent
		# affinity_cookie_ttl_sec: # Lifetime of cookies in seconds if session_affinity is GENERATED_COOKIE. If set to 0, the cookie is non-persistent and lasts only until the end of the browser session (or equivalent). The maximum allowed value for TTL is one day.
		# backends: # The set of backends that serve this RegionBackendService.
		# circuit_breakers: # Settings controlling the volume of connections to a backend service. This field is applicable only when the `load_balancing_scheme` is set to INTERNAL_MANAGED and the `protocol` is set to HTTP, HTTPS, or HTTP2.
		# consistent_hash: # Consistent Hash-based load balancing can be used to provide soft session affinity based on HTTP headers, cookies or other properties. This load balancing policy is applicable only for HTTP connections. The affinity to a particular destination host will be lost when one or more hosts are added/removed from the destination service. This field specifies parameters that control consistent hashing.
		# cdn_policy: # Cloud CDN configuration for this BackendService.
		# connection_draining: # Settings for connection draining .
		# description: # An optional description of this resource.
		# failover_policy: # Policy for failovers.
		# enable_cdn: # If true, enable Cloud CDN for this RegionBackendService.
		# health_checks: # The set of URLs to HealthCheck resources for health checking this RegionBackendService. Currently at most one health check can be specified. A health check must be specified unless the backend service uses an internet or serverless NEG as a backend.
		# load_balancing_scheme: INTERNAL
		# locality_lb_policy: # The load balancing algorithm used within the scope of the locality.
		# outlier_detection: # Settings controlling eviction of unhealthy hosts from the load balancing pool.
		# port_name: # A named port on a backend instance group representing the port for communication to the backend VMs in that group. Required when the loadBalancingScheme is EXTERNAL, INTERNAL_MANAGED, or INTERNAL_SELF_MANAGED and the backends are instance groups. The named port must be defined on each backend instance group. This parameter has no meaning if the backends are NEGs. API sets a default of "http" if not given.
		# protocol: # The protocol this RegionBackendService uses to communicate with backends.
		# session_affinity: # Type of session affinity to use. The default is NONE. Session affinity is not applicable if the protocol is UDP.
		# timeout_sec: # How many seconds to wait for the backend before considering it a failed request. Default is 30 seconds. Valid range is [1, 86400].
		# log_config: # This field denotes the logging options for the load balancer traffic served by this backend service.
		# network: # The URL of the network to which this backend service belongs.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_region_backend_service_info "Gather info for GCP RegionBackendService" b
- name: $1
	gcp_compute_region_backend_service_info:
		region: ${2:# A reference to the region where the regional backend service resides.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_region_disk "Creates a GCP RegionDisk" b
- name: $1
	gcp_compute_region_disk:
		name: ${2:# Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		replica_zones: ${3:# URLs of the zones where the disk should be replicated to.}
		region: ${4:# A reference to the region where the disk resides.}
		auth_kind: ${5:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource. Provide this property when you create the resource.
		# labels: # Labels to apply to this disk. A list of key->value pairs.
		# licenses: # Any applicable publicly visible licenses.
		# size_gb: # Size of the persistent disk, specified in GB. You can specify this field when creating a persistent disk using the sourceImage or sourceSnapshot parameter, or specify it alone to create an empty persistent disk.
		# physical_block_size_bytes: # Physical block size of the persistent disk, in bytes. If not present in a request, a default value is used. Currently supported sizes are 4096 and 16384, other sizes may be added in the future.
		# type: # URL of the disk type resource describing which disk type to use to create the disk. Provide this when creating the disk.
		# disk_encryption_key: # Encrypts the disk using a customer-supplied encryption key.
		# source_snapshot: # The source snapshot used to create this disk. You can provide this as a partial or full URL to the resource.
		# source_snapshot_encryption_key: # The customer-supplied encryption key of the source snapshot. Required if the source snapshot is protected by a customer-supplied encryption key.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_region_disk_info "Gather info for GCP RegionDisk" b
- name: $1
	gcp_compute_region_disk_info:
		region: ${2:# A reference to the region where the disk resides.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_region_health_check "Creates a GCP RegionHealthCheck" b
- name: $1
	gcp_compute_region_health_check:
		name: ${2:# Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# state: #present|absent
		# check_interval_sec: 5
		# description: # An optional description of this resource. Provide this property when you create the resource.
		# healthy_threshold: 2
		# unhealthy_threshold: 2
		# timeout_sec: 5
		# type: # Specifies the type of the healthCheck, either TCP, SSL, HTTP or HTTPS. If not specified, the default is TCP. Exactly one of the protocol-specific health check field must be specified, which must match type field.
		# http_health_check: # A nested object resource.
		# https_health_check: # A nested object resource.
		# tcp_health_check: # A nested object resource.
		# ssl_health_check: # A nested object resource.
		# http2_health_check: # A nested object resource.
		# grpc_health_check: # A nested object resource.
		# region: # The region where the regional health check resides.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_region_health_check_info "Gather info for GCP RegionHealthCheck" b
- name: $1
	gcp_compute_region_health_check_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# region: # The region where the regional health check resides.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_region_instance_group_manager "Creates a GCP RegionInstanceGroupManager" b
- name: $1
	gcp_compute_region_instance_group_manager:
		base_instance_name: ${2:# The base instance name to use for instances in this group. The value must be 1-58 characters long. Instances are named by appending a hyphen and a random four-character string to the base instance name.}
		instance_template: ${3:# The instance template that is specified for this managed instance group. The group uses this template to create all new instances in the managed instance group.}
		name: ${4:# The name of the managed instance group. The name must be 1-63 characters long, and comply with RFC1035.}
		region: ${5:# The region the managed instance group resides.}
		auth_kind: ${6:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource. Provide this property when you create the resource.
		# named_ports: # Named ports configured for the Instance Groups complementary to this Instance Group Manager.
		# target_pools: # TargetPool resources to which instances in the instanceGroup field are added. The target pools automatically apply to all of the instances in the managed instance group.
		# target_size: # The target number of running instances for this managed instance group. Deleting or abandoning instances reduces this number. Resizing the group changes this number.
		# auto_healing_policies: # The autohealing policy for this managed instance group .
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_region_instance_group_manager_info "Gather info for GCP RegionInstanceGroupManager" b
- name: $1
	gcp_compute_region_instance_group_manager_info:
		region: ${2:# The region the managed instance group resides.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_region_target_http_proxy "Creates a GCP RegionTargetHttpProxy" b
- name: $1
	gcp_compute_region_target_http_proxy:
		name: ${2:# Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		url_map: ${3:# A reference to the RegionUrlMap resource that defines the mapping from URL to the BackendService.}
		region: ${4:# The region where the regional proxy resides.}
		auth_kind: ${5:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_region_target_http_proxy_info "Gather info for GCP RegionTargetHttpProxy" b
- name: $1
	gcp_compute_region_target_http_proxy_info:
		region: ${2:# The region where the regional proxy resides.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_region_target_https_proxy "Creates a GCP RegionTargetHttpsProxy" b
- name: $1
	gcp_compute_region_target_https_proxy:
		name: ${2:# Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		ssl_certificates: ${3:# A list of RegionSslCertificate resources that are used to authenticate connections between users and the load balancer. Currently, exactly one SSL certificate must be specified.}
		url_map: ${4:# A reference to the RegionUrlMap resource that defines the mapping from URL to the RegionBackendService.}
		region: ${5:# The region where the regional proxy resides.}
		auth_kind: ${6:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_region_target_https_proxy_info "Gather info for GCP RegionTargetHttpsProxy" b
- name: $1
	gcp_compute_region_target_https_proxy_info:
		region: ${2:# The region where the regional proxy resides.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_region_url_map "Creates a GCP RegionUrlMap" b
- name: $1
	gcp_compute_region_url_map:
		name: ${2:# Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		region: ${3:# A reference to the region where the url map resides.}
		auth_kind: ${4:application|machineaccount|serviceaccount}
		# state: #present|absent
		# default_service: # The full or partial URL of the defaultService resource to which traffic is directed if none of the hostRules match. If defaultRouteAction is additionally specified, advanced routing actions like URL Rewrites, etc. take effect prior to sending the request to the backend. However, if defaultService is specified, defaultRouteAction cannot contain any weightedBackendServices. Conversely, if routeAction specifies any weightedBackendServices, service must not be specified. Only one of defaultService, defaultUrlRedirect or defaultRouteAction.weightedBackendService must be set.
		# description: # An optional description of this resource. Provide this property when you create the resource.
		# host_rules: # The list of HostRules to use against the URL.
		# path_matchers: # The list of named PathMatchers to use against the URL.
		# tests: # The list of expected URL mappings. Requests to update this UrlMap will succeed only if all of the test cases pass.
		# default_url_redirect: # When none of the specified hostRules match, the request is redirected to a URL specified by defaultUrlRedirect. If defaultUrlRedirect is specified, defaultService or defaultRouteAction must not be set.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_region_url_map_info "Gather info for GCP RegionUrlMap" b
- name: $1
	gcp_compute_region_url_map_info:
		region: ${2:# A reference to the region where the url map resides.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_reservation "Creates a GCP Reservation" b
- name: $1
	gcp_compute_reservation:
		name: ${2:# Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		specific_reservation: ${3:# Reservation for instances with specific machine shapes.}
		zone: ${4:# The zone where the reservation is made.}
		auth_kind: ${5:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource.
		# specific_reservation_required: false
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_reservation_info "Gather info for GCP Reservation" b
- name: $1
	gcp_compute_reservation_info:
		zone: ${2:# The zone where the reservation is made.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_resource_policy "Creates a GCP ResourcePolicy" b
- name: $1
	gcp_compute_resource_policy:
		name: ${2:# The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])`? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		region: ${3:# Region where resource policy resides.}
		auth_kind: ${4:application|machineaccount|serviceaccount}
		# state: #present|absent
		# snapshot_schedule_policy: # Policy for creating snapshots of persistent disks.
		# group_placement_policy: # Policy for creating snapshots of persistent disks.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_resource_policy_info "Gather info for GCP ResourcePolicy" b
- name: $1
	gcp_compute_resource_policy_info:
		region: ${2:# Region where resource policy resides.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_route "Creates a GCP Route" b
- name: $1
	gcp_compute_route:
		dest_range: ${2:# The destination range of outgoing packets that this route applies to.}
		name: ${3:# Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		network: ${4:# The network that this route applies to.}
		auth_kind: ${5:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource. Provide this property when you create the resource.
		# priority: # The priority of this route. Priority is used to break ties in cases where there is more than one matching route of equal prefix length.
		# tags: # A list of instance tags to which this route applies.
		# next_hop_gateway: # URL to a gateway that should handle matching packets.
		# next_hop_instance: # URL to an instance that should handle matching packets.
		# next_hop_ip: # Network IP address of an instance that should handle matching packets.
		# next_hop_vpn_tunnel: # URL to a VpnTunnel that should handle matching packets.
		# next_hop_ilb: # The URL to a forwarding rule of type loadBalancingScheme=INTERNAL that should handle matching packets.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_route_info "Gather info for GCP Route" b
- name: $1
	gcp_compute_route_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_router "Creates a GCP Router" b
- name: $1
	gcp_compute_router:
		name: ${2:# Name of the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		network: ${3:# A reference to the network to which this router belongs.}
		region: ${4:# Region where the router resides.}
		auth_kind: ${5:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource.
		# bgp: # BGP information specific to this router.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_router_info "Gather info for GCP Router" b
- name: $1
	gcp_compute_router_info:
		region: ${2:# Region where the router resides.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_snapshot "Creates a GCP Snapshot" b
- name: $1
	gcp_compute_snapshot:
		name: ${2:# Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		source_disk: ${3:# A reference to the disk used to create this snapshot.}
		auth_kind: ${4:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource.
		# storage_locations: # Cloud Storage bucket storage location of the snapshot (regional or multi-regional).
		# labels: # Labels to apply to this Snapshot.
		# zone: # A reference to the zone where the disk is hosted.
		# snapshot_encryption_key: # The customer-supplied encryption key of the snapshot. Required if the source snapshot is protected by a customer-supplied encryption key.
		# source_disk_encryption_key: # The customer-supplied encryption key of the source snapshot. Required if the source snapshot is protected by a customer-supplied encryption key.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_snapshot_info "Gather info for GCP Snapshot" b
- name: $1
	gcp_compute_snapshot_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_ssl_certificate "Creates a GCP SslCertificate" b
- name: $1
	gcp_compute_ssl_certificate:
		certificate: ${2:# The certificate in PEM format.}
		private_key: ${3:# The write-only private key in PEM format.}
		auth_kind: ${4:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource.
		# name: # Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_ssl_certificate_info "Gather info for GCP SslCertificate" b
- name: $1
	gcp_compute_ssl_certificate_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_ssl_policy "Creates a GCP SslPolicy" b
- name: $1
	gcp_compute_ssl_policy:
		name: ${2:# Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource.
		# profile: # Profile specifies the set of SSL features that can be used by the load balancer when negotiating SSL with clients. If using `CUSTOM`, the set of SSL features to enable must be specified in the `customFeatures` field.
		# min_tls_version: # The minimum version of SSL protocol that can be used by the clients to establish a connection with the load balancer.
		# custom_features: # A list of features enabled when the selected profile is CUSTOM. The method returns the set of features that can be specified in this list. This field must be empty if the profile is not CUSTOM.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_ssl_policy_info "Gather info for GCP SslPolicy" b
- name: $1
	gcp_compute_ssl_policy_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_subnetwork "Creates a GCP Subnetwork" b
- name: $1
	gcp_compute_subnetwork:
		ip_cidr_range: ${2:# The range of internal addresses that are owned by this subnetwork.}
		name: ${3:# The name of the resource, provided by the client when initially creating the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		network: ${4:# The network this subnet belongs to.}
		region: ${5:# The GCP region for this subnetwork.}
		auth_kind: ${6:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource. Provide this property when you create the resource. This field can be set only at resource creation time.
		# secondary_ip_ranges: # An array of configurations for secondary IP ranges for VM instances contained in this subnetwork. The primary IP of such VM must belong to the primary ipCidrRange of the subnetwork. The alias IPs may belong to either primary or secondary ranges.
		# private_ip_google_access: # When enabled, VMs in this subnetwork without external IP addresses can access Google APIs and services by using Private Google Access.
		# private_ipv6_google_access: # The private IPv6 google access type for the VMs in this subnet.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_subnetwork_info "Gather info for GCP Subnetwork" b
- name: $1
	gcp_compute_subnetwork_info:
		region: ${2:# The GCP region for this subnetwork.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_target_http_proxy "Creates a GCP TargetHttpProxy" b
- name: $1
	gcp_compute_target_http_proxy:
		name: ${2:# Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		url_map: ${3:# A reference to the UrlMap resource that defines the mapping from URL to the BackendService.}
		auth_kind: ${4:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_target_http_proxy_info "Gather info for GCP TargetHttpProxy" b
- name: $1
	gcp_compute_target_http_proxy_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_target_https_proxy "Creates a GCP TargetHttpsProxy" b
- name: $1
	gcp_compute_target_https_proxy:
		name: ${2:# Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		ssl_certificates: ${3:# A list of SslCertificate resources that are used to authenticate connections between users and the load balancer. At least one SSL certificate must be specified.}
		url_map: ${4:# A reference to the UrlMap resource that defines the mapping from URL to the BackendService.}
		auth_kind: ${5:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource.
		# quic_override: # Specifies the QUIC override policy for this resource. This determines whether the load balancer will attempt to negotiate QUIC with clients or not. Can specify one of NONE, ENABLE, or DISABLE. If NONE is specified, uses the QUIC policy with no user overrides, which is equivalent to DISABLE.
		# ssl_policy: # A reference to the SslPolicy resource that will be associated with the TargetHttpsProxy resource. If not set, the TargetHttpsProxy resource will not have any SSL policy configured.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_target_https_proxy_info "Gather info for GCP TargetHttpsProxy" b
- name: $1
	gcp_compute_target_https_proxy_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_target_instance "Creates a GCP TargetInstance" b
- name: $1
	gcp_compute_target_instance:
		name: ${2:# Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		instance: ${3:# A URL to the virtual machine instance that handles traffic for this target instance. Accepts self-links or the partial paths with format `projects/project/zones/zone/instances/instance' or `zones/zone/instances/instance` .}
		zone: ${4:# URL of the zone where the target instance resides.}
		auth_kind: ${5:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource.
		# nat_policy: NO_NAT
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_target_instance_info "Gather info for GCP TargetInstance" b
- name: $1
	gcp_compute_target_instance_info:
		zone: ${2:# URL of the zone where the target instance resides.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_target_pool "Creates a GCP TargetPool" b
- name: $1
	gcp_compute_target_pool:
		name: ${2:# Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		region: ${3:# The region where the target pool resides.}
		auth_kind: ${4:application|machineaccount|serviceaccount}
		# state: #present|absent
		# backup_pool: # This field is applicable only when the containing target pool is serving a forwarding rule as the primary pool, and its failoverRatio field is properly set to a value between [0, 1].
		# description: # An optional description of this resource.
		# failover_ratio: # This field is applicable only when the containing target pool is serving a forwarding rule as the primary pool (i.e., not as a backup pool to some other target pool). The value of the field must be in [0, 1].
		# health_check: # A reference to a HttpHealthCheck resource.
		# instances: # A list of virtual machine instances serving this pool.
		# session_affinity: # Session affinity option. Must be one of these values: * NONE: Connections from the same client IP may go to any instance in the pool.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_target_pool_info "Gather info for GCP TargetPool" b
- name: $1
	gcp_compute_target_pool_info:
		region: ${2:# The region where the target pool resides.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_target_ssl_proxy "Creates a GCP TargetSslProxy" b
- name: $1
	gcp_compute_target_ssl_proxy:
		name: ${2:# Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		service: ${3:# A reference to the BackendService resource.}
		ssl_certificates: ${4:# A list of SslCertificate resources that are used to authenticate connections between users and the load balancer. Currently, exactly one SSL certificate must be specified.}
		auth_kind: ${5:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource.
		# proxy_header: # Specifies the type of proxy header to append before sending data to the backend.
		# ssl_policy: # A reference to the SslPolicy resource that will be associated with the TargetSslProxy resource. If not set, the TargetSslProxy resource will not have any SSL policy configured.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_target_ssl_proxy_info "Gather info for GCP TargetSslProxy" b
- name: $1
	gcp_compute_target_ssl_proxy_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_target_tcp_proxy "Creates a GCP TargetTcpProxy" b
- name: $1
	gcp_compute_target_tcp_proxy:
		name: ${2:# Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		service: ${3:# A reference to the BackendService resource.}
		auth_kind: ${4:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource.
		# proxy_header: # Specifies the type of proxy header to append before sending data to the backend.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_target_tcp_proxy_info "Gather info for GCP TargetTcpProxy" b
- name: $1
	gcp_compute_target_tcp_proxy_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_target_vpn_gateway "Creates a GCP TargetVpnGateway" b
- name: $1
	gcp_compute_target_vpn_gateway:
		name: ${2:# Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		network: ${3:# The network this VPN gateway is accepting traffic for.}
		region: ${4:# The region this gateway should sit in.}
		auth_kind: ${5:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_target_vpn_gateway_info "Gather info for GCP TargetVpnGateway" b
- name: $1
	gcp_compute_target_vpn_gateway_info:
		region: ${2:# The region this gateway should sit in.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_url_map "Creates a GCP UrlMap" b
- name: $1
	gcp_compute_url_map:
		name: ${2:# Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# state: #present|absent
		# default_service: # The full or partial URL of the defaultService resource to which traffic is directed if none of the hostRules match. If defaultRouteAction is additionally specified, advanced routing actions like URL Rewrites, etc. take effect prior to sending the request to the backend. However, if defaultService is specified, defaultRouteAction cannot contain any weightedBackendServices. Conversely, if routeAction specifies any weightedBackendServices, service must not be specified. Only one of defaultService, defaultUrlRedirect or defaultRouteAction.weightedBackendService must be set.
		# description: # An optional description of this resource. Provide this property when you create the resource.
		# header_action: # Specifies changes to request and response headers that need to take effect for the selected backendService. The headerAction specified here take effect after headerAction specified under pathMatcher.
		# host_rules: # The list of HostRules to use against the URL.
		# path_matchers: # The list of named PathMatchers to use against the URL.
		# tests: # The list of expected URL mapping tests. Request to update this UrlMap will succeed only if all of the test cases pass. You can specify a maximum of 100 tests per UrlMap.
		# default_url_redirect: # When none of the specified hostRules match, the request is redirected to a URL specified by defaultUrlRedirect. If defaultUrlRedirect is specified, defaultService or defaultRouteAction must not be set.
		# default_route_action: # defaultRouteAction takes effect when none of the hostRules match. The load balancer performs advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_url_map_info "Gather info for GCP UrlMap" b
- name: $1
	gcp_compute_url_map_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_vpn_tunnel "Creates a GCP VpnTunnel" b
- name: $1
	gcp_compute_vpn_tunnel:
		name: ${2:# Name of the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.}
		shared_secret: ${3:# Shared secret used to set the secure session between the Cloud VPN gateway and the peer VPN gateway.}
		region: ${4:# The region where the tunnel is located.}
		auth_kind: ${5:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # An optional description of this resource.
		# target_vpn_gateway: # URL of the Target VPN gateway with which this VPN tunnel is associated.
		# vpn_gateway: # URL of the VPN gateway with which this VPN tunnel is associated.
		# vpn_gateway_interface: # The interface ID of the VPN gateway with which this VPN tunnel is associated.
		# peer_external_gateway: # URL of the peer side external VPN gateway to which this VPN tunnel is connected.
		# peer_external_gateway_interface: # The interface ID of the external VPN gateway to which this VPN tunnel is connected.
		# peer_gcp_gateway: # URL of the peer side HA GCP VPN gateway to which this VPN tunnel is connected.
		# router: # URL of router resource to be used for dynamic routing.
		# peer_ip: # IP address of the peer VPN gateway. Only IPv4 is supported.
		# ike_version: 2
		# local_traffic_selector: # Local traffic selector to use when establishing the VPN tunnel with peer VPN gateway. The value should be a CIDR formatted string, for example `192.168.0.0/16`. The ranges should be disjoint.
		# remote_traffic_selector: # Remote traffic selector to use when establishing the VPN tunnel with peer VPN gateway. The value should be a CIDR formatted string, for example `192.168.0.0/16`. The ranges should be disjoint.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_compute_vpn_tunnel_info "Gather info for GCP VpnTunnel" b
- name: $1
	gcp_compute_vpn_tunnel_info:
		region: ${2:# The region where the tunnel is located.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# filters: # A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_container_cluster "Creates a GCP Cluster" b
- name: $1
	gcp_container_cluster:
		location: ${2:# The location where the cluster is deployed.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# state: #present|absent
		# name: # The name of this cluster. The name must be unique within this project and location, and can be up to 40 characters. Must be Lowercase letters, numbers, and hyphens only. Must start with a letter. Must end with a number or a letter.
		# description: # An optional description of this cluster.
		# initial_node_count: # The number of nodes to create in this cluster. You must ensure that your Compute Engine resource quota is sufficient for this number of instances. You must also have available firewall and routes quota. For requests, this field should only be used in lieu of a "nodePool" object, since this configuration (along with the "nodeConfig") will be used to create a "NodePool" object with an auto-generated name. Do not use this and a nodePool at the same time.
		# node_config: # Parameters used in creating the cluster's nodes.
		# master_auth: # The authentication information for accessing the master endpoint.
		# logging_service: # The logging service the cluster should use to write logs. Currently available options: logging.googleapis.com - the Google Cloud Logging service.
		# monitoring_service: # The monitoring service the cluster should use to write metrics.
		# network: # The name of the Google Compute Engine network to which the cluster is connected. If left unspecified, the default network will be used.
		# database_encryption: # Configuration of etcd encryption.
		# private_cluster_config: # Configuration for a private cluster.
		# cluster_ipv4_cidr: # The IP address range of the container pods in this cluster, in CIDR notation (e.g. 10.96.0.0/14). Leave blank to have one automatically chosen or specify a /14 block in 10.0.0.0/8.
		# enable_tpu: # (Optional) Whether to enable Cloud TPU resources in this cluster.
		# addons_config: # Configurations for the various addons available to run in the cluster.
		# subnetwork: # The name of the Google Compute Engine subnetwork to which the cluster is connected.
		# locations: # The list of Google Compute Engine zones in which the cluster's nodes should be located.
		# resource_labels: # The resource labels for the cluster to use to annotate any related Google Compute Engine resources.
		# legacy_abac: # Configuration for the legacy ABAC authorization mode.
		# network_policy: # Configuration options for the NetworkPolicy feature.
		# default_max_pods_constraint: # The default constraint on the maximum number of pods that can be run simultaneously on a node in the node pool of this cluster.
		# ip_allocation_policy: # Configuration for controlling how IPs are allocated in the cluster.
		# initial_cluster_version: # The software version of the master endpoint and kubelets used in the cluster when it was first created. The version can be upgraded over time.
		# master_authorized_networks_config: # Configuration for controlling how IPs are allocated in the cluster.
		# binary_authorization: # Configuration for the BinaryAuthorization feature.
		# release_channel: # ReleaseChannel indicates which release channel a cluster is subscribed to.
		# shielded_nodes: # Shielded Nodes configuration.
		# network_config: # Network configurations .
		# enable_kubernetes_alpha: # Kubernetes alpha features are enabled on this cluster. This includes alpha API groups (e.g. v1alpha1) and features that may not be production ready in the kubernetes version of the master and nodes.
		# kubectl_path: # The path that the kubectl config file will be written to.
		# kubectl_context: # The name of the context for the kubectl config file. Will default to the cluster name.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_container_cluster_info "Gather info for GCP Cluster" b
- name: $1
	gcp_container_cluster_info:
		location: ${2:# The location where the cluster is deployed.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_container_node_pool "Creates a GCP NodePool" b
- name: $1
	gcp_container_node_pool:
		initial_node_count: ${2:# The initial node count for the pool. You must ensure that your Compute Engine resource quota is sufficient for this number of instances. You must also have available firewall and routes quota.}
		cluster: ${3:# The cluster this node pool belongs to.}
		location: ${4:# The location where the node pool is deployed.}
		auth_kind: ${5:application|machineaccount|serviceaccount}
		# state: #present|absent
		# name: # The name of the node pool.
		# config: # The node configuration of the pool.
		# version: # The version of the Kubernetes of this node.
		# autoscaling: # Autoscaler configuration for this NodePool. Autoscaler is enabled only if a valid configuration is present.
		# management: # Management configuration for this NodePool.
		# max_pods_constraint: # The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
		# conditions: # Which conditions caused the current node pool state.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_container_node_pool_info "Gather info for GCP NodePool" b
- name: $1
	gcp_container_node_pool_info:
		location: ${2:# The location where the node pool is deployed.}
		cluster: ${3:# The cluster this node pool belongs to.}
		auth_kind: ${4:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_dns_managed_zone "Creates a GCP ManagedZone" b
- name: $1
	gcp_dns_managed_zone:
		description: ${2:# A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the managed zone's function.}
		dns_name: ${3:# The DNS name of this managed zone, for instance "example.com.".}
		name: ${4:# User assigned name for this resource.}
		auth_kind: ${5:application|machineaccount|serviceaccount}
		# state: #present|absent
		# dnssec_config: # DNSSEC configuration.
		# name_server_set: # Optionally specifies the NameServerSet for this ManagedZone. A NameServerSet is a set of DNS name servers that all host the same ManagedZones. Most users will leave this field unset.
		# labels: # A set of key/value label pairs to assign to this ManagedZone.
		# visibility: public
		# private_visibility_config: # For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from.
		# forwarding_config: # The presence for this field indicates that outbound forwarding is enabled for this zone. The value of this field contains the set of destinations to forward to.
		# peering_config: # The presence of this field indicates that DNS Peering is enabled for this zone. The value of this field contains the network to peer with.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_dns_managed_zone_info "Gather info for GCP ManagedZone" b
- name: $1
	gcp_dns_managed_zone_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# dns_name: # Restricts the list to return only zones with this domain name.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_dns_resource_record_set "Creates a GCP ResourceRecordSet" b
- name: $1
	gcp_dns_resource_record_set:
		name: ${2:# For example, U(www.example.com).}
		type: ${3:# One of valid DNS resource types.}
		managed_zone: ${4:# Identifies the managed zone addressed by this request. This must be a dictionary that contains both a 'name' key and a 'dnsName' key. You can pass in the results of the gcp_dns_managed_zone module, which will contain both.}
		auth_kind: ${5:application|machineaccount|serviceaccount}
		# state: #present|absent
		# ttl: # Number of seconds that this ResourceRecordSet can be cached by resolvers.
		# target: # As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) .
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_dns_resource_record_set_info "Gather info for GCP ResourceRecordSet" b
- name: $1
	gcp_dns_resource_record_set_info:
		managed_zone: ${2:# Identifies the managed zone addressed by this request. This must be a dictionary that contains both a 'name' key and a 'dnsName' key. You can pass in the results of the gcp_dns_managed_zone module, which will contain both.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_filestore_instance "Creates a GCP Instance" b
- name: $1
	gcp_filestore_instance:
		name: ${2:# The resource name of the instance.}
		tier: ${3:# The service tier of the instance.}
		file_shares: ${4:# File system shares on the instance. For this version, only a single file share is supported.}
		networks: ${5:# VPC networks to which the instance is connected. For this version, only a single network is supported.}
		zone: ${6:# The name of the Filestore zone of the instance.}
		auth_kind: ${7:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # A description of the instance.
		# labels: # Resource labels to represent user-provided metadata.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_filestore_instance_info "Gather info for GCP Instance" b
- name: $1
	gcp_filestore_instance_info:
		zone: ${2:# The name of the Filestore zone of the instance.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_iam_role "Creates a GCP Role" b
- name: $1
	gcp_iam_role:
		name: ${2:# The name of the role.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# state: #present|absent
		# title: # A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes.
		# description: # Human-readable description for the role.
		# included_permissions: # Names of permissions this role grants when bound in an IAM policy.
		# stage: # The current launch stage of the role.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_iam_role_info "Gather info for GCP Role" b
- name: $1
	gcp_iam_role_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_iam_service_account "Creates a GCP ServiceAccount" b
- name: $1
	gcp_iam_service_account:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# state: #present|absent
		# name: # The name of the service account.
		# display_name: # User specified description of service account.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_iam_service_account_info "Gather info for GCP ServiceAccount" b
- name: $1
	gcp_iam_service_account_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_iam_service_account_key "Creates a GCP ServiceAccountKey" b
- name: $1
	gcp_iam_service_account_key:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# state: #present|absent
		# private_key_type: # Output format for the service account key.
		# key_algorithm: # Specifies the algorithm for the key.
		# service_account: # The name of the serviceAccount.
		# path: # The full name of the file that will hold the service account private key. The management of this file will depend on the value of sync_file parameter.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_kms_crypto_key "Creates a GCP CryptoKey" b
- name: $1
	gcp_kms_crypto_key:
		name: ${2:# The resource name for the CryptoKey.}
		key_ring: ${3:# The KeyRing that this key belongs to.}
		auth_kind: ${4:application|machineaccount|serviceaccount}
		# state: #present|absent
		# labels: # Labels with user-defined metadata to apply to this resource.
		# purpose: ENCRYPT_DECRYPT
		# rotation_period: # Every time this period passes, generate a new CryptoKeyVersion and set it as the primary.
		# version_template: # A template describing settings for new crypto key versions.
		# skip_initial_version_creation: false
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_kms_crypto_key_info "Gather info for GCP CryptoKey" b
- name: $1
	gcp_kms_crypto_key_info:
		key_ring: ${2:# The KeyRing that this key belongs to.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_kms_key_ring "Creates a GCP KeyRing" b
- name: $1
	gcp_kms_key_ring:
		name: ${2:# The resource name for the KeyRing.}
		location: ${3:# The location for the KeyRing.}
		auth_kind: ${4:application|machineaccount|serviceaccount}
		# state: #present|absent
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_kms_key_ring_info "Gather info for GCP KeyRing" b
- name: $1
	gcp_kms_key_ring_info:
		location: ${2:# The location for the KeyRing.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_logging_metric "Creates a GCP Metric" b
- name: $1
	gcp_logging_metric:
		name: ${2:# The client-assigned metric identifier. Examples - "error_count", "nginx/requests".}
		filter: ${3:# An advanced logs filter (U(https://cloud.google.com/logging/docs/view/advanced-filters)) which is used to match log entries.}
		metric_descriptor: ${4:# The metric descriptor associated with the logs-based metric.}
		auth_kind: ${5:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # A description of this metric, which is used in documentation. The maximum length of the description is 8000 characters.
		# label_extractors: # A map from a label key string to an extractor expression which is used to extract data from a log entry field and assign as the label value. Each label key specified in the LabelDescriptor must have an associated extractor expression in this map. The syntax of the extractor expression is the same as for the valueExtractor field.
		# value_extractor: # A valueExtractor is required when using a distribution logs-based metric to extract the values to record from a log entry. Two functions are supported for value extraction - EXTRACT(field) or REGEXP_EXTRACT(field, regex). The argument are 1. field - The name of the log entry field from which the value is to be extracted. 2. regex - A regular expression using the Google RE2 syntax (U(https://github.com/google/re2/wiki/Syntax)) with a single capture group to extract data from the specified log entry field. The value of the field is converted to a string before applying the regex. It is an error to specify a regex that does not include exactly one capture group.
		# bucket_options: # The bucketOptions are required when the logs-based metric is using a DISTRIBUTION value type and it describes the bucket boundaries used to create a histogram of the extracted values.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_logging_metric_info "Gather info for GCP Metric" b
- name: $1
	gcp_logging_metric_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_mlengine_model "Creates a GCP Model" b
- name: $1
	gcp_mlengine_model:
		name: ${2:# The name specified for the model.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # The description specified for the model when it was created.
		# default_version: # The default version of the model. This version will be used to handle prediction requests that do not specify a version.
		# regions: # The list of regions where the model is going to be deployed.
		# online_prediction_logging: # If true, online prediction access logs are sent to StackDriver Logging.
		# online_prediction_console_logging: # If true, online prediction nodes send stderr and stdout streams to Stackdriver Logging.
		# labels: # One or more labels that you can add, to organize your models.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_mlengine_model_info "Gather info for GCP Model" b
- name: $1
	gcp_mlengine_model_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_mlengine_version "Creates a GCP Version" b
- name: $1
	gcp_mlengine_version:
		name: ${2:# The name specified for the version when it was created.}
		deployment_uri: ${3:# The Cloud Storage location of the trained model used to create the version.}
		model: ${4:# The model that this version belongs to.}
		auth_kind: ${5:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # The description specified for the version when it was created.
		# runtime_version: # The AI Platform runtime version to use for this deployment.
		# machine_type: # The type of machine on which to serve the model. Currently only applies to online prediction service.
		# labels: # One or more labels that you can add, to organize your model versions.
		# framework: # The machine learning framework AI Platform uses to train this version of the model.
		# python_version: # The version of Python used in prediction. If not set, the default version is '2.7'. Python '3.5' is available when runtimeVersion is set to '1.4' and above. Python '2.7' works with all supported runtime versions.
		# service_account: # Specifies the service account for resource access control.
		# auto_scaling: # Automatically scale the number of nodes used to serve the model in response to increases and decreases in traffic. Care should be taken to ramp up traffic according to the model's ability to scale or you will start seeing increases in latency and 429 response codes.
		# manual_scaling: # Manually select the number of nodes to use for serving the model. You should generally use autoScaling with an appropriate minNodes instead, but this option is available if you want more predictable billing. Beware that latency and error rates will increase if the traffic exceeds that capability of the system to serve it based on the selected number of nodes.
		# prediction_class: # The fully qualified name (module_name.class_name) of a class that implements the Predictor interface described in this reference field. The module containing this class should be included in a package provided to the packageUris field.
		# is_default: # If true, this version will be used to handle prediction requests that do not specify a version.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_mlengine_version_info "Gather info for GCP Version" b
- name: $1
	gcp_mlengine_version_info:
		model: ${2:# The model that this version belongs to.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_pubsub_subscription "Creates a GCP Subscription" b
- name: $1
	gcp_pubsub_subscription:
		name: ${2:# Name of the subscription.}
		topic: ${3:# A reference to a Topic resource.}
		auth_kind: ${4:application|machineaccount|serviceaccount}
		# state: #present|absent
		# labels: # A set of key/value label pairs to assign to this Subscription.
		# push_config: # If push delivery is used with this subscription, this field is used to configure it. An empty pushConfig signifies that the subscriber will pull and ack messages using API methods.
		# ack_deadline_seconds: # This value is the maximum time after a subscriber receives a message before the subscriber should acknowledge the message. After message delivery but before the ack deadline expires and before the message is acknowledged, it is an outstanding message and will not be delivered again during that time (on a best-effort basis).
		# message_retention_duration: 604800s
		# retain_acked_messages: # Indicates whether to retain acknowledged messages. If `true`, then messages are not expunged from the subscription's backlog, even if they are acknowledged, until they fall out of the messageRetentionDuration window.
		# expiration_policy: # A policy that specifies the conditions for this subscription's expiration.
		# filter: # The subscription only delivers the messages that match the filter. Pub/Sub automatically acknowledges the messages that don't match the filter. You can filter messages by their attributes. The maximum length of a filter is 256 bytes. After creating the subscription, you can't modify the filter.
		# dead_letter_policy: # A policy that specifies the conditions for dead lettering messages in this subscription. If dead_letter_policy is not set, dead lettering is disabled.
		# retry_policy: # A policy that specifies how Pub/Sub retries message delivery for this subscription.
		# enable_message_ordering: # If `true`, messages published with the same orderingKey in PubsubMessage will be delivered to the subscribers in the order in which they are received by the Pub/Sub system. Otherwise, they may be delivered in any order.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_pubsub_subscription_info "Gather info for GCP Subscription" b
- name: $1
	gcp_pubsub_subscription_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_pubsub_topic "Creates a GCP Topic" b
- name: $1
	gcp_pubsub_topic:
		name: ${2:# Name of the topic.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# state: #present|absent
		# kms_key_name: # The resource name of the Cloud KMS CryptoKey to be used to protect access to messages published on this topic. Your project's PubSub service account (`service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com`) must have `roles/cloudkms.cryptoKeyEncrypterDecrypter` to use this feature.
		# labels: # A set of key/value label pairs to assign to this Topic.
		# message_storage_policy: # Policy constraining the set of Google Cloud Platform regions where messages published to the topic may be stored. If not present, then no constraints are in effect.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_pubsub_topic_info "Gather info for GCP Topic" b
- name: $1
	gcp_pubsub_topic_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_redis_instance "Creates a GCP Instance" b
- name: $1
	gcp_redis_instance:
		name: ${2:# The ID of the instance or a fully qualified identifier for the instance.}
		memory_size_gb: ${3:# Redis memory size in GiB.}
		region: ${4:# The name of the Redis region of the instance.}
		auth_kind: ${5:application|machineaccount|serviceaccount}
		# state: #present|absent
		# alternative_location_id: # Only applicable to STANDARD_HA tier which protects the instance against zonal failures by provisioning it across two zones.
		# auth_enabled: false
		# authorized_network: # The full name of the Google Compute Engine network to which the instance is connected. If left unspecified, the default network will be used.
		# connect_mode: DIRECT_PEERING
		# display_name: # An arbitrary and optional user-provided name for the instance.
		# labels: # Resource labels to represent user provided metadata.
		# redis_configs: # Redis configuration parameters, according to U(http://redis.io/topics/config).
		# location_id: # The zone where the instance will be provisioned. If not provided, the service will choose a zone for the instance. For STANDARD_HA tier, instances will be created across two zones for protection against zonal failures. If [alternativeLocationId] is also provided, it must be different from [locationId].
		# redis_version: # The version of Redis software. If not provided, latest supported version will be used. Currently, the supported values are: - REDIS_5_0 for Redis 5.0 compatibility - REDIS_4_0 for Redis 4.0 compatibility - REDIS_3_2 for Redis 3.2 compatibility .
		# reserved_ip_range: # The CIDR range of internal addresses that are reserved for this instance. If not provided, the service will choose an unused /29 block, for example, 10.0.0.0/29 or 192.168.0.0/29. Ranges must be unique and non-overlapping with existing subnets in an authorized network.
		# tier: BASIC
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_redis_instance_info "Gather info for GCP Instance" b
- name: $1
	gcp_redis_instance_info:
		region: ${2:# The name of the Redis region of the instance.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_resourcemanager_project "Creates a GCP Project" b
- name: $1
	gcp_resourcemanager_project:
		id: ${2:# The unique, user-assigned ID of the Project. It must be 6 to 30 lowercase letters, digits, or hyphens. It must start with a letter.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# state: #present|absent
		# name: # The user-assigned display name of the Project. It must be 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point.
		# labels: # The labels associated with this Project.
		# parent: # A parent organization.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_resourcemanager_project_info "Gather info for GCP Project" b
- name: $1
	gcp_resourcemanager_project_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_runtimeconfig_config "Creates a GCP Config" b
- name: $1
	gcp_runtimeconfig_config:
		name: ${2:# The name of the runtime config.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # The description to associate with the runtime config.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_runtimeconfig_config_info "Gather info for GCP Config" b
- name: $1
	gcp_runtimeconfig_config_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_runtimeconfig_variable "Creates a GCP Variable" b
- name: $1
	gcp_runtimeconfig_variable:
		name: ${2:# The name of the variable resource.}
		config: ${3:# The name of the runtime config that this variable belongs to.}
		auth_kind: ${4:application|machineaccount|serviceaccount}
		# state: #present|absent
		# value: # The binary value of the variable. Either this or `text` can be set.
		# text: # The string value of the variable. Either this or `value` can be set.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_runtimeconfig_variable_info "Gather info for GCP Variable" b
- name: $1
	gcp_runtimeconfig_variable_info:
		config: ${2:# The name of the runtime config that this variable belongs to.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_serviceusage_service "Creates a GCP Service" b
- name: $1
	gcp_serviceusage_service:
		name: ${2:# The resource name of the service .}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# state: #present|absent
		# disable_dependent_services: # Indicates if dependent services should also be disabled. Can only be turned on if service is disabled.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_serviceusage_service_info "Gather info for GCP Service" b
- name: $1
	gcp_serviceusage_service_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_sourcerepo_repository "Creates a GCP Repository" b
- name: $1
	gcp_sourcerepo_repository:
		name: ${2:# Resource name of the repository, of the form projects/{{project}}/repos/{{repo}}.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# state: #present|absent
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_sourcerepo_repository_info "Gather info for GCP Repository" b
- name: $1
	gcp_sourcerepo_repository_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_spanner_database "Creates a GCP Database" b
- name: $1
	gcp_spanner_database:
		name: ${2:# A unique identifier for the database, which cannot be changed after the instance is created. Values are of the form [a-z][-a-z0-9]*[a-z0-9].}
		instance: ${3:# The instance to create the database on.}
		auth_kind: ${4:application|machineaccount|serviceaccount}
		# state: #present|absent
		# extra_statements: # An optional list of DDL statements to run inside the newly created database. Statements can create tables, indexes, etc. These statements execute atomically with the creation of the database: if there is an error in any statement, the database is not created.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_spanner_database_info "Gather info for GCP Database" b
- name: $1
	gcp_spanner_database_info:
		instance: ${2:# The instance to create the database on.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_spanner_instance "Creates a GCP Instance" b
- name: $1
	gcp_spanner_instance:
		name: ${2:# A unique identifier for the instance, which cannot be changed after the instance is created. The name must be between 6 and 30 characters in length.}
		config: ${3:# The name of the instance's configuration (similar but not quite the same as a region) which defines defines the geographic placement and replication of your databases in this instance. It determines where your data is stored. Values are typically of the form `regional-europe-west1` , `us-central` etc.}
		display_name: ${4:# The descriptive name for this instance as it appears in UIs. Must be unique per project and between 4 and 30 characters in length.}
		auth_kind: ${5:application|machineaccount|serviceaccount}
		# state: #present|absent
		# node_count: 1
		# labels: # An object containing a list of "key": value pairs.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_spanner_instance_info "Gather info for GCP Instance" b
- name: $1
	gcp_spanner_instance_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_sql_database "Creates a GCP Database" b
- name: $1
	gcp_sql_database:
		name: ${2:# The name of the database in the Cloud SQL instance.}
		instance: ${3:# The name of the Cloud SQL instance. This does not include the project ID.}
		auth_kind: ${4:application|machineaccount|serviceaccount}
		# state: #present|absent
		# charset: # The charset value. See MySQL's [Supported Character Sets and Collations](U(https://dev.mysql.com/doc/refman/5.7/en/charset-charsets.html)) and Postgres' [Character Set Support](U(https://www.postgresql.org/docs/9.6/static/multibyte.html)) for more details and supported values. Postgres databases only support a value of `UTF8` at creation time.
		# collation: # The collation value. See MySQL's [Supported Character Sets and Collations](U(https://dev.mysql.com/doc/refman/5.7/en/charset-charsets.html)) and Postgres' [Collation Support](U(https://www.postgresql.org/docs/9.6/static/collation.html)) for more details and supported values. Postgres databases only support a value of `en_US.UTF8` at creation time.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_sql_database_info "Gather info for GCP Database" b
- name: $1
	gcp_sql_database_info:
		instance: ${2:# The name of the Cloud SQL instance. This does not include the project ID.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_sql_instance "Creates a GCP Instance" b
- name: $1
	gcp_sql_instance:
		name: ${2:# Name of the Cloud SQL instance. This does not include the project ID.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# state: #present|absent
		# backend_type: # * FIRST_GEN: First Generation instance. MySQL only.
		# connection_name: # Connection name of the Cloud SQL instance used in connection strings.
		# database_version: # The database engine type and version. For First Generation instances, can be MYSQL_5_5, or MYSQL_5_6. For Second Generation instances, can be MYSQL_5_6 or MYSQL_5_7. Defaults to MYSQL_5_6.
		# failover_replica: # The name and status of the failover replica. This property is applicable only to Second Generation instances.
		# instance_type: # The instance type. This can be one of the following.
		# ipv6_address: # The IPv6 address assigned to the instance. This property is applicable only to First Generation instances.
		# master_instance_name: # The name of the instance which will act as master in the replication setup.
		# max_disk_size: # The maximum disk size of the instance in bytes.
		# region: # The geographical region. Defaults to us-central or us-central1 depending on the instance type (First Generation or Second Generation/PostgreSQL).
		# replica_configuration: # Configuration specific to failover replicas and read replicas.
		# settings: # The user settings.
		# disk_encryption_configuration: # Disk encryption settings.
		# disk_encryption_status: # Disk encryption status.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_sql_instance_info "Gather info for GCP Instance" b
- name: $1
	gcp_sql_instance_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_sql_ssl_cert "Creates a GCP SslCert" b
- name: $1
	gcp_sql_ssl_cert:
		instance: ${2:# The name of the Cloud SQL instance. This does not include the project ID.}
		sha1_fingerprint: ${3:# The SHA-1 of the certificate.}
		auth_kind: ${4:application|machineaccount|serviceaccount}
		# state: #present|absent
		# cert: # PEM representation of the X.509 certificate.
		# cert_serial_number: # Serial number, as extracted from the certificate.
		# common_name: # User supplied name. Constrained to [a-zA-Z.-_ ]+.
		# create_time: # The time when the certificate was created in RFC 3339 format, for example 2012-11-15T16:19:00.094Z.
		# expiration_time: # The time when the certificate expires in RFC 3339 format, for example 2012-11-15T16:19:00.094Z.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_sql_user "Creates a GCP User" b
- name: $1
	gcp_sql_user:
		host: ${2:# The host name from which the user can connect. For insert operations, host defaults to an empty string. For update operations, host is specified as part of the request URL. The host name cannot be updated after insertion.}
		name: ${3:# The name of the user in the Cloud SQL instance.}
		instance: ${4:# The name of the Cloud SQL instance. This does not include the project ID.}
		auth_kind: ${5:application|machineaccount|serviceaccount}
		# state: #present|absent
		# password: # The password for the user.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_sql_user_info "Gather info for GCP User" b
- name: $1
	gcp_sql_user_info:
		instance: ${2:# The name of the Cloud SQL instance. This does not include the project ID.}
		auth_kind: ${3:application|machineaccount|serviceaccount}
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_storage_bucket "Creates a GCP Bucket" b
- name: $1
	gcp_storage_bucket:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# state: #present|absent
		# acl: # Access controls on the bucket.
		# cors: # The bucket's Cross-Origin Resource Sharing (CORS) configuration.
		# default_event_based_hold: # Whether or not to automatically apply an eventBasedHold to new objects added to the bucket.
		# default_object_acl: # Default access controls to apply to new objects when no ACL is provided.
		# lifecycle: # The bucket's lifecycle configuration.
		# location: # The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Defaults to US. See the developer's guide for the authoritative list.
		# logging: # The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.
		# metageneration: # The metadata generation of this bucket.
		# name: # The name of the bucket.
		# owner: # The owner of the bucket. This is always the project team's owner group.
		# storage_class: # The bucket's default storage class, used whenever no storageClass is specified for a newly-created object. This defines how objects in the bucket are stored and determines the SLA and the cost of storage.
		# versioning: # The bucket's versioning configuration.
		# website: # The bucket's website configuration, controlling how the service behaves when accessing bucket contents as a web site. See the Static Website Examples for more information.
		# labels: # Labels applied to this bucket. A list of key->value pairs.
		# project: # The Google Cloud Platform project to use.
		# predefined_default_object_acl: # Apply a predefined set of default object access controls to this bucket.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_storage_bucket_access_control "Creates a GCP BucketAccessControl" b
- name: $1
	gcp_storage_bucket_access_control:
		bucket: ${2:# The name of the bucket.}
		entity: ${3:# The entity holding the permission, in one of the following forms: user-userId user-email group-groupId group-email domain-domain project-team-projectId allUsers allAuthenticatedUsers Examples: The user liz@example.com would be user-liz@example.com.}
		auth_kind: ${4:application|machineaccount|serviceaccount}
		# state: #present|absent
		# role: # The access permission for the entity.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_storage_default_object_acl "Creates a GCP DefaultObjectACL" b
- name: $1
	gcp_storage_default_object_acl:
		bucket: ${2:# The name of the bucket.}
		entity: ${3:# The entity holding the permission, in one of the following forms: * user-{{userId}} * user-{{email}} (such as "user-liz@example.com") * group-{{groupId}} * group-{{email}} (such as "group-example@googlegroups.com") * domain-{{domain}} (such as "domain-example.com") * project-team-{{projectId}} * allUsers * allAuthenticatedUsers .}
		role: ${4:# The access permission for the entity.}
		auth_kind: ${5:application|machineaccount|serviceaccount}
		# state: #present|absent
		# object: # The name of the object, if applied to an object.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_storage_object "Creates a GCP Object" b
- name: $1
	gcp_storage_object:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# action: download|upload|delete
		# src: # Source location of file (may be local machine or cloud depending on action). Cloud locations need to be urlencoded including slashes.
		# dest: # Destination location of file (may be local machine or cloud depending on action). Cloud location need to be urlencoded including slashes.
		# bucket: # The name of the bucket.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_tpu_node "Creates a GCP Node" b
- name: $1
	gcp_tpu_node:
		name: ${2:# The immutable name of the TPU.}
		accelerator_type: ${3:# The type of hardware accelerators associated with this node.}
		tensorflow_version: ${4:# The version of Tensorflow running in the Node.}
		auth_kind: ${5:application|machineaccount|serviceaccount}
		# state: #present|absent
		# description: # The user-supplied description of the TPU. Maximum of 512 characters.
		# network: # The name of a network to peer the TPU node to. It must be a preexisting Compute Engine network inside of the project on which this API has been activated. If none is provided, "default" will be used.
		# cidr_block: # The CIDR block that the TPU node will use when selecting an IP address. This CIDR block must be a /29 block; the Compute Engine networks API forbids a smaller block, and using a larger block would be wasteful (a node can only consume one IP address).
		# use_service_networking: false
		# scheduling_config: # Sets the scheduling options for this TPU instance.
		# labels: # Resource labels to represent user provided metadata.
		# zone: # The GCP location for the TPU. If it is not provided, the provider zone is used.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet gcp_tpu_node_info "Gather info for GCP Node" b
- name: $1
	gcp_tpu_node_info:
		auth_kind: ${2:application|machineaccount|serviceaccount}
		# zone: # The GCP location for the TPU. If it is not provided, the provider zone is used.
		# project: # The Google Cloud Platform project to use.
		# service_account_contents: # The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.
		# service_account_file: # The path of a Service Account JSON file if serviceaccount is selected as type.
		# service_account_email: # An optional service account email address if machineaccount is selected and the user does not wish to use the default email.
		# scopes: # Array of scopes to be used
		# env_type: # Specifies which Ansible environment you're running this module within.
$0
endsnippet

snippet infini_cluster "Create, Delete and Modify Host Cluster on Infinibox" b
- name: $1
	infini_cluster:
		name: ${2:# Cluster Name}
		system: ${3:# Infinibox Hostname or IPv4 Address.}
		# state: stat|#present|absent
		# user: # Infinibox User username with sufficient priveledges ( see notes ).
		# password: # Infinibox User password.
$0
endsnippet

snippet infini_export "Create, Delete or Modify NFS Exports on Infinibox" b
- name: $1
	infini_export:
		name: ${2:# Export name. Must start with a forward slash, e.g. name=/data.}
		filesystem: ${3:# Name of exported file system.}
		system: ${4:# Infinibox Hostname or IPv4 Address.}
		# state: stat|#present|absent
		# client_list: All Hosts(*), RW, no_root_squash: True
		# user: # Infinibox User username with sufficient priveledges ( see notes ).
		# password: # Infinibox User password.
$0
endsnippet

snippet infini_export_client "Create, Delete or Modify NFS Client(s) for existing exports on Infinibox" b
- name: $1
	infini_export_client:
		client: ${2:# Client IP or Range. Ranges can be defined as follows 192.168.0.1-192.168.0.254.}
		export: ${3:# Name of the export.}
		system: ${4:# Infinibox Hostname or IPv4 Address.}
		# state: #present|absent
		# access_mode: #RW|RO
		# no_root_squash: no
		# user: # Infinibox User username with sufficient priveledges ( see notes ).
		# password: # Infinibox User password.
$0
endsnippet

snippet infini_fs "Create, Delete or Modify filesystems on Infinibox" b
- name: $1
	infini_fs:
		name: ${2:# File system name.}
		pool: ${3:# Pool that will host file system.}
		system: ${4:# Infinibox Hostname or IPv4 Address.}
		# state: #present|absent
		# size: # File system size in MB, GB or TB units. See examples.
		# user: # Infinibox User username with sufficient priveledges ( see notes ).
		# password: # Infinibox User password.
$0
endsnippet

snippet infini_host "Create, Delete and Modify Hosts on Infinibox" b
- name: $1
	infini_host:
		name: ${2:# Host Name}
		system: ${3:# Infinibox Hostname or IPv4 Address.}
		# state: stat|#present|absent
		# user: # Infinibox User username with sufficient priveledges ( see notes ).
		# password: # Infinibox User password.
$0
endsnippet

snippet infini_map "Create and Delete mapping of a volume to a host or cluster on Infinibox" b
- name: $1
	infini_map:
		volume: ${2:# Volume name to map to the host}
		system: ${3:# Infinibox Hostname or IPv4 Address.}
		# host: # Host Name
		# cluster: # Cluster Name
		# state: stat|#present|absent
		# user: # Infinibox User username with sufficient priveledges ( see notes ).
		# password: # Infinibox User password.
$0
endsnippet

snippet infini_pool "Create, Delete and Modify Pools on Infinibox" b
- name: $1
	infini_pool:
		name: ${2:# Pool Name}
		system: ${3:# Infinibox Hostname or IPv4 Address.}
		# state: #present|absent
		# size: # Pool Physical Capacity in MB, GB or TB units. If pool size is not set on pool creation, size will be equal to 1TB. See examples.
		# vsize: # Pool Virtual Capacity in MB, GB or TB units. If pool vsize is not set on pool creation, Virtual Capacity will be equal to Physical Capacity. See examples.
		# ssd_cache: yes
		# compression: yes
		# user: # Infinibox User username with sufficient priveledges ( see notes ).
		# password: # Infinibox User password.
$0
endsnippet

snippet infini_port "Add and Delete fiber channel and iSCSI ports to a host on Infinibox" b
- name: $1
	infini_port:
		name: ${2:# Host Name}
		system: ${3:# Infinibox Hostname or IPv4 Address.}
		# state: stat|#present|absent
		# wwns: []
		# iqns: []
		# user: # Infinibox User username with sufficient priveledges ( see notes ).
		# password: # Infinibox User password.
$0
endsnippet

snippet infini_user "Create, Delete and Modify a User on Infinibox" b
- name: $1
	infini_user:
		user_name: ${2:# The new user's Name. Once a user is created, the user_name may not be changed from this module. It may be changed from the UI or from infinishell.}
		user_email: ${3:# The new user's Email address}
		user_password: ${4:# The new user's password}
		user_role: ${5:admin|pool_admin|read_only}
		system: ${6:# Infinibox Hostname or IPv4 Address.}
		# user_enabled: yes
		# user_pool: # Use with role==pool_admin. Specify the new user's pool.
		# state: stat|reset_password|#present|absent
		# user: # Infinibox User username with sufficient priveledges ( see notes ).
		# password: # Infinibox User password.
$0
endsnippet

snippet aws_netapp_cvs_filesystems "NetApp AWS Cloud Volumes Service Manage FileSystem." b
- name: $1
	aws_netapp_cvs_filesystems:
		state: ${2:present|absent}
		region: ${3:# The region to which the filesystem belongs to.}
		creationToken: ${4:# Name of the filesystem}
		api_key: ${5:# The access key to authenticate with the AWSCVS Web Services Proxy or Embedded Web Services API.}
		secret_key: ${6:# The secret_key to authenticate with the AWSCVS Web Services Proxy or Embedded Web Services API.}
		api_url: ${7:# The url to the AWSCVS Web Services Proxy or Embedded Web Services API.}
		# quotaInBytes: # Size of the filesystem
		# serviceLevel: standard|premium|extreme
		# exportPolicy: # The policy rules to export the filesystem
		# validate_certs: yes
		# feature_flags: # Enable or disable a new feature.
$0
endsnippet

snippet aws_netapp_cvs_pool "NetApp AWS Cloud Volumes Service Manage Pools." b
- name: $1
	aws_netapp_cvs_pool:
		state: ${2:present|absent}
		region: ${3:# The region to which the Pool is associated.}
		name: ${4:# pool name ( The human readable name of the Pool )}
		api_key: ${5:# The access key to authenticate with the AWSCVS Web Services Proxy or Embedded Web Services API.}
		secret_key: ${6:# The secret_key to authenticate with the AWSCVS Web Services Proxy or Embedded Web Services API.}
		api_url: ${7:# The url to the AWSCVS Web Services Proxy or Embedded Web Services API.}
		# serviceLevel: basic|standard|extreme
		# sizeInBytes: # Size of the Pool in bytes
		# vendorID: # A vendor ID for the Pool. E.g. an ID allocated by a vendor service for the Pool.
		# from_name: # rename the existing pool name ( The human readable name of the Pool )
		# validate_certs: yes
		# feature_flags: # Enable or disable a new feature.
$0
endsnippet

snippet aws_netapp_cvs_snapshots "NetApp AWS Cloud Volumes Service Manage Snapshots." b
- name: $1
	aws_netapp_cvs_snapshots:
		state: ${2:present|absent}
		region: ${3:# The region to which the snapshot belongs to.}
		name: ${4:# Name of the snapshot}
		api_key: ${5:# The access key to authenticate with the AWSCVS Web Services Proxy or Embedded Web Services API.}
		secret_key: ${6:# The secret_key to authenticate with the AWSCVS Web Services Proxy or Embedded Web Services API.}
		api_url: ${7:# The url to the AWSCVS Web Services Proxy or Embedded Web Services API.}
		# fileSystemId: # Name or Id of the filesystem.
		# from_name: # ID or Name of the snapshot to rename.
		# validate_certs: yes
		# feature_flags: # Enable or disable a new feature.
$0
endsnippet

snippet na_elementsw_cluster_config "Configure Element SW Cluster" b
- name: $1
	na_elementsw_cluster_config:
		hostname: ${2:# The hostname or IP address of the SolidFire cluster.}
		username: ${3:# Please ensure that the user has the adequate permissions. For more information, please read the official documentation U(https://mysupport.netapp.com/documentation/docweb/index.html?productID=62636&language=en-US).}
		password: ${4:# Password for the specified user.}
		# modify_cluster_full_threshold: # The capacity level at which the cluster generates an event
		# encryption_at_rest: present|absent
		# set_ntp_info: # configure NTP on cluster node
		# enable_virtual_volumes: yes
$0
endsnippet

snippet na_elementsw_cluster_snmp "Configure Element SW Cluster SNMP" b
- name: $1
	na_elementsw_cluster_snmp:
		hostname: ${2:# The hostname or IP address of the SolidFire cluster.}
		username: ${3:# Please ensure that the user has the adequate permissions. For more information, please read the official documentation U(https://mysupport.netapp.com/documentation/docweb/index.html?productID=62636&language=en-US).}
		password: ${4:# Password for the specified user.}
		# state: #present|absent
		# snmp_v3_enabled: # Which version of SNMP has to be enabled.
		# networks: # List of networks and what type of access they have to the SNMP servers running on the cluster nodes.
		# usm_users: # List of users and the type of access they have to the SNMP servers running on the cluster nodes.
$0
endsnippet

snippet na_elementsw_initiators "Manage Element SW initiators" b
- name: $1
	na_elementsw_initiators:
		hostname: ${2:# The hostname or IP address of the SolidFire cluster.}
		username: ${3:# Please ensure that the user has the adequate permissions. For more information, please read the official documentation U(https://mysupport.netapp.com/documentation/docweb/index.html?productID=62636&language=en-US).}
		password: ${4:# Password for the specified user.}
		# initiators: # A
		# state: #present|absent
$0
endsnippet

snippet na_ontap_efficiency_policy "NetApp ONTAP manage efficiency policies (sis policies)" b
- name: $1
	na_ontap_efficiency_policy:
		policy_name: ${2:# the name of the efficiency policy}
		vserver: ${3:# Name of the vserver to use.}
		hostname: ${4:# The hostname or IP address of the ONTAP instance.}
		# state: #present|absent
		# comment: # A brief description of the policy.
		# duration: # The duration in hours for which the scheduled efficiency operation should run. After this time expires, the efficiency operation will be stopped even if the operation is incomplete. If '-' is specified as the duration, the efficiency operation will run till it completes. Otherwise, the duration has to be an integer greater than 0. By default, the operation runs till it completes.
		# enabled: # If the value is true, the efficiency policy is active in this cluster. If the value is false this policy will not be activated by the schedulers and hence will be inactive.
		# policy_type: threshold|scheduled
		# qos_policy: background|best_effort
		# schedule: # Cron type job schedule name. When the associated policy is set on a volume, the efficiency operation will be triggered for the volume on this schedule.
		# changelog_threshold_percent: # Specifies the percentage at which the changelog will be processed for a threshold type of policy, tested once each hour.
		# username: # This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required.
		# password: # Password for the specified user.
		# cert_filepath: # path to SSL client cert file (.pem).
		# key_filepath: # path to SSL client key file.
		# https: no
		# validate_certs: yes
		# http_port: # Override the default port (80 or 443) with this port
		# ontapi: # The ontap api version to use
		# use_rest: auto
		# feature_flags: # Enable or disable a new feature.
$0
endsnippet

snippet na_ontap_fpolicy_policy "NetApp ONTAP - Create, delete or modify an FPolicy policy." b
- name: $1
	na_ontap_fpolicy_policy:
		vserver: ${2:# the name of the vserver to create the policy on}
		name: ${3:# Name of the policy.}
		events: ${4:# Events for file access monitoring.}
		hostname: ${5:# The hostname or IP address of the ONTAP instance.}
		# state: #present|absent
		# allow_privileged_access: # Specifies if privileged access should be given to FPolicy servers registered for the policy.
		# engine: # Name of the Engine. External engines must be created prior to running this task.
		# is_mandatory: # Specifies the action to take on a file access event in the case when all primary and secondary servers are down or no response is received from the
		# is_passthrough_read_enabled: # Specifies if passthrough-read should be allowed to FPolicy servers registered for the policy.
		# privileged_user_name: # User name for privileged access.
		# username: # This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required.
		# password: # Password for the specified user.
		# cert_filepath: # path to SSL client cert file (.pem).
		# key_filepath: # path to SSL client key file.
		# https: no
		# validate_certs: yes
		# http_port: # Override the default port (80 or 443) with this port
		# ontapi: # The ontap api version to use
		# use_rest: auto
		# feature_flags: # Enable or disable a new feature.
$0
endsnippet

snippet na_ontap_igroup_initiator "NetApp ONTAP igroup initiator configuration" b
- name: $1
	na_ontap_igroup_initiator:
		names: ${2:# List of initiators to manage.}
		initiator_group: ${3:# Name of the initiator group to which the initiator belongs.}
		vserver: ${4:# The name of the vserver to use.}
		hostname: ${5:# The hostname or IP address of the ONTAP instance.}
		# state: #present|absent
		# force_remove: no
		# username: # This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required.
		# password: # Password for the specified user.
		# cert_filepath: # path to SSL client cert file (.pem).
		# key_filepath: # path to SSL client key file.
		# https: no
		# validate_certs: yes
		# http_port: # Override the default port (80 or 443) with this port
		# ontapi: # The ontap api version to use
		# use_rest: auto
		# feature_flags: # Enable or disable a new feature.
$0
endsnippet

snippet na_ontap_ipspace "NetApp ONTAP Manage an ipspace" b
- name: $1
	na_ontap_ipspace:
		name: ${2:# The name of the ipspace to manage}
		hostname: ${3:# The hostname or IP address of the ONTAP instance.}
		# state: #present|absent
		# from_name: # Name of the existing ipspace to be renamed to name
		# username: # This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required.
		# password: # Password for the specified user.
		# cert_filepath: # path to SSL client cert file (.pem).
		# key_filepath: # path to SSL client key file.
		# https: no
		# validate_certs: yes
		# http_port: # Override the default port (80 or 443) with this port
		# ontapi: # The ontap api version to use
		# use_rest: auto
		# feature_flags: # Enable or disable a new feature.
$0
endsnippet

snippet na_ontap_log_forward "NetApp ONTAP Log Forward Configuration" b
- name: $1
	na_ontap_log_forward:
		destination: ${2:# Destination address that the log messages will be forwarded to. Can be a hostname or IP address.}
		port: ${3:# The destination port used to forward the message.}
		hostname: ${4:# The hostname or IP address of the ONTAP instance.}
		# state: #present|absent
		# facility: kern|user|local0|local1|local2|local3|local4|local5|local6|local7
		# force: # Skip the Connectivity Test
		# protocol: udp_unencrypted|tcp_unencrypted|tcp_encrypted
		# verify_server: # Verify Destination Server Identity
		# username: # This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required.
		# password: # Password for the specified user.
		# cert_filepath: # path to SSL client cert file (.pem).
		# key_filepath: # path to SSL client key file.
		# https: no
		# validate_certs: yes
		# http_port: # Override the default port (80 or 443) with this port
		# ontapi: # The ontap api version to use
		# use_rest: auto
		# feature_flags: # Enable or disable a new feature.
$0
endsnippet

snippet na_ontap_lun_copy "NetApp ONTAP copy LUNs" b
- name: $1
	na_ontap_lun_copy:
		destination_vserver: ${2:# the name of the Vserver that will host the new LUN.}
		destination_path: ${3:# Specifies the full path to the new LUN.}
		source_path: ${4:# Specifies the full path to the source LUN.}
		hostname: ${5:# The hostname or IP address of the ONTAP instance.}
		# state: #present
		# source_vserver: # Specifies the name of the vserver hosting the LUN to be copied.
		# username: # This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required.
		# password: # Password for the specified user.
		# cert_filepath: # path to SSL client cert file (.pem).
		# key_filepath: # path to SSL client key file.
		# https: no
		# validate_certs: yes
		# http_port: # Override the default port (80 or 443) with this port
		# ontapi: # The ontap api version to use
		# use_rest: auto
		# feature_flags: # Enable or disable a new feature.
$0
endsnippet

snippet na_ontap_metrocluster "NetApp ONTAP set up a MetroCluster" b
- name: $1
	na_ontap_metrocluster:
		dr_pairs: ${2:# d}
		partner_cluster_name: ${3:# The name of the partner Cluster}
		hostname: ${4:# The hostname or IP address of the ONTAP instance.}
		# state: #present
		# username: # This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required.
		# password: # Password for the specified user.
		# cert_filepath: # path to SSL client cert file (.pem).
		# key_filepath: # path to SSL client key file.
		# https: no
		# validate_certs: yes
		# http_port: # Override the default port (80 or 443) with this port
		# ontapi: # The ontap api version to use
		# use_rest: auto
		# feature_flags: # Enable or disable a new feature.
$0
endsnippet

snippet na_ontap_metrocluster_dr_group "NetApp ONTAP manage MetroCluster DR Group" b
- name: $1
	na_ontap_metrocluster_dr_group:
		dr_pairs: ${2:# d}
		partner_cluster_name: ${3:# The name of the partner cluster}
		hostname: ${4:# The hostname or IP address of the ONTAP instance.}
		# state: #present|absent
		# username: # This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required.
		# password: # Password for the specified user.
		# cert_filepath: # path to SSL client cert file (.pem).
		# key_filepath: # path to SSL client key file.
		# https: no
		# validate_certs: yes
		# http_port: # Override the default port (80 or 443) with this port
		# ontapi: # The ontap api version to use
		# use_rest: auto
		# feature_flags: # Enable or disable a new feature.
$0
endsnippet

snippet na_ontap_name_service_switch "NetApp ONTAP Manage name service switch" b
- name: $1
	na_ontap_name_service_switch:
		vserver: ${2:# Name of the vserver to use.}
		database_type: ${3:hosts|group|passwd|netgroup|namemap}
		hostname: ${4:# The hostname or IP address of the ONTAP instance.}
		# state: #present|absent
		# sources: # Type of sources.
		# username: # This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required.
		# password: # Password for the specified user.
		# cert_filepath: # path to SSL client cert file (.pem).
		# key_filepath: # path to SSL client key file.
		# https: no
		# validate_certs: yes
		# http_port: # Override the default port (80 or 443) with this port
		# ontapi: # The ontap api version to use
		# use_rest: auto
		# feature_flags: # Enable or disable a new feature.
$0
endsnippet

snippet na_ontap_ndmp "NetApp ONTAP NDMP services configuration" b
- name: $1
	na_ontap_ndmp:
		vserver: ${2:# Name of the vserver.}
		hostname: ${3:# The hostname or IP address of the ONTAP instance.}
		# abort_on_disk_error: # Enable abort on disk error.
		# authtype: # Authentication type.
		# backup_log_enable: # Enable backup log.
		# data_port_range: # Data port range. Modification not supported for data Vservers.
		# debug_enable: # Enable debug.
		# debug_filter: # Debug filter.
		# dump_detailed_stats: # Enable logging of VM stats for dump.
		# dump_logical_find: # Enable logical find for dump.
		# enable: # Enable NDMP on vserver.
		# fh_dir_retry_interval: # FH throttle value for dir.
		# fh_node_retry_interval: # FH throttle value for node.
		# ignore_ctime_enabled: # Ignore ctime.
		# is_secure_control_connection_enabled: # Is secure control connection enabled.
		# offset_map_enable: # Enable offset map.
		# per_qtree_exclude_enable: # Enable per qtree exclusion.
		# preferred_interface_role: # Preferred interface role.
		# restore_vm_cache_size: # Restore VM file cache size. Value range [4-1024]
		# secondary_debug_filter: # Secondary debug filter.
		# tcpnodelay: # Enable TCP nodelay.
		# tcpwinsize: # TCP window size.
		# username: # This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required.
		# password: # Password for the specified user.
		# cert_filepath: # path to SSL client cert file (.pem).
		# key_filepath: # path to SSL client key file.
		# https: no
		# validate_certs: yes
		# http_port: # Override the default port (80 or 443) with this port
		# ontapi: # The ontap api version to use
		# use_rest: auto
		# feature_flags: # Enable or disable a new feature.
$0
endsnippet

snippet na_ontap_portset "NetApp ONTAP Create/Delete portset" b
- name: $1
	na_ontap_portset:
		vserver: ${2:# Name of the SVM.}
		name: ${3:# Name of the port set to create.}
		hostname: ${4:# The hostname or IP address of the ONTAP instance.}
		# state: present
		# type: fcp|iscsi|mixed
		# force: no
		# ports: # Specify the ports associated with this portset. Should be comma separated.
		# username: # This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required.
		# password: # Password for the specified user.
		# cert_filepath: # path to SSL client cert file (.pem).
		# key_filepath: # path to SSL client key file.
		# https: no
		# validate_certs: yes
		# http_port: # Override the default port (80 or 443) with this port
		# ontapi: # The ontap api version to use
		# use_rest: auto
		# feature_flags: # Enable or disable a new feature.
$0
endsnippet

snippet na_ontap_security_key_manager "NetApp ONTAP security key manager." b
- name: $1
	na_ontap_security_key_manager:
		ip_address: ${2:# The IP address of the key management server.}
		hostname: ${3:# The hostname or IP address of the ONTAP instance.}
		# state: #present|absent
		# tcp_port: 5696
		# node: # The node which key management server runs on.
		# username: # This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required.
		# password: # Password for the specified user.
		# cert_filepath: # path to SSL client cert file (.pem).
		# key_filepath: # path to SSL client key file.
		# https: no
		# validate_certs: yes
		# http_port: # Override the default port (80 or 443) with this port
		# ontapi: # The ontap api version to use
		# use_rest: auto
		# feature_flags: # Enable or disable a new feature.
$0
endsnippet

snippet na_ontap_snapshot_policy "NetApp ONTAP manage Snapshot Policy" b
- name: $1
	na_ontap_snapshot_policy:
		name: ${2:# N}
		hostname: ${3:# The hostname or IP address of the ONTAP instance.}
		# state: #present|absent
		# enabled: # Status of the snapshot policy indicating whether the policy will be enabled or disabled.
		# comment: # A
		# count: # R
		# schedule: # Schedule to be added inside the policy.
		# prefix: # Snapshot name prefix for the schedule.
		# snapmirror_label: # SnapMirror label assigned to each schedule inside the policy. Use an empty string ('') for no label.
		# vserver: # The name of the vserver to use. In a multi-tenanted environment, assigning a Snapshot Policy to a vserver will restrict its use to that vserver.
		# username: # This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required.
		# password: # Password for the specified user.
		# cert_filepath: # path to SSL client cert file (.pem).
		# key_filepath: # path to SSL client key file.
		# https: no
		# validate_certs: yes
		# http_port: # Override the default port (80 or 443) with this port
		# ontapi: # The ontap api version to use
		# use_rest: auto
		# feature_flags: # Enable or disable a new feature.
$0
endsnippet

snippet na_ontap_svm_options "NetApp ONTAP Modify SVM Options" b
- name: $1
	na_ontap_svm_options:
		vserver: ${2:# The name of the vserver to which this option belongs to.}
		hostname: ${3:# The hostname or IP address of the ONTAP instance.}
		# name: # Name of the option.
		# value: # Value of the option.
		# username: # This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required.
		# password: # Password for the specified user.
		# cert_filepath: # path to SSL client cert file (.pem).
		# key_filepath: # path to SSL client key file.
		# https: no
		# validate_certs: yes
		# http_port: # Override the default port (80 or 443) with this port
		# ontapi: # The ontap api version to use
		# use_rest: auto
		# feature_flags: # Enable or disable a new feature.
$0
endsnippet

snippet na_ontap_unix_group "NetApp ONTAP UNIX Group" b
- name: $1
	na_ontap_unix_group:
		name: ${2:# Specifies UNIX group's name, unique for each group.}
		vserver: ${3:# Specifies the Vserver for the UNIX group.}
		hostname: ${4:# The hostname or IP address of the ONTAP instance.}
		# state: #present|absent
		# id: # Specifies an identification number for the UNIX group.
		# skip_name_validation: # Specifies if group name validation is skipped.
		# users: # Specifies the users associated with this group. Should be comma separated.
		# username: # This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required.
		# password: # Password for the specified user.
		# cert_filepath: # path to SSL client cert file (.pem).
		# key_filepath: # path to SSL client key file.
		# https: no
		# validate_certs: yes
		# http_port: # Override the default port (80 or 443) with this port
		# ontapi: # The ontap api version to use
		# use_rest: auto
		# feature_flags: # Enable or disable a new feature.
$0
endsnippet

snippet na_ontap_unix_user "NetApp ONTAP UNIX users" b
- name: $1
	na_ontap_unix_user:
		name: ${2:# Specifies user's UNIX account name.}
		vserver: ${3:# Specifies the Vserver for the UNIX user.}
		hostname: ${4:# The hostname or IP address of the ONTAP instance.}
		# state: #present|absent
		# group_id: # Specifies the primary group identification number for the UNIX user
		# id: # Specifies an identification number for the UNIX user.
		# full_name: # Specifies the full name of the UNIX user
		# username: # This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required.
		# password: # Password for the specified user.
		# cert_filepath: # path to SSL client cert file (.pem).
		# key_filepath: # path to SSL client key file.
		# https: no
		# validate_certs: yes
		# http_port: # Override the default port (80 or 443) with this port
		# ontapi: # The ontap api version to use
		# use_rest: auto
		# feature_flags: # Enable or disable a new feature.
$0
endsnippet

snippet na_ontap_volume_autosize "NetApp ONTAP manage volume autosize" b
- name: $1
	na_ontap_volume_autosize:
		volume: ${2:# The name of the flexible volume for which we want to set autosize.}
		vserver: ${3:# Name of the vserver to use.}
		hostname: ${4:# The hostname or IP address of the ONTAP instance.}
		# mode: grow|grow_shrink|off
		# grow_threshold_percent: # Specifies the percentage of the flexible volume's capacity at which autogrow is initiated.
		# increment_size: # Specify the flexible volume's increment size using the following format < number > [k|m|g|t]
		# maximum_size: # Specify the flexible volume's maximum allowed size using the following format < number > [k|m|g|t]
		# minimum_size: # Specify the flexible volume's minimum allowed size using the following format < number > [k|m|g|t] The amount is the absolute size to set.
		# reset: # Sets the values of maximum_size, increment_size, minimum_size, grow_threshold_percent, shrink_threshold_percent and mode to their defaults
		# shrink_threshold_percent: # Specifies the percentage of the flexible volume's capacity at which autoshrink is initiated.
		# username: # This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required.
		# password: # Password for the specified user.
		# cert_filepath: # path to SSL client cert file (.pem).
		# key_filepath: # path to SSL client key file.
		# https: no
		# validate_certs: yes
		# http_port: # Override the default port (80 or 443) with this port
		# ontapi: # The ontap api version to use
		# use_rest: auto
		# feature_flags: # Enable or disable a new feature.
$0
endsnippet

snippet na_ontap_vscan_scanner_pool "NetApp ONTAP Vscan Scanner Pools Configuration." b
- name: $1
	na_ontap_vscan_scanner_pool:
		vserver: ${2:# the name of the data vserver to use.}
		scanner_pool: ${3:# the name of the virus scanner pool}
		hostname: ${4:# The hostname or IP address of the ONTAP instance.}
		# state: #present|absent
		# hostnames: # List of hostnames of Vscan servers which are allowed to connect to Data ONTAP
		# privileged_users: # List of privileged usernames. Username must be in the form "domain-name\user-name"
		# scanner_policy: primary|secondary|idle
		# username: # This can be a Cluster-scoped or SVM-scoped account, depending on whether a Cluster-level or SVM-level API is required.
		# password: # Password for the specified user.
		# cert_filepath: # path to SSL client cert file (.pem).
		# key_filepath: # path to SSL client key file.
		# https: no
		# validate_certs: yes
		# http_port: # Override the default port (80 or 443) with this port
		# ontapi: # The ontap api version to use
		# use_rest: auto
		# feature_flags: # Enable or disable a new feature.
$0
endsnippet

snippet na_sg_grid_account "NetApp StorageGRID manage accounts." b
- name: $1
	na_sg_grid_account:
		auth_token: ${2:# The authorization token for the API request}
		api_url: ${3:# The url to the StorageGRID Admin Node REST API.}
		# state: #present|absent
		# name: # Name of the tenant.
		# account_id: # Account Id of the tenant.
		# protocol: s3|swift
		# management: yes
		# use_own_identity_source: # Whether the tenant account should configure its own identity source.
		# allow_platform_services: # Allows tenant to use platform services features such as CloudMirror.
		# root_access_group: # Existing federated group to have initial Root Access permissions for the tenant.
		# quota_size: 0
		# quota_size_unit: bytes|b|kb|mb|#gb|tb|pb|eb|zb|yb
		# password: # Root password for tenant account.
		# update_password: #on_create|always
		# validate_certs: yes
$0
endsnippet

snippet na_sg_grid_dns "NetApp StorageGRID manage external DNS servers for the grid." b
- name: $1
	na_sg_grid_dns:
		dns_servers: ${2:# List of comma separated DNS Addresses to be updated or delete.}
		auth_token: ${3:# The authorization token for the API request}
		api_url: ${4:# The url to the StorageGRID Admin Node REST API.}
		# state: #present
		# validate_certs: yes
$0
endsnippet

snippet na_sg_grid_group "NetApp StorageGRID manage groups." b
- name: $1
	na_sg_grid_group:
		unique_name: ${2:# Unique Name for the group. Must begin with C(group/) or C(federated-group/)}
		auth_token: ${3:# The authorization token for the API request}
		api_url: ${4:# The url to the StorageGRID Admin Node REST API.}
		# state: #present|absent
		# display_name: # Name of the group.
		# management_policy: # Management access controls granted to the group within the tenancy.
		# validate_certs: yes
$0
endsnippet

snippet na_sg_grid_info "NetApp StorageGRID Grid information gatherer." b
- name: $1
	na_sg_grid_info:
		auth_token: ${2:# The authorization token for the API request}
		api_url: ${3:# The url to the StorageGRID Admin Node REST API.}
		# gather_subset: all
		# parameters: # Allows for any rest option to be passed in.
		# validate_certs: yes
$0
endsnippet

snippet na_sg_grid_ntp "NetApp StorageGRID manage external NTP servers for the grid." b
- name: $1
	na_sg_grid_ntp:
		ntp_servers: ${2:# List of comma separated NTP server address.}
		passphrase: ${3:# passphrase for GRID.}
		auth_token: ${4:# The authorization token for the API request}
		api_url: ${5:# The url to the StorageGRID Admin Node REST API.}
		# state: #present
		# validate_certs: yes
$0
endsnippet

snippet na_sg_grid_regions "NetApp StorageGRID manage Regions for the grid." b
- name: $1
	na_sg_grid_regions:
		regions: ${2:# List of regions}
		auth_token: ${3:# The authorization token for the API request}
		api_url: ${4:# The url to the StorageGRID Admin Node REST API.}
		# state: #present
		# validate_certs: yes
$0
endsnippet

snippet na_sg_grid_user "NetApp StorageGRID manage users." b
- name: $1
	na_sg_grid_user:
		unique_name: ${2:# Unique Name for the user. Must begin with C(user/) or C(federated-user/)}
		auth_token: ${3:# The authorization token for the API request}
		api_url: ${4:# The url to the StorageGRID Admin Node REST API.}
		# state: #present|absent
		# full_name: # Full Name of the user.
		# member_of: # List of C(unique_groups) that the user is a member of.
		# password: # Set a password for a local user. Does not apply to federated users.
		# update_password: #on_create|always
		# disable: # Disable the user from signing in. Does not apply to federated users.
		# validate_certs: yes
$0
endsnippet

snippet na_sg_org_container "Manage buckets on StorageGRID." b
- name: $1
	na_sg_org_container:
		name: ${2:# Name of the bucket.}
		auth_token: ${3:# The authorization token for the API request}
		api_url: ${4:# The url to the StorageGRID Admin Node REST API.}
		# state: #present|absent
		# region: # Set a region for the bucket.
		# compliance: # Configure compliance settings for an S3 bucket.
		# s3_object_lock_enabled: # Enable S3 Object Lock on the bucket.
		# validate_certs: yes
$0
endsnippet

snippet na_sg_org_group "NetApp StorageGRID manage groups within a tenancy." b
- name: $1
	na_sg_org_group:
		unique_name: ${2:# Unique Name for the group. Must begin with C(group/) or C(federated-group/).}
		auth_token: ${3:# The authorization token for the API request}
		api_url: ${4:# The url to the StorageGRID Admin Node REST API.}
		# state: #present|absent
		# display_name: # Name of the group.
		# management_policy: # Management access controls granted to the group within the tenancy.
		# s3_policy: 
		# validate_certs: yes
$0
endsnippet

snippet na_sg_org_info "NetApp StorageGRID Org information gatherer." b
- name: $1
	na_sg_org_info:
		auth_token: ${2:# The authorization token for the API request}
		api_url: ${3:# The url to the StorageGRID Admin Node REST API.}
		# gather_subset: all
		# parameters: # Allows for any rest option to be passed in.
		# validate_certs: yes
$0
endsnippet

snippet na_sg_org_user "NetApp StorageGRID manage users within a tenancy." b
- name: $1
	na_sg_org_user:
		unique_name: ${2:# Unique Name for the user. Must begin with C(user/) or C(federated-user/).}
		auth_token: ${3:# The authorization token for the API request}
		api_url: ${4:# The url to the StorageGRID Admin Node REST API.}
		# state: #present|absent
		# full_name: # Full Name of the user.
		# member_of: # List of unique_groups that the user is a member of.
		# password: # Set a password for a local user. Does not apply to federated users.
		# update_password: #on_create|always
		# disable: # Disable the user from signing in. Does not apply to federated users.
		# validate_certs: yes
$0
endsnippet

snippet na_sg_org_user_s3_key "Creates NetApp StorageGRID User S3 keys." b
- name: $1
	na_sg_org_user_s3_key:
		unique_user_name: ${2:# Unique user name owning the S3 Key.}
		auth_token: ${3:# The authorization token for the API request}
		api_url: ${4:# The url to the StorageGRID Admin Node REST API.}
		# state: #present|absent
		# expires: # Date-Time string for the key to expire.
		# access_key: # Access Key or S3 credential pair identifier.
		# validate_certs: yes
$0
endsnippet

snippet netapp_e_alerts "NetApp E-Series manage email notification settings" b
- name: $1
	netapp_e_alerts:
		api_username: ${2:# The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_password: ${3:# The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_url: ${4:# The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2}
		# state: #enabled|disabled
		# server: # A fully qualified domain name, IPv4 address, or IPv6 address of a mail server.
		# sender: # This is the sender that the recipient will see. It doesn't necessarily need to be a valid email account.
		# contact: # Allows the owner to specify some free-form contact information to be included in the emails.
		# recipients: # The email addresses that will receive the email notifications.
		# test: no
		# log_path: # Path to a file on the Ansible control node to be used for debug logging
		# validate_certs: yes
		# ssid: 1
$0
endsnippet

snippet netapp_e_amg "NetApp E-Series create, remove, and update asynchronous mirror groups" b
- name: $1
	netapp_e_amg:
		name: ${2:# The name of the async array you wish to target, or create.}
		secondaryArrayId: ${3:# The ID of the secondary array to be used in mirroring process}
		state: ${4:absent|present}
		api_username: ${5:# The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_password: ${6:# The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_url: ${7:# The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2}
		# new_name: # New async array name
		# syncIntervalMinutes: 10
		# manualSync: no
		# recoveryWarnThresholdMinutes: 20
		# repoUtilizationWarnThreshold: 80
		# interfaceType: iscsi|fibre
		# syncWarnThresholdMinutes: 10
		# validate_certs: yes
		# ssid: 1
$0
endsnippet

snippet netapp_e_amg_role "NetApp E-Series update the role of a storage array within an Asynchronous Mirror Group (AMG)." b
- name: $1
	netapp_e_amg_role:
		api_username: ${2:# The username to authenticate with the SANtricity WebServices Proxy or embedded REST API.}
		api_password: ${3:# The password to authenticate with the SANtricity WebServices Proxy or embedded REST API.}
		api_url: ${4:# The url to the SANtricity WebServices Proxy or embedded REST API.}
		ssid: ${5:# The ID of the primary storage array for the async mirror action}
		name: ${6:# Name of the role}
		role: ${7:primary|secondary}
		# validate_certs: yes
		# noSync: no
		# force: no
$0
endsnippet

snippet netapp_e_amg_sync "NetApp E-Series conduct synchronization actions on asynchronous mirror groups." b
- name: $1
	netapp_e_amg_sync:
		api_username: ${2:# The username to authenticate with the SANtricity WebServices Proxy or embedded REST API.}
		api_password: ${3:# The password to authenticate with the SANtricity WebServices Proxy or embedded REST API.}
		api_url: ${4:# The url to the SANtricity WebServices Proxy or embedded REST API.}
		name: ${5:# The name of the async mirror group you wish to target}
		state: ${6:running|suspended}
		# validate_certs: yes
		# ssid: # The ID of the storage array containing the AMG you wish to target
		# delete_recovery_point: no
$0
endsnippet

snippet netapp_e_asup "NetApp E-Series manage auto-support settings" b
- name: $1
	netapp_e_asup:
		api_username: ${2:# The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_password: ${3:# The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_url: ${4:# The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2}
		# state: #enabled|disabled
		# active: yes
		# start: 0
		# end: 24
		# days: monday|tuesday|wednesday|thursday|friday|saturday|sunday
		# verbose: no
		# log_path: # A local path to a file to be used for debug logging
		# validate_certs: yes
		# ssid: 1
$0
endsnippet

snippet netapp_e_auditlog "NetApp E-Series manage audit-log configuration" b
- name: $1
	netapp_e_auditlog:
		api_username: ${2:# The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_password: ${3:# The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_url: ${4:# The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2}
		# max_records: 50000
		# log_level: all|#writeOnly
		# full_policy: #overWrite|preventSystemAccess
		# threshold: 90
		# force: no
		# log_path: # A
		# validate_certs: yes
		# ssid: 1
$0
endsnippet

snippet netapp_e_auth "NetApp E-Series set or update the password for a storage array." b
- name: $1
	netapp_e_auth:
		new_password: ${2:# The password you would like to set. Cannot be more than 30 characters.}
		# validate_certs: yes
		# name: # The name of the storage array. Note that if more than one storage array with this name is detected, the task will fail and you'll have to use the ID instead.
		# ssid: # the identifier of the storage array in the Web Services Proxy.
		# set_admin: no
		# current_password: # The current admin password. This is not required if the password hasn't been set before.
		# api_url: # The full API url.
		# api_username: # The username used to authenticate against the API
		# api_password: # The password used to authenticate against the API
$0
endsnippet

snippet netapp_e_drive_firmware "NetApp E-Series manage drive firmware" b
- name: $1
	netapp_e_drive_firmware:
		firmware: ${2:# list of drive firmware file paths.}
		api_username: ${3:# The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_password: ${4:# The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_url: ${5:# The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2}
		# wait_for_completion: no
		# ignore_inaccessible_drives: no
		# upgrade_drives_online: yes
		# validate_certs: yes
		# ssid: 1
$0
endsnippet

snippet netapp_e_facts "NetApp E-Series retrieve facts about NetApp E-Series storage arrays" b
- name: $1
	netapp_e_facts:
		api_username: ${2:# The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_password: ${3:# The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_url: ${4:# The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2}
		# validate_certs: yes
		# ssid: 1
$0
endsnippet

snippet netapp_e_firmware "NetApp E-Series manage firmware." b
- name: $1
	netapp_e_firmware:
		nvsram: ${2:# Path to the NVSRAM file.}
		firmware: ${3:# Path to the firmware file.}
		api_username: ${4:# The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_password: ${5:# The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_url: ${6:# The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2}
		# wait_for_completion: no
		# ignore_health_check: no
		# validate_certs: yes
		# ssid: 1
$0
endsnippet

snippet netapp_e_flashcache "NetApp E-Series manage SSD caches" b
- name: $1
	netapp_e_flashcache:
		api_username: ${2:# The username to authenticate with the SANtricity WebServices Proxy or embedded REST API.}
		api_password: ${3:# The password to authenticate with the SANtricity WebServices Proxy or embedded REST API.}
		api_url: ${4:# The url to the SANtricity WebServices Proxy or embedded REST API.}
		ssid: ${5:# The ID of the array to manage (as configured on the web services proxy).}
		state: ${6:#present|absent}
		name: ${7:# The name of the SSD cache to manage}
		# validate_certs: yes
		# io_type: #filesystem|database|media
		# disk_count: # The minimum number of disks to use for building the cache. The cache will be expanded if this number exceeds the number of disks already in place
		# disk_refs: # List of disk references
		# size_unit: bytes|b|kb|mb|#gb|tb|pb|eb|zb|yb
		# cache_size_min: # The minimum size (in size_units) of the ssd cache. The cache will be expanded if this exceeds the current size of the cache.
		# criteria_disk_phy_type: sas|sas4k|fibre|fibre520b|scsi|sata|pata
		# log_mode: # Log mode
		# log_path: # Log path
$0
endsnippet

snippet netapp_e_global "NetApp E-Series manage global settings configuration" b
- name: $1
	netapp_e_global:
		api_username: ${2:# The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_password: ${3:# The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_url: ${4:# The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2}
		# name: # Set the name of the E-Series storage-system
		# log_path: # A local path to a file to be used for debug logging
		# validate_certs: yes
		# ssid: 1
$0
endsnippet

snippet netapp_e_host "NetApp E-Series manage eseries hosts" b
- name: $1
	netapp_e_host:
		name: ${2:# If the host doesn't yet exist, the label/name to assign at creation time.}
		api_username: ${3:# The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_password: ${4:# The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_url: ${5:# The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2}
		# state: absent|#present
		# host_type: # This is the type of host to be mapped
		# ports: # A list of host ports you wish to associate with the host.
		# force_port: # Allow ports that are already assigned to be re-assigned to your current host
		# group: # The unique identifier of the host-group you want the host to be a member of; this is used for clustering.
		# log_path: # A local path to a file to be used for debug logging
		# validate_certs: yes
		# ssid: 1
$0
endsnippet

snippet netapp_e_hostgroup "NetApp E-Series manage array host groups" b
- name: $1
	netapp_e_hostgroup:
		state: ${2:present|absent}
		api_username: ${3:# The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_password: ${4:# The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_url: ${5:# The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2}
		# name: # Name of the host group to manage
		# new_name: # Specify this when you need to update the name of a host group
		# id: # Host reference identifier for the host group to manage.
		# hosts: # List of host names/labels to add to the group
		# validate_certs: yes
		# ssid: 1
$0
endsnippet

snippet netapp_e_iscsi_interface "NetApp E-Series manage iSCSI interface configuration" b
- name: $1
	netapp_e_iscsi_interface:
		controller: ${2:A|B}
		name: ${3:# The channel of the port to modify the configuration of.}
		api_username: ${4:# The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_password: ${5:# The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_url: ${6:# The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2}
		# state: #enabled|disabled
		# address: # The IPv4 address to assign to the interface.
		# subnet_mask: # The subnet mask to utilize for the interface.
		# gateway: # The IPv4 gateway address to utilize for the interface.
		# config_method: #dhcp|static
		# mtu: 1500
		# log_path: # A local path to a file to be used for debug logging
		# validate_certs: yes
		# ssid: 1
$0
endsnippet

snippet netapp_e_iscsi_target "NetApp E-Series manage iSCSI target configuration" b
- name: $1
	netapp_e_iscsi_target:
		api_username: ${2:# The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_password: ${3:# The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_url: ${4:# The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2}
		# name: # The name/alias to assign to the iSCSI target.
		# ping: yes
		# chap_secret: # Enable Challenge-Handshake Authentication Protocol (CHAP), utilizing this value as the password.
		# unnamed_discovery: yes
		# log_path: # A local path (on the Ansible controller), to a file to be used for debug logging.
		# validate_certs: yes
		# ssid: 1
$0
endsnippet

snippet netapp_e_ldap "NetApp E-Series manage LDAP integration to use for authentication" b
- name: $1
	netapp_e_ldap:
		username: ${2:# This is the user account that will be used for querying the LDAP server.}
		password: ${3:# This is the password for the bind user account.}
		server: ${4:# This is the LDAP server url.}
		search_base: ${5:# The search base is used to find group memberships of the user.}
		role_mappings: ${6:# This is where you specify which groups should have access to what permissions for the storage-system.}
		api_username: ${7:# The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_password: ${8:# The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_url: ${9:# The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2}
		# state: #present|absent
		# identifier: # This is a unique identifier for the configuration (for cases where there are multiple domains configured).
		# attributes: memberOf
		# name: # The domain name[s] that will be utilized when authenticating to identify which domain to utilize.
		# user_attribute: sAMAccountName
		# log_path: # A local path to a file to be used for debug logging
		# validate_certs: yes
		# ssid: 1
$0
endsnippet

snippet netapp_e_lun_mapping "NetApp E-Series create, delete, or modify lun mappings" b
- name: $1
	netapp_e_lun_mapping:
		state: ${2:present|absent}
		volume_name: ${3:# The name of the volume you wish to include in the mapping.}
		api_username: ${4:# The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_password: ${5:# The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_url: ${6:# The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2}
		# target: # The name of host or hostgroup you wish to assign to the mapping
		# lun: # The LUN value you wish to give the mapping.
		# target_type: host|group
		# validate_certs: yes
		# ssid: 1
$0
endsnippet

snippet netapp_e_mgmt_interface "NetApp E-Series management interface configuration" b
- name: $1
	netapp_e_mgmt_interface:
		controller: ${2:A|B}
		api_username: ${3:# The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_password: ${4:# The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_url: ${5:# The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2}
		# state: enable|disable
		# name: # The port to modify the configuration for.
		# channel: # The port to modify the configuration for.
		# address: # The IPv4 address to assign to the interface.
		# subnet_mask: # The subnet mask to utilize for the interface.
		# gateway: # The IPv4 gateway address to utilize for the interface.
		# config_method: dhcp|static
		# dns_config_method: dhcp|static
		# dns_address: # Primary IPv4 DNS server address
		# dns_address_backup: # Backup IPv4 DNS server address
		# ntp_config_method: disable|dhcp|static
		# ntp_address: # Primary IPv4 NTP server address
		# ntp_address_backup: # Backup IPv4 NTP server address
		# ssh: # Enable ssh access to the controller for debug purposes.
		# log_path: # A local path to a file to be used for debug logging
		# validate_certs: yes
		# ssid: 1
$0
endsnippet

snippet netapp_e_snapshot_group "NetApp E-Series manage snapshot groups" b
- name: $1
	netapp_e_snapshot_group:
		api_username: ${2:# The username to authenticate with the SANtricity WebServices Proxy or embedded REST API.}
		api_password: ${3:# The password to authenticate with the SANtricity WebServices Proxy or embedded REST API.}
		api_url: ${4:# The url to the SANtricity WebServices Proxy or embedded REST API.}
		state: ${5:present|absent}
		name: ${6:# The name to give the snapshot group}
		base_volume_name: ${7:# The name of the base volume or thin volume to use as the base for the new snapshot group.}
		storage_pool_name: ${8:# The name of the storage pool on which to allocate the repository volume.}
		# ssid: # Storage system identifier
		# validate_certs: yes
		# repo_pct: 20
		# warning_threshold: 80
		# delete_limit: 30
		# full_policy: unknown|failbasewrites|#purgepit
		# rollback_priority: highest|high|#medium|low|lowest
$0
endsnippet

snippet netapp_e_snapshot_images "NetApp E-Series create and delete snapshot images" b
- name: $1
	netapp_e_snapshot_images:
		api_username: ${2:# The username to authenticate with the SANtricity WebServices Proxy or embedded REST API.}
		api_password: ${3:# The password to authenticate with the SANtricity WebServices Proxy or embedded REST API.}
		api_url: ${4:# The url to the SANtricity WebServices Proxy or embedded REST API.}
		snapshot_group: ${5:# The name of the snapshot group in which you want to create a snapshot image.}
		state: ${6:create|remove}
		# ssid: # Storage system identifier
		# validate_certs: yes
$0
endsnippet

snippet netapp_e_snapshot_volume "NetApp E-Series manage snapshot volumes." b
- name: $1
	netapp_e_snapshot_volume:
		api_username: ${2:# The username to authenticate with the SANtricity WebServices Proxy or embedded REST API.}
		api_password: ${3:# The password to authenticate with the SANtricity WebServices Proxy or embedded REST API.}
		api_url: ${4:# The url to the SANtricity WebServices Proxy or embedded REST API.}
		ssid: ${5:# storage array ID}
		snapshot_image_id: ${6:# The identifier of the snapshot image used to create the new snapshot volume.}
		name: ${7:# The name you wish to give the snapshot volume}
		view_mode: ${8:#readOnly|readWrite|modeUnknown|__Undefined}
		storage_pool_name: ${9:# Name of the storage pool on which to allocate the repository volume.}
		state: ${10:absent|present}
		# validate_certs: yes
		# full_threshold: 85
		# repo_percentage: 20
$0
endsnippet

snippet netapp_e_storage_system "NetApp E-Series Web Services Proxy manage storage arrays" b
- name: $1
	netapp_e_storage_system:
		api_username: ${2:# The username to authenticate with the SANtricity WebServices Proxy or embedded REST API.}
		api_password: ${3:# The password to authenticate with the SANtricity WebServices Proxy or embedded REST API.}
		api_url: ${4:# The url to the SANtricity WebServices Proxy or embedded REST API.}
		ssid: ${5:# The ID of the array to manage. This value must be unique for each array.}
		state: ${6:present|absent}
		controller_addresses: ${7:# The list addresses for the out-of-band management adapter or the agent host. Mutually exclusive of array_wwn parameter.}
		# validate_certs: yes
		# array_wwn: # The WWN of the array to manage. Only necessary if in-band managing multiple arrays on the same agent host.  Mutually exclusive of controller_addresses parameter.
		# array_password: # The management password of the array to manage, if set.
		# enable_trace: no
		# meta_tags: # Optional meta tags to associate to this storage system
		# array_status_timeout_sec: 60
$0
endsnippet

snippet netapp_e_storagepool "NetApp E-Series manage volume groups and disk pools" b
- name: $1
	netapp_e_storagepool:
		state: ${2:present|absent}
		name: ${3:# The name of the storage pool to manage}
		api_username: ${4:# The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_password: ${5:# The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_url: ${6:# The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2}
		# criteria_drive_count: # The number of disks to use for building the storage pool.
		# criteria_min_usable_capacity: # The minimum size of the storage pool (in size_unit).
		# criteria_drive_type: hdd|ssd
		# criteria_size_unit: bytes|b|kb|mb|#gb|tb|pb|eb|zb|yb
		# criteria_drive_min_size: # The minimum individual drive size (in size_unit) to consider when choosing drives for the storage pool.
		# criteria_drive_interface_type: sas|sas4k|fibre|fibre520b|scsi|sata|pata
		# criteria_drive_require_da: no
		# criteria_drive_require_fde: no
		# raid_level: raidAll|raid0|raid1|raid3|raid5|raid6|#raidDiskPool
		# secure_pool: # Enables security at rest feature on the storage pool.
		# reserve_drive_count: # Set the number of drives reserved by the storage pool for reconstruction operations.
		# remove_volumes: yes
		# erase_secured_drives: yes
		# validate_certs: yes
		# ssid: 1
$0
endsnippet

snippet netapp_e_syslog "NetApp E-Series manage syslog settings" b
- name: $1
	netapp_e_syslog:
		api_username: ${2:# The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_password: ${3:# The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_url: ${4:# The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2}
		# state: #present|absent
		# address: # The syslog server's IPv4 address or a fully qualified hostname.
		# port: 514
		# protocol: #udp|tcp|tls
		# components: ['auditLog']
		# test: no
		# log_path: # This argument specifies a local path for logging purposes.
		# validate_certs: yes
		# ssid: 1
$0
endsnippet

snippet netapp_e_volume "NetApp E-Series manage storage volumes (standard and thin)" b
- name: $1
	netapp_e_volume:
		state: ${2:present|absent}
		name: ${3:# The name of the volume to manage.}
		size: ${4:# Required only when I(state=='present').}
		api_username: ${5:# The username to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_password: ${6:# The password to authenticate with the SANtricity Web Services Proxy or Embedded Web Services API.}
		api_url: ${7:# The url to the SANtricity Web Services Proxy or Embedded Web Services API. Example https://prod-1.wahoo.acme.com/devmgr/v2}
		# storage_pool_name: # Required only when requested I(state=='present').
		# size_unit: bytes|b|kb|mb|#gb|tb|pb|eb|zb|yb
		# segment_size_kb: 128
		# thin_provision: no
		# thin_volume_repo_size: # This value (in size_unit) sets the allocated space for the thin provisioned repository.
		# thin_volume_max_repo_size: # This is the maximum amount the thin volume repository will be allowed to grow.
		# thin_volume_expansion_policy: #automatic|manual
		# thin_volume_growth_alert_threshold: 95
		# owning_controller: A|B
		# ssd_cache_enabled: no
		# data_assurance_enabled: no
		# read_cache_enable: yes
		# read_ahead_enable: yes
		# write_cache_enable: yes
		# cache_without_batteries: no
		# workload_name: # Label for the workload defined by the metadata.
		# metadata: # Dictionary containing meta data for the use, user, location, etc of the volume (dictionary is arbitrarily defined for whatever the user deems useful)
		# wait_for_initialization: no
		# initialization_timeout: # Duration in seconds before the wait_for_initialization operation will terminate.
		# validate_certs: yes
		# ssid: 1
$0
endsnippet

snippet netapp_e_volume_copy "NetApp E-Series create volume copy pairs" b
- name: $1
	netapp_e_volume_copy:
		api_username: ${2:# The username to authenticate with the SANtricity WebServices Proxy or embedded REST API.}
		api_password: ${3:# The password to authenticate with the SANtricity WebServices Proxy or embedded REST API.}
		api_url: ${4:# The url to the SANtricity WebServices Proxy or embedded REST API, for example C(https://prod-1.wahoo.acme.com/devmgr/v2).}
		state: ${5:present|absent}
		# ssid: 1
		# validate_certs: yes
		# source_volume_id: # The id of the volume copy source.
		# destination_volume_id: # The id of the volume copy destination.
		# volume_copy_pair_id: # The id of a given volume copy pair
		# create_copy_pair_if_does_not_exist: yes
		# start_stop_copy: start|stop
		# search_volume_id: # Searches for all valid potential target and source volumes that could be used in a copy_pair
		# copy_priority: 0
		# onlineCopy: no
		# targetWriteProtected: yes
$0
endsnippet

snippet purefa_ad "Manage FlashArray Active Directory Account" b
- name: $1
	purefa_ad:
		name: ${2:# Name of the AD account}
		# state: absent|#present
		# computer: # The common name of the computer account to be created in the Active Directory domain.
		# domain: # The Active Directory domain to join
		# username: # A user capable of creating a computer account within the domain
		# password: # Password string for I(username)
		# directory_servers: # A list of directory servers that will be used for lookups related to user authorization
		# kerberos_servers: # A list of key distribution servers to use for Kerberos protocol
		# local_only: no
		# join_ou: # Distinguished name of organization unit in which the computer account should be created when joining the domain. e.g. OU=Arrays,OU=Storage.
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_admin "Configure Pure Storage FlashArray Global Admin settings" b
- name: $1
	purefa_admin:
		# sso: no
		# max_login: # Maximum number of failed logins before account is locked
		# min_password: 1
		# lockout: # Account lockout duration, in seconds, after max_login exceeded
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_alert "Configure Pure Storage FlashArray alert email settings" b
- name: $1
	purefa_alert:
		address: ${2:# Email address (valid format required)}
		# state: absent|#present
		# enabled: yes
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_apiclient "Manage FlashArray API Clients" b
- name: $1
	purefa_apiclient:
		name: ${2:# Name of the API Client}
		# state: absent|#present
		# role: readonly|ops_admin|storage_admin|array_admin
		# issuer: # The name of the identity provider that will be issuing ID Tokens for this API client
		# public_key: # The API clients PEM formatted (Base64 encoded) RSA public key.
		# token_ttl: 86400
		# enabled: yes
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_arrayname "Configure Pure Storage FlashArray array name" b
- name: $1
	purefa_arrayname:
		name: ${2:# Name of the array. Must conform to correct naming schema.}
		# state: #present
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_banner "Configure Pure Storage FlashArray GUI and SSH MOTD message" b
- name: $1
	purefa_banner:
		# state: #present|absent
		# banner: Welcome to the machine...
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_certs "Manage FlashArray SSL Certificates" b
- name: $1
	purefa_certs:
		# name: management
		# state: absent|#present|import|export|sign
		# country: # The two-letter ISO code for the country where your organization is located
		# province: # The full name of the state or province where your organization is located
		# locality: # The full name of the city where your organization is located
		# organization: # The full and exact legal name of your organization.
		# org_unit: # The department within your organization that is managing the certificate
		# common_name: # The fully qualified domain name (FQDN) of the current array
		# email: # The email address used to contact your organization
		# key_size: 1024|#2048|4096
		# days: 3650
		# generate: no
		# certificate: # Required for I(import)
		# intermeadiate_cert: # Intermeadiate certificate provided by the CA
		# key: # If the Certificate Signed Request (CSR) was not constructed on the array or the private key has changed since construction the CSR, provide a new private key here
		# passphrase: # Passphrase if the private key is encrypted
		# export_file: # Name of file to contain Certificate Signing Request when `status sign`
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_connect "Manage replication connections between two FlashArrays" b
- name: $1
	purefa_connect:
		target_url: ${2:# Management IP address of remote array.}
		# state: absent|#present
		# target_api: # API token for target array
		# connection: sync|#async
		# transport: #ip|fc
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_console "Enable or Disable Pure Storage FlashArray Console Lock" b
- name: $1
	purefa_console:
		# state: enable|#disable
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_directory "Manage FlashArray File System Directories" b
- name: $1
	purefa_directory:
		name: ${2:# Name of the directory}
		filesystem: ${3:# Name of the filesystem the directory links to.}
		# state: absent|#present
		# path: # Path of the managed directory in the file system
		# rename: # Value to rename the specified directory to
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_dirsnap "Manage FlashArray File System Directory Snapshots" b
- name: $1
	purefa_dirsnap:
		name: ${2:# Name of the directory to snapshot}
		filesystem: ${3:# Name of the filesystem the directory links to.}
		client: ${4:# The client name portion of the client visible snapshot name}
		# state: absent|#present
		# eradicate: no
		# suffix: # Snapshot suffix to use
		# new_client: # The new client name when performing a rename
		# new_suffix: # The new suffix when performing a rename
		# rename: no
		# keep_for: # Retention period, after which snapshots will be eradicated
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_dns "Configure FlashArray DNS settings" b
- name: $1
	purefa_dns:
		# state: absent|#present
		# domain: # Domain suffix to be appended when perofrming DNS lookups.
		# nameservers: # List of up to 3 unique DNS server IP addresses. These can be IPv4 or IPv6 - No validation is done of the addresses is performed.
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_ds "Configure FlashArray Directory Service" b
- name: $1
	purefa_ds:
		# state: absent|#present
		# enable: no
		# dstype: #management|data
		# uri: # A list of up to 30 URIs of the directory servers. Each URI must include the scheme ldap:// or ldaps:// (for LDAP over SSL), a hostname, and a domain name or IP address. For example, ldap://ad.company.com configures the directory service with the hostname "ad" in the domain "company.com" while specifying the unencrypted LDAP protocol.
		# base_dn: # Sets the base of the Distinguished Name (DN) of the directory service groups. The base should consist of only Domain Components (DCs). The base_dn will populate with a default value when a URI is entered by parsing domain components from the URI. The base DN should specify DC= for each domain component and multiple DCs should be separated by commas.
		# bind_password: # Sets the password of the bind_user user name account.
		# bind_user: # Sets the user name that can be used to bind to and query the directory.
		# group_base: # Specifies where the configured groups are located in the directory tree. This field consists of Organizational Units (OUs) that combine with the base DN attribute and the configured group CNs to complete the full Distinguished Name of the groups. The group base should specify OU= for each OU and multiple OUs should be separated by commas. The order of OUs is important and should get larger in scope from left to right. Each OU should not exceed 64 characters in length.
		# ro_group: # Sets the common Name (CN) of the configured directory service group containing users with read-only privileges on the FlashArray. This name should be just the Common Name of the group without the CN= specifier. Common Names should not exceed 64 characters in length.
		# sa_group: # Sets the common Name (CN) of the configured directory service group containing administrators with storage-related privileges on the FlashArray. This name should be just the Common Name of the group without the CN= specifier. Common Names should not exceed 64 characters in length.
		# aa_group: # Sets the common Name (CN) of the directory service group containing administrators with full privileges when managing the FlashArray. The name should be just the Common Name of the group without the CN= specifier. Common Names should not exceed 64 characters in length.
		# user_login: # User login attribute in the structure of the configured LDAP servers. Typically the attribute field that holds the users unique login name. Default value is I(sAMAccountName) for Active Directory or I(uid) for all other directory services
		# user_object: # Value of the object class for a management LDAP user. Defaults to I(User) for Active Directory servers, I(posixAccount) or I(shadowAccount) for OpenLDAP servers dependent on the group type of the server, or person for all other directory servers.
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_dsrole "Configure FlashArray Directory Service Roles" b
- name: $1
	purefa_dsrole:
		role: ${2:array_admin|ops_admin|readonly|storage_admin}
		# state: absent|#present
		# group_base: # Specifies where the configured group is located in the directory tree. This field consists of Organizational Units (OUs) that combine with the base DN attribute and the configured group CNs to complete the full Distinguished Name of the groups. The group base should specify OU= for each OU and multiple OUs should be separated by commas. The order of OUs is important and should get larger in scope from left to right.
		# group: # Sets the common Name (CN) of the configured directory service group containing users for the FlashBlade. This name should be just the Common Name of the group without the CN= specifier.
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_endpoint "Manage VMware protocol-endpoints on Pure Storage FlashArrays" b
- name: $1
	purefa_endpoint:
		name: ${2:# The name of the endpoint.}
		# state: absent|#present
		# eradicate: no
		# rename: # Value to rename the specified endpoint to.
		# host: # name of host to attach endpoint to
		# hgroup: # name of hostgroup to attach endpoint to
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_eradication "Configure Pure Storage FlashArray Eradication Timer" b
- name: $1
	purefa_eradication:
		# timer: 1
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_eula "Sign Pure Storage FlashArray EULA" b
- name: $1
	purefa_eula:
		company: ${2:# Full legal name of the entity.}
		name: ${3:# Full legal name of the individual at the company who has the authority to accept the terms of the agreement.}
		title: ${4:# Individual's job title at the company.}
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_export "Manage FlashArray File System Exports" b
- name: $1
	purefa_export:
		name: ${2:# Name of the export}
		filesystem: ${3:# Name of the filesystem the export applies to}
		directory: ${4:# Name of the managed directory in the file system the export applies to}
		# state: absent|#present
		# nfs_policy: # Name of NFS Policy to apply to the export
		# smb_policy: # Name of SMB Policy to apply to the export
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_fs "Manage FlashArray File Systems" b
- name: $1
	purefa_fs:
		name: ${2:# Name of the file system}
		# state: absent|#present
		# eradicate: no
		# rename: # Value to rename the specified file system to
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_hg "Manage hostgroups on Pure Storage FlashArrays" b
- name: $1
	purefa_hg:
		hostgroup: ${2:# The name of the hostgroup.}
		# state: absent|#present
		# host: # List of existing hosts to add to hostgroup.
		# volume: # List of existing volumes to add to hostgroup.
		# lun: # LUN ID to assign to volume for hostgroup. Must be unique.
		# rename: # New name of hostgroup
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_host "Manage hosts on Pure Storage FlashArrays" b
- name: $1
	purefa_host:
		name: ${2:# The name of the host.}
		# protocol: fc|iscsi|nvme|mixed
		# rename: # The name to rename to.
		# state: absent|#present
		# wwns: # List of wwns of the host.
		# iqn: # List of IQNs of the host.
		# nqn: # List of NQNs of the host.
		# volume: # Volume name to map to the host.
		# lun: # LUN ID to assign to volume for host. Must be unique.
		# count: # Number of hosts to be created in a multiple host creation
		# start: 0
		# digits: 1
		# suffix: # Suffix string, if required, for multiple host create
		# personality: hpux|vms|aix|esxi|solaris|hitachi-vsp|oracle-vm-server|delete|#
		# preferred_array: # List of preferred arrays in an ActiveCluster environment.
		# target_user: # Sets the target user name for CHAP authentication
		# target_password: # Sets the target password for CHAP authentication
		# host_user: # Sets the host user name for CHAP authentication
		# host_password: # Sets the host password for CHAP authentication
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_info "Collect information from Pure Storage FlashArray" b
- name: $1
	purefa_info:
		# gather_subset: minimum
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_inventory "Collect information from Pure Storage FlashArray" b
- name: $1
	purefa_inventory:
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_kmip "Manage FlashArray KMIP server objects" b
- name: $1
	purefa_kmip:
		name: ${2:# Name of the KMIP server object}
		# certificate: # Name of existing certifcate used to verify FlashArray authenticity to the KMIP server.
		# state: absent|#present
		# ca_certificate: # The text of the CA certificate for the KMIP server.
		# uris: # A list of URIs for the configured KMIP servers.
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_maintenance "Configure Pure Storage FlashArray Maintence Windows" b
- name: $1
	purefa_maintenance:
		# state: absent|#present
		# timeout: 3600
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_network "Manage network interfaces in a Pure Storage FlashArray" b
- name: $1
	purefa_network:
		name: ${2:# Interface name (physical or virtual).}
		# state: #present|absent
		# address: # IPv4 or IPv6 address of interface in CIDR notation.
		# gateway: # IPv4 or IPv6 address of interface gateway.
		# mtu: 1500
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_ntp "Configure Pure Storage FlashArray NTP settings" b
- name: $1
	purefa_ntp:
		# state: absent|#present
		# ntp_servers: # A list of up to 4 alternate NTP servers. These may include IPv4, IPv6 or FQDNs. Invalid IP addresses will cause the module to fail. No validation is performed for FQDNs.
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_offload "Create, modify and delete NFS, S3 or Azure offload targets" b
- name: $1
	purefa_offload:
		name: ${2:# The name of the offload target}
		# state: absent|#present
		# protocol: #nfs|s3|azure|gcp
		# address: # The IP or FQDN address of the NFS server
		# share: # NFS export on the NFS server
		# options: 
		# access_key: # Access Key ID of the offload target
		# container: offload
		# bucket: # Name of the bucket for the S3 or GCP target
		# account: # Name of the Azure blob storage account
		# secret: # Secret Access Key for the offload target
		# initialize: yes
		# placement: #retention-based|aws-standard-class
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_pg "Manage protection groups on Pure Storage FlashArrays" b
- name: $1
	purefa_pg:
		pgroup: ${2:# The name of the protection group.}
		# state: absent|#present
		# volume: # List of existing volumes to add to protection group.
		# host: # List of existing hosts to add to protection group.
		# hostgroup: # List of existing hostgroups to add to protection group.
		# eradicate: no
		# enabled: yes
		# target: # List of remote arrays or offload target for replication protection group to connect to.
		# rename: # Rename a protection group
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_pgsched "Manage protection groups replication schedules on Pure Storage FlashArrays" b
- name: $1
	purefa_pgsched:
		name: ${2:# The name of the protection group.}
		schedule: ${3:replication|snapshot}
		# state: absent|#present
		# enabled: yes
		# replicate_at: # Specifies the preferred time as HH:MM:SS, using 24-hour clock, at which to generate snapshots.
		# blackout_start: # Specifies the time at which to suspend replication.
		# blackout_end: # Specifies the time at which to restart replication.
		# replicate_frequency: # Specifies the replication frequency in seconds.
		# snap_at: # Specifies the preferred time as HH:MM:SS, using 24-hour clock, at which to generate snapshots.
		# snap_frequency: # Specifies the snapshot frequency in seconds.
		# days: # Specifies the number of days to keep the I(per_day) snapshots beyond the I(all_for) period before they are eradicated
		# all_for: # Specifies the length of time, in seconds, to keep the snapshots on the source array before they are eradicated.
		# per_day: # Specifies the number of I(per_day) snapshots to keep beyond the I(all_for) period.
		# target_all_for: # Specifies the length of time, in seconds, to keep the replicated snapshots on the targets.
		# target_per_day: # Specifies the number of I(per_day) replicated snapshots to keep beyond the I(target_all_for) period.
		# target_days: # Specifies the number of days to keep the I(target_per_day) replicated snapshots beyond the I(target_all_for) period before they are eradicated.
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_pgsnap "Manage protection group snapshots on Pure Storage FlashArrays" b
- name: $1
	purefa_pgsnap:
		name: ${2:# The name of the source protection group.}
		# suffix: # Suffix of snapshot name.
		# state: absent|#present|copy
		# eradicate: no
		# restore: # Restore a specific volume from a protection group snapshot.
		# overwrite: no
		# target: # Volume to restore a specified volume to.
		# offload: # Name of offload target on which the snapshot exists.
		# now: no
		# apply_retention: no
		# remote: no
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_phonehome "Enable or Disable Pure Storage FlashArray Phonehome" b
- name: $1
	purefa_phonehome:
		# state: #present|absent
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_pod "Manage AC pods in Pure Storage FlashArrays" b
- name: $1
	purefa_pod:
		name: ${2:# The name of the pod.}
		# stretch: # The name of the array to stretch to/unstretch from. Must be synchromously replicated.
		# failover: # The name of the array given priority to stay online if arrays loose contact with eachother.
		# state: absent|#present
		# eradicate: no
		# target: # Name of clone target pod.
		# mediator: purestorage
		# promote: # Promote/demote any pod not in a stretched relationship. .
		# quiesce: # Quiesce/Skip quiesce when I(promote) is false and demoting an ActiveDR pod.
		# undo: # Use the I(undo-remote) pod when I(promote) is true and promoting an ActiveDR pod.
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_pod_replica "Manage ActiveDR pod replica links between Pure Storage FlashArrays" b
- name: $1
	purefa_pod_replica:
		name: ${2:# ActiveDR source pod name}
		# state: #present|absent
		# target_array: # Remote array name to create replica on.
		# target_pod: # Name of target pod
		# pause: # Pause/unpause a pod replica link
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_policy "Manage FlashArray File System Policies" b
- name: $1
	purefa_policy:
		name: ${2:# Name of the policy}
		policy: ${3:nfs|smb|snapshot|quota}
		# state: absent|#present
		# enabled: yes
		# smb_anon_allowed: no
		# client: # Specifies which SMB or NFS clients are given access
		# smb_encrypt: no
		# nfs_access: root-squash|#no-root-squash
		# nfs_permission: ro|#rw
		# snap_at: # Specifies the number of hours since midnight at which to take a snapshot or the hour including AM/PM
		# snap_every: # Specifies the interval between snapshots, in minutes.
		# snap_keep_for: # Specifies the period that snapshots are retained before they are eradicated, in minutes.
		# snap_client_name: # The customizable portion of the client visible snapshot name.
		# snap_suffix: # The snapshot suffix name
		# rename: # New name of policy
		# directory: # Directories to have the quota rule applied to.
		# quota_limit: # Logical space limit of the share in M, G, T or P units. See examples.
		# quota_notifications: user|group
		# quota_enforced: yes
		# ignore_usage: no
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_proxy "Configure FlashArray phonehome HTTPs proxy settings" b
- name: $1
	purefa_proxy:
		# state: absent|#present
		# host: # The proxy host name.
		# port: # The proxy TCP/IP port number.
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_ra "Enable or Disable Pure Storage FlashArray Remote Assist" b
- name: $1
	purefa_ra:
		# state: #enable|disable
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_saml "Manage FlashArray SAML2 service and identity providers" b
- name: $1
	purefa_saml:
		name: ${2:# Name of the SAML2 identity provider (IdP)}
		# state: absent|#present
		# url: # The URL of the identity provider
		# array_url: # The URL of the FlashArray
		# metadata_url: # The URL of the identity provider metadata
		# enabled: no
		# encrypt_asserts: no
		# sign_request: no
		# x509_cert: # The X509 certificate that the service provider uses to verify the SAML response signature from the identity provider
		# decryption_credential: # The credential used by the service provider to decrypt encrypted SAML assertions from the identity provider
		# signing_credential: # The credential used by the service provider to sign SAML requests
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_smis "Enable or disable FlashArray SMI-S features" b
- name: $1
	purefa_smis:
		# slp: yes
		# smis: yes
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_smtp "Configure FlashArray SMTP settings" b
- name: $1
	purefa_smtp:
		# state: absent|#present
		# password: # The SMTP password.
		# user: # The SMTP username.
		# relay_host: # IPv4 or IPv6 address or FQDN. A port number may be appended.
		# sender_domain: # Domain name.
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_snap "Manage volume snapshots on Pure Storage FlashArrays" b
- name: $1
	purefa_snap:
		name: ${2:# The name of the source volume.}
		# suffix: # Suffix of snapshot name.
		# target: # Name of target volume if creating from snapshot.
		# overwrite: no
		# offload: # Only valid for Purity//FA 6.1 or higher
		# state: absent|copy|#present|rename
		# eradicate: no
		# ignore_repl: no
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_snmp "Configure FlashArray SNMP Managers" b
- name: $1
	purefa_snmp:
		name: ${2:# Name of SNMP Manager}
		# state: absent|#present
		# auth_passphrase: # SNMPv3 only. Passphrase of 8 - 32 characters.
		# auth_protocol: MD5|SHA
		# community: # SNMP v2c only. Manager community ID. Between 1 and 32 characters long.
		# host: # IPv4 or IPv6 address or FQDN to send trap messages to.
		# user: # SNMP v3 only. User ID recognized by the specified SNMP manager. Must be between 1 and 32 characters.
		# version: #v2c|v3
		# notification: inform|#trap
		# privacy_passphrase: # SNMPv3 only. Passphrase to encrypt SNMP messages. Must be between 8 and 63 non-space ASCII characters.
		# privacy_protocol: AES|DES
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_subnet "Manage network subnets in a Pure Storage FlashArray" b
- name: $1
	purefa_subnet:
		name: ${2:# Subnet name.}
		# state: #present|absent
		# enabled: yes
		# prefix: # Set the IPv4 or IPv6 address to be associated with the subnet.
		# gateway: # IPv4 or IPv6 address of subnet gateway.
		# mtu: 1500
		# vlan: # VLAN ID. Range is 0 to 4094.
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_syslog "Configure Pure Storage FlashArray syslog settings" b
- name: $1
	purefa_syslog:
		protocol: ${2:tcp|tls|udp}
		address: ${3:# Syslog server address. This field supports IPv4, IPv6 or FQDN. An invalid IP addresses will cause the module to fail. No validation is performed for FQDNs.}
		# state: absent|#present
		# port: # Port at which the server is listening. If no port is specified the system will use 514
		# name: # A user-specified name. The name must be locally unique and cannot be changed.
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_syslog_settings "Manage FlashArray syslog servers settings" b
- name: $1
	purefa_syslog_settings:
		# severity: debug|#info|notice
		# ca_certificate: # The text of the CA certificate for condifured syslog servers.
		# tls_audit: yes
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_timeout "Configure Pure Storage FlashArray GUI idle timeout" b
- name: $1
	purefa_timeout:
		# state: #present|absent
		# timeout: 30
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_user "Create, modify or delete FlashArray local user account" b
- name: $1
	purefa_user:
		name: ${2:# The name of the local user account}
		# state: absent|#present
		# role: readonly|storage_admin|array_admin
		# password: # Password for the local user.
		# old_password: # If changing an existing password, you must provide the old password for security
		# api: no
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_vg "Manage volume groups on Pure Storage FlashArrays" b
- name: $1
	purefa_vg:
		name: ${2:# The name of the volume group.}
		# state: absent|#present
		# eradicate: no
		# bw_qos: # Bandwidth limit for vgroup in M or G units. M will set MB/s G will set GB/s To clear an existing QoS setting use 0 (zero)
		# iops_qos: # IOPs limit for vgroup - use value or K or M K will mean 1000 M will mean 1000000 To clear an existing IOPs setting use 0 (zero)
		# count: # Number of volume groups to be created in a multiple volume group creation
		# start: 0
		# digits: 1
		# suffix: # Suffix string, if required, for multiple volume group create
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_vlan "Manage network VLAN interfaces in a Pure Storage FlashArray" b
- name: $1
	purefa_vlan:
		name: ${2:# Interface name, including controller indentifier.}
		subnet: ${3:# Name of subnet interface associated with.}
		# state: #present|absent
		# enabled: yes
		# address: # IPv4 or IPv6 address of interface.
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_vnc "Enable or Disable VNC port for installed apps" b
- name: $1
	purefa_vnc:
		name: ${2:# Name od app}
		# state: #present|absent
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_volume "Manage volumes on Pure Storage FlashArrays" b
- name: $1
	purefa_volume:
		name: ${2:# The name of the volume.}
		# target: # The name of the target volume, if copying.
		# state: absent|#present
		# eradicate: no
		# overwrite: no
		# size: # Volume size in M, G, T or P units.
		# count: # Number of volumes to be created in a multiple volume creation
		# start: 0
		# digits: 1
		# suffix: # Suffix string, if required, for multiple volume create
		# bw_qos: # Bandwidth limit for volume in M or G units. M will set MB/s G will set GB/s To clear an existing QoS setting use 0 (zero)
		# iops_qos: # IOPs limit for volume - use value or K or M K will mean 1000 M will mean 1000000 To clear an existing IOPs setting use 0 (zero)
		# move: # Move a volume in and out of a pod or vgroup
		# rename: # Value to rename the specified volume to.
		# pgroup: # Name of exisitng, not deleted, protection group to add volume to
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefa_volume_tags "Manage volume tags on Pure Storage FlashArrays" b
- name: $1
	purefa_volume_tags:
		name: ${2:# The name of the volume.}
		kvp: ${3:# List of key value pairs to assign to the volume.}
		# namespace: default
		# copyable: yes
		# state: absent|#present
		# fa_url: # FlashArray management IPv4 address or Hostname.
		# api_token: # FlashArray API token for admin privileged user.
$0
endsnippet

snippet purefb_ad "Manage FlashBlade Active Directory Account" b
- name: $1
	purefb_ad:
		name: ${2:# Name of the AD account}
		# existing: no
		# state: absent|#present
		# computer: # The common name of the computer account to be created in the Active Directory domain.
		# domain: # The Active Directory domain to join
		# username: # A user capable of creating a computer account within the domain
		# password: # Password string for I(username)
		# encryption: #aes256-sha1|aes128-sha1|arcfour-hmac
		# join_ou: # Location where the Computer account will be created. e.g. OU=Arrays,OU=Storage.
		# directory_servers: # A list of directory servers that will be used for lookups related to user authorization
		# kerberos_servers: # A list of key distribution servers to use for Kerberos protocol
		# service_principals: # A list of either FQDNs or SPNs for registering services with the domain.
		# service: #nfs|cifs|HOST
		# local_only: no
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_admin "Configure Pure Storage FlashBlade Global Admin settings" b
- name: $1
	purefb_admin:
		# max_login: # Maximum number of failed logins before account is locked
		# min_password: 1
		# lockout: # Account lockout duration, in seconds, after max_login exceeded
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_alert "Configure Pure Storage FlashBlade alert email settings" b
- name: $1
	purefb_alert:
		address: ${2:# Email address (valid format required)}
		# state: absent|#present
		# enabled: yes
		# severity: #info|warning|critical
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_apiclient "Manage FlashBlade API Clients" b
- name: $1
	purefb_apiclient:
		name: ${2:# Name of the API Client}
		# state: absent|#present
		# role: readonly|ops_admin|storage_admin|array_admin
		# issuer: # The name of the identity provider that will be issuing ID Tokens for this API client
		# public_key: # The API clients PEM formatted (Base64 encoded) RSA public key.
		# token_ttl: 86400
		# enabled: yes
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_banner "Configure Pure Storage FlashBlade GUI and SSH MOTD message" b
- name: $1
	purefb_banner:
		# state: #present|absent
		# banner: Welcome to the machine...
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_bladename "Configure Pure Storage FlashBlade name" b
- name: $1
	purefb_bladename:
		name: ${2:# Name of the FlashBlade. Must conform to correct naming schema.}
		# state: #present
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_bucket "Manage Object Store Buckets on a  Pure Storage FlashBlade." b
- name: $1
	purefb_bucket:
		name: ${2:# Bucket Name.}
		account: ${3:# Object Store Account for Bucket.}
		# versioning: enabled|suspended|#absent
		# state: #present|absent
		# eradicate: no
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_bucket_replica "Manage bucket replica links between Pure Storage FlashBlades" b
- name: $1
	purefb_bucket_replica:
		name: ${2:# Local Bucket Name.}
		# state: #present|absent
		# target: # Remote array or target name to create replica on.
		# target_bucket: # Name of target bucket name
		# paused: no
		# credential: # Name of remote credential name to use.
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_certgrp "Manage FlashBlade Certifcate Groups" b
- name: $1
	purefb_certgrp:
		# state: absent|#present
		# name: # Name of the certificate group
		# certificates: # List of certifcates to add to a policy on creation
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_certs "Manage FlashBlade SSL Certifcates" b
- name: $1
	purefb_certs:
		# state: absent|#present
		# name: # Name of the certificate
		# contents: # SSL certifcate text
		# private_key: # SSL certificate private key test
		# passphrase: # Passphrase for the private_key
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_connect "Manage replication connections between two FlashBlades" b
- name: $1
	purefb_connect:
		target_url: ${2:# Management IP address of target FlashBlade system}
		# state: absent|#present
		# encrypted: no
		# target_api: # API token for target FlashBlade system
		# target_repl: # Replication IP address of target FlashBlade system
		# default_limit: # Default maximum bandwidth threshold for outbound traffic in bytes.
		# window_limit: # Maximum bandwidth threshold for outbound traffic during the specified time range in bytes.
		# window_start: # The window start time.
		# window_end: # The window end time.
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_dns "Configure Pure Storage FlashBlade DNS settings" b
- name: $1
	purefb_dns:
		# state: absent|#present
		# domain: # Domain suffix to be appended when perofrming DNS lookups.
		# nameservers: # List of up to 3 unique DNS server IP addresses. These can be IPv4 or IPv6 - No validation is done of the addresses is performed.
		# search: # Ordered list of domain names to search
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_ds "Configure FlashBlade Directory Service" b
- name: $1
	purefb_ds:
		dstype: ${2:management|nfs|smb}
		# state: absent|#present
		# enable: no
		# uri: # A list of up to 30 URIs of the directory servers. Each URI must include the scheme ldap:// or ldaps:// (for LDAP over SSL), a hostname, and a domain name or IP address. For example, ldap://ad.company.com configures the directory service with the hostname "ad" in the domain "company.com" while specifying the unencrypted LDAP protocol.
		# base_dn: # Sets the base of the Distinguished Name (DN) of the directory service groups. The base should consist of only Domain Components (DCs). The base_dn will populate with a default value when a URI is entered by parsing domain components from the URI. The base DN should specify DC= for each domain component and multiple DCs should be separated by commas.
		# bind_password: # Sets the password of the bind_user user name account.
		# bind_user: # Sets the user name that can be used to bind to and query the directory.
		# nis_servers: # A list of up to 30 IP addresses or FQDNs for NIS servers.
		# nis_domain: # The NIS domain to search
		# join_ou: # The optional organizational unit (OU) where the machine account for the directory service will be created.
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_dsrole "Configure FlashBlade  Management Directory Service Roles" b
- name: $1
	purefb_dsrole:
		role: ${2:array_admin|ops_admin|readonly|storage_admin}
		# state: absent|#present
		# group_base: # Specifies where the configured group is located in the directory tree. This field consists of Organizational Units (OUs) that combine with the base DN attribute and the configured group CNs to complete the full Distinguished Name of the groups. The group base should specify OU= for each OU and multiple OUs should be separated by commas. The order of OUs is important and should get larger in scope from left to right.
		# group: # Sets the common Name (CN) of the configured directory service group containing users for the FlashBlade. This name should be just the Common Name of the group without the CN= specifier.
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_eula "Sign Pure Storage FlashBlade EULA" b
- name: $1
	purefb_eula:
		company: ${2:# Full legal name of the entity.}
		name: ${3:# Full legal name of the individual at the company who has the authority to accept the terms of the agreement.}
		title: ${4:# Individual's job title at the company.}
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_fs "Manage filesystemon Pure Storage FlashBlade`" b
- name: $1
	purefb_fs:
		name: ${2:# Filesystem Name.}
		# state: #present|absent
		# eradicate: no
		# size: # Volume size in M, G, T or P units. See examples.
		# nfsv3: yes
		# nfsv4: yes
		# nfs_rules: # Define the NFS rules in operation.
		# smb: no
		# smb_aclmode: #shared|native
		# http: no
		# snapshot: no
		# writable: # Define if a filesystem is writeable.
		# promote: # Promote/demote a filesystem.
		# fastremove: no
		# hard_limit: no
		# user_quota: # Default quota in M, G, T or P units for a user under this file system.
		# group_quota: # Default quota in M, G, T or P units for a group under this file system.
		# policy: # Filesystem policy to assign to or remove from a filesystem.
		# policy_state: absent|#present
		# delete_link: no
		# discard_snaps: no
		# access_control: nfs|smb|#shared|independent|mode-bits
		# safeguard_acls: yes
		# export_policy: # Name of NFS export policy to assign to filesystem
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_fs_replica "Manage filesystem replica links between Pure Storage FlashBlades" b
- name: $1
	purefb_fs_replica:
		name: ${2:# Local Filesystem Name.}
		# state: #present|absent
		# target_array: # Remote array name to create replica on.
		# target_fs: # Name of target filesystem name
		# policy: # Name of filesystem snapshot policy to apply to the replica link.
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_groupquota "Manage filesystem group quotas" b
- name: $1
	purefb_groupquota:
		name: ${2:# Filesystem Name.}
		# state: #present|absent
		# quota: # Group quota in M, G, T or P units. This cannot be 0.
		# gid: # The group id on which the quota is enforced.
		# gname: # The group name on which the quota is enforced.
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_info "Collect information from Pure Storage FlashBlade" b
- name: $1
	purefb_info:
		# gather_subset: minimum
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_inventory "Collect information from Pure Storage FlashBlade" b
- name: $1
	purefb_inventory:
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_lag "Manage FlashBlade Link Aggregation Groups" b
- name: $1
	purefb_lag:
		# name: uplink
		# state: absent|#present
		# ports: # Name of network ports assigned to the LAG
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_lifecycle "Manage FlashBlade object lifecycles" b
- name: $1
	purefb_lifecycle:
		bucket: ${2:# Bucket the lifecycle rule applies to}
		name: ${3:# Name of the lifecycle rule}
		# state: absent|#present
		# enabled: yes
		# keep_previous_for: # Time after which previous versions will be marked expired.
		# keep_current_for: # Time after which current versions will be marked expired.
		# keep_current_until: # Date after which current versions will be marked expired.
		# abort_uploads_after: # Duration of time after which incomplete multipart uploads will be aborted.
		# prefix: # Object key prefix identifying one or more objects in the bucket
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_network "Manage network interfaces in a Pure Storage FlashBlade" b
- name: $1
	purefb_network:
		name: ${2:# Interface Name.}
		# state: #present|absent
		# address: # IP address of interface.
		# services: #data|replication
		# itype: #vip
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_ntp "Configure Pure Storage FlashBlade NTP settings" b
- name: $1
	purefb_ntp:
		# state: absent|#present
		# ntp_servers: # A list of up to 4 alternate NTP servers. These may include IPv4, IPv6 or FQDNs. Invalid IP addresses will cause the module to fail. No validation is performed for FQDNs.
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_phonehome "Enable or Disable Pure Storage FlashBlade Phone Home" b
- name: $1
	purefb_phonehome:
		# state: #present|absent
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_policy "Manage FlashBlade policies" b
- name: $1
	purefb_policy:
		# state: absent|#present|copy
		# target: # Name of policy to copy rule to
		# target_rule: # Name of the rule to copy the exisitng rule to.
		# policy_type: #snapshot|access|nfs
		# account: # Name of Object Store account policy applies to.
		# rule: # Name of the rule for the Object Store Access Policy
		# effect: #allow
		# actions: s3:*|s3:AbortMultipartUpload|s3:CreateBucket|s3:DeleteBucket|s3:DeleteObject|s3:DeleteObjectVersion|s3:ExtendSafemodeRetentionPeriod|s3:GetBucketAcl|s3:GetBucketLocation|s3:GetBucketVersioning|s3:GetLifecycleConfiguration|s3:GetObject|s3:GetObjectAcl|s3:GetObjectVersion|s3:ListAllMyBuckets|s3:ListBucket|s3:ListBucketMultipartUploads|s3:ListBucketVersions|s3:ListMultipartUploadParts|s3:PutBucketVersioning|s3:PutLifecycleConfiguration|s3:PutObject
		# object_resources: # List of bucket names and object paths, with a wildcard (*) to specify objects in a bucket; e.g., bucket1, bucket1/*, bucket2, bucket2/*.
		# source_ips: # List of IPs and subnets from which this rule should allow requests; e.g., 10.20.30.40, 10.20.30.0/24, 2001:DB8:1234:5678::/64.
		# s3_prefixes: # List of 'folders' (object key prefixes) for which object listings may be requested.
		# s3_delimiters: # List of delimiter characters allowed in object list requests.
		# ignore_enforcement: yes
		# user: # User in the I(account) that the policy is granted to.
		# force_delete: no
		# name: # Name of the policy
		# enabled: yes
		# every: # Interval between snapshots in seconds
		# keep_for: # How long to keep snapshots for
		# at: # Provide a time in 12-hour AM/PM format, eg. 11AM
		# timezone: # Time Zone used for the I(at) parameter
		# filesystem: # List of filesystems to add to a policy on creation
		# replica_link: # List of filesystem replica links to add to a policy on creation
		# access: #root-squash|all-squash|no-squash
		# anonuid: # Any user whose UID is affected by an I(access) of `root_squash` or `all_squash` will have their UID mapped to anonuid. The defaultis null, which means 65534. Use "" to clear.
		# anongid: # Any user whose GID is affected by an I(access) of `root_squash` or `all_squash` will have their GID mapped to anongid. The default anongid is null, which means 65534. Use "" to clear.
		# atime: yes
		# client: *
		# fileid_32bit: no
		# permission: rw|#ro
		# secure: no
		# security: #sys|krb5|krb5i|krb5p
		# before_rule: # The index of the client rule to insert or move a client rule before.
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_proxy "Configure FlashBlade phonehome HTTPs proxy settings" b
- name: $1
	purefb_proxy:
		# state: absent|#present
		# host: # The proxy host name.
		# port: # The proxy TCP/IP port number.
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_ra "Enable or Disable Pure Storage FlashBlade Remote Assist" b
- name: $1
	purefb_ra:
		# state: #present|absent
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_remote_cred "Create, modify and delete FlashBlade object store remote credentials" b
- name: $1
	purefb_remote_cred:
		name: ${2:# The name of the credential}
		target: ${3:# Define whether to initialize the S3 bucket}
		# state: absent|#present
		# access_key: # Access Key ID of the S3 target
		# secret: # Secret Access Key for the S3 or Azure target
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_s3acc "Create or delete FlashBlade Object Store accounts" b
- name: $1
	purefb_s3acc:
		name: ${2:# The name of object store account}
		# state: absent|#present
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_s3user "Create or delete FlashBlade Object Store account users" b
- name: $1
	purefb_s3user:
		name: ${2:# The name of object store user}
		account: ${3:# The name of object store account associated with user}
		# state: absent|#present|remove_key
		# access_key: no
		# remove_key: # Access key to be removed from user
		# imported_key: # Access key of imported credentials
		# imported_secret: # Access key secret for access key to import
		# policy: # User Access Policies to be assigned to user on creation
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_smtp "Configure SMTP for Pure Storage FlashBlade" b
- name: $1
	purefb_smtp:
		domain: ${2:# Domain name for alert messages}
		# host: # Relay server name
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_snap "Manage filesystem snapshots on Pure Storage FlashBlades" b
- name: $1
	purefb_snap:
		name: ${2:# The name of the source filesystem.}
		# suffix: # Suffix of snapshot name.
		# state: absent|#present|restore
		# targets: # Name of target to replicate snapshot to.
		# now: no
		# eradicate: no
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_snmp_agent "Configure the FlashBlade SNMP Agent" b
- name: $1
	purefb_snmp_agent:
		# auth_passphrase: # SNMPv3 only. Passphrase of 8 - 32 characters.
		# auth_protocol: MD5|SHA
		# community: # SNMP v2c only. Manager community ID. Between 1 and 32 characters long.
		# user: # SNMP v3 only. User ID recognized by the specified SNMP agent. Must be between 1 and 32 characters.
		# version: v2c|v3
		# privacy_passphrase: # SNMPv3 only. Passphrase to encrypt SNMP messages. Must be between 8 and 63 non-space ASCII characters.
		# privacy_protocol: AES|DES
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_snmp_mgr "Configure FlashBlade SNMP Managers" b
- name: $1
	purefb_snmp_mgr:
		name: ${2:# Name of SNMP Manager}
		# state: absent|#present
		# auth_passphrase: # SNMPv3 only. Passphrase of 8 - 32 characters.
		# auth_protocol: MD5|SHA
		# community: # SNMP v2c only. Manager community ID. Between 1 and 32 characters long.
		# host: # IPv4 or IPv6 address or FQDN to send trap messages to.
		# user: # SNMP v3 only. User ID recognized by the specified SNMP manager. Must be between 1 and 32 characters.
		# version: v2c|v3
		# notification: inform|#trap
		# privacy_passphrase: # SNMPv3 only. Passphrase to encrypt SNMP messages. Must be between 8 and 63 non-space ASCII characters.
		# privacy_protocol: AES|DES
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_subnet "Manage network subnets in a Pure Storage FlashBlade" b
- name: $1
	purefb_subnet:
		name: ${2:# Subnet Name.}
		# state: #present|absent
		# lag: uplink
		# gateway: # IPv4 or IPv6 address of subnet gateway.
		# mtu: 1500
		# prefix: # IPv4 or IPv6 address associated with the subnet.
		# vlan: 0
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_syslog "Configure Pure Storage FlashBlade syslog settings" b
- name: $1
	purefb_syslog:
		name: ${2:# Unique identifier for the syslog server address}
		# state: absent|#present
		# protocol: tcp|tls|udp
		# port: # Port at which the server is listening. If no port is specified the system will use 514
		# address: # Syslog server address. This field supports IPv4 or FQDN. An invalid IP addresses will cause the module to fail. No validation is performed for FQDNs.
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_target "Manage remote S3-capable targets for a FlashBlade" b
- name: $1
	purefb_target:
		name: ${2:# Name of S3-capable target (IP or FQDN)}
		# state: absent|#present
		# address: # Address of S3-capable target (IP or FQDN)
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_timeout "Configure Pure Storage FlashBlade GUI idle timeout" b
- name: $1
	purefb_timeout:
		# state: #present|absent
		# timeout: 30
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_user "Modify FlashBlade user accounts" b
- name: $1
	purefb_user:
		# name: # The name of the user account
		# password: # Password for the local user.
		# old_password: # If changing an existing password, you must provide the old password for security
		# public_key: # The API clients PEM formatted (Base64 encoded) RSA public key.
		# clear_lock: no
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_userpolicy "Manage FlashBlade Object Store User Access Policies" b
- name: $1
	purefb_userpolicy:
		# name: # Name of the Object Store User
		# account: # Name of the Object Store Account associated with the user
		# state: absent|#present|show
		# policy: # Policies to added or deleted from the Object Store User
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_userquota "Manage filesystem user quotas" b
- name: $1
	purefb_userquota:
		name: ${2:# Filesystem Name.}
		# state: #present|absent
		# quota: # User quota in M, G, T or P units. This cannot be 0.
		# uid: # The user id on which the quota is enforced.
		# uname: # The user name on which the quota is enforced.
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet purefb_virtualhost "Manage FlashBlade Object Store Virtual Hosts" b
- name: $1
	purefb_virtualhost:
		name: ${2:# Name of the Object Store Virtual Host}
		# state: absent|#present
		# fb_url: # FlashBlade management IP address or Hostname.
		# api_token: # FlashBlade API token for admin privileged user.
$0
endsnippet

snippet cpm_alarm_info "Get alarm information from WTI OOB and PDU devices" b
- name: $1
	cpm_alarm_info:
		cpm_url: ${2:# This is the URL of the WTI device to send the module.}
		cpm_username: ${3:# This is the Username of the WTI device to send the module.}
		cpm_password: ${4:# This is the Password of the WTI device to send the module.}
		# use_https: yes
		# validate_certs: yes
		# use_proxy: no
$0
endsnippet

snippet cpm_config_backup "Get parameters from WTI OOB and PDU devices" b
- name: $1
	cpm_config_backup:
		cpm_url: ${2:# This is the URL of the WTI device to get the parameters from.}
		cpm_username: ${3:# This is the Username of the WTI device to get the parameters from.}
		cpm_password: ${4:# This is the Password of the WTI device to get the parameters from.}
		# cpm_path: /tmp/
		# use_https: yes
		# validate_certs: yes
		# use_proxy: no
$0
endsnippet

snippet cpm_config_restore "Send operational parameters to WTI OOB and PDU devices" b
- name: $1
	cpm_config_restore:
		cpm_url: ${2:# This is the URL of the WTI device to get the parameters from.}
		cpm_username: ${3:# This is the Username of the WTI device to get the parameters from.}
		cpm_password: ${4:# This is the Password of the WTI device to get the parameters from.}
		cpm_filename: ${5:# This is the filename of the existing WTI device configuration file.}
		# cpm_path: /tmp/
		# use_https: yes
		# validate_certs: yes
		# use_proxy: no
$0
endsnippet

snippet cpm_current_info "Get the Current Information of a WTI device" b
- name: $1
	cpm_current_info:
		cpm_url: ${2:# This is the URL of the WTI device to send the module.}
		cpm_username: ${3:# This is the Username of the WTI device to send the module.}
		cpm_password: ${4:# This is the Password of the WTI device to send the module.}
		# cpm_startdate: # Start date of the range to look for current data
		# cpm_enddate: # End date of the range to look for current data
		# use_https: yes
		# validate_certs: yes
		# use_proxy: no
$0
endsnippet

snippet cpm_firmware_info "Get firmware information from WTI OOB and PDU devices" b
- name: $1
	cpm_firmware_info:
		cpm_url: ${2:# This is the URL of the WTI device to send the module.}
		cpm_username: ${3:# This is the Username of the WTI device to send the module.}
		cpm_password: ${4:# This is the Password of the WTI device to send the module.}
		# use_https: yes
		# validate_certs: yes
		# use_proxy: no
$0
endsnippet

snippet cpm_firmware_update "Set Serial port parameters in WTI OOB and PDU devices" b
- name: $1
	cpm_firmware_update:
		cpm_url: ${2:# This is the URL of the WTI device to send the module.}
		cpm_username: ${3:# This is the Username of the WTI device to send the module.}
		cpm_password: ${4:# This is the Password of the WTI device to send the module.}
		# cpm_path: /tmp/
		# cpm_file: # If a file is defined, this file will be used to update the WTI device.
		# use_force: no
		# use_https: yes
		# validate_certs: yes
		# use_proxy: no
		# family: 0|#1
		# removefileonexit: 0|#1
$0
endsnippet

snippet cpm_hostname_config "Set Hostname (Site ID), Location, Asset Tag parameters in WTI OOB and PDU devices." b
- name: $1
	cpm_hostname_config:
		cpm_url: ${2:# This is the URL of the WTI device to send the module.}
		cpm_username: ${3:# This is the Username of the WTI device to send the module.}
		cpm_password: ${4:# This is the Password of the WTI device to send the module.}
		# use_https: yes
		# validate_certs: yes
		# use_proxy: no
		# hostname: # This is the Hostname (Site-ID) tag to be set for the WTI OOB and PDU device.
		# location: # This is the Location tag to be set for the WTI OOB and PDU device.
		# assettag: # This is the Asset Tag to be set for the WTI OOB and PDU device.
$0
endsnippet

snippet cpm_hostname_info "Get Hostname (Site ID), Location, Asset Tag parameters in WTI OOB and PDU devices" b
- name: $1
	cpm_hostname_info:
		cpm_url: ${2:# This is the URL of the WTI device to send the module.}
		cpm_username: ${3:# This is the Username of the WTI device to send the module.}
		cpm_password: ${4:# This is the Password of the WTI device to send the module.}
		# use_https: yes
		# validate_certs: yes
		# use_proxy: no
$0
endsnippet

snippet cpm_interface_config "Set network interface parameters in WTI OOB and PDU devices" b
- name: $1
	cpm_interface_config:
		cpm_url: ${2:# This is the URL of the WTI device to send the module.}
		cpm_username: ${3:# This is the Username of the WTI device to send the module.}
		cpm_password: ${4:# This is the Password of the WTI device to send the module.}
		# use_https: yes
		# validate_certs: yes
		# use_proxy: no
		# interface: eth0|eth1
		# negotiation: 0|1|2|3|4|5|6
		# ipv4address: # IPv4 format IP address for the defined interface Port.
		# ipv4netmask: # IPv4 format Netmask for the defined interface Port.
		# ipv4gateway: # IPv4 format Gateway address for the defined interface Port.
		# ipv4dhcpenable: 0|1
		# ipv4dhcphostname: # Define IPv4 DHCP Hostname.
		# ipv4dhcplease: # IPv4 DHCP Lease Time.
		# ipv4dhcpobdns: 0|1
		# ipv4dhcpupdns: 0|1
		# ipv4dhcpdefgateway: 0|1
		# ipv6address: # IPv6 format IP address for the defined interface Port.
		# ipv6subnetprefix: # IPv6 format Subnet Prefix for the defined interface Port.
		# ipv6gateway: # IPv6 format Gateway address for the defined interface Port.
$0
endsnippet

snippet cpm_interface_info "Get network interface parameters from WTI OOB and PDU devices" b
- name: $1
	cpm_interface_info:
		cpm_url: ${2:# This is the URL of the WTI device to send the module.}
		cpm_username: ${3:# This is the Username of the WTI device to send the module.}
		cpm_password: ${4:# This is the Password of the WTI device to send the module.}
		# use_https: yes
		# validate_certs: yes
		# use_proxy: no
		# interface: eth0|eth1|ppp0
$0
endsnippet

snippet cpm_iptables_config "Set network IPTables parameters in WTI OOB and PDU devices" b
- name: $1
	cpm_iptables_config:
		cpm_url: ${2:# This is the URL of the WTI device to send the module.}
		cpm_username: ${3:# This is the Username of the WTI device to send the module.}
		cpm_password: ${4:# This is the Password of the WTI device to send the module.}
		command: ${5:# Actual iptables command to send to the WTI device.}
		# use_https: yes
		# validate_certs: yes
		# use_proxy: no
		# protocol: 0|1
		# index: # Index in which command should be inserted. If not defined entry will start at position one.
		# clear: 0|1
$0
endsnippet

snippet cpm_iptables_info "Get network IPTABLES parameters from WTI OOB and PDU devices" b
- name: $1
	cpm_iptables_info:
		cpm_url: ${2:# This is the URL of the WTI device to send the module.}
		cpm_username: ${3:# This is the Username of the WTI device to send the module.}
		cpm_password: ${4:# This is the Password of the WTI device to send the module.}
		# use_https: yes
		# validate_certs: yes
		# use_proxy: no
$0
endsnippet

snippet cpm_plugconfig "Get and Set Plug Parameters on WTI OOB and PDU power devices" b
- name: $1
	cpm_plugconfig:
		cpm_action: ${2:getplugconfig|setplugconfig}
		cpm_url: ${3:# This is the URL of the WTI device to send the module.}
		cpm_username: ${4:# This is the Username of the WTI device to send the module.}
		cpm_password: ${5:# This is the Password of the WTI device to send the module.}
		plug_id: ${6:# This is the plug number that is to be manipulated}
		# use_https: yes
		# validate_certs: yes
		# use_proxy: no
		# plug_name: # The new name of the Plug.
		# plug_bootdelay: 0|1|2|3|4|5|6|7|8|9
		# plug_default: 0|1
		# plug_bootpriority: # Prioritizes which plug gets its state changed first. The lower the number the higher the priority.
$0
endsnippet

snippet cpm_plugcontrol "Get and Set Plug actions on WTI OOB and PDU power devices" b
- name: $1
	cpm_plugcontrol:
		cpm_action: ${2:getplugcontrol|setplugcontrol}
		cpm_url: ${3:# This is the URL of the WTI device  to send the module.}
		cpm_username: ${4:# This is the Username of the WTI device to send the module.}
		cpm_password: ${5:# This is the Password of the WTI device to send the module.}
		plug_id: ${6:# This is the plug number or the plug name that is to be manipulated}
		# use_https: yes
		# validate_certs: yes
		# use_proxy: no
		# plug_state: on|off|boot|default
$0
endsnippet

snippet cpm_power_info "Get the Power Information of a WTI device" b
- name: $1
	cpm_power_info:
		cpm_url: ${2:# This is the URL of the WTI device to send the module.}
		cpm_username: ${3:# This is the Username of the WTI device to send the module.}
		cpm_password: ${4:# This is the Password of the WTI device to send the module.}
		# cpm_startdate: # Start date of the range to look for power data
		# cpm_enddate: # End date of the range to look for power data
		# use_https: yes
		# validate_certs: yes
		# use_proxy: no
$0
endsnippet

snippet cpm_serial_port_action_info "Get Serial port connection status in WTI OOB and PDU devices" b
- name: $1
	cpm_serial_port_action_info:
		cpm_url: ${2:# This is the URL of the WTI device to send the module.}
		cpm_username: ${3:# This is the Username of the WTI device to send the module.}
		cpm_password: ${4:# This is the Password of the WTI device to send the module.}
		port: ${5:['*']}
		# use_https: no
		# validate_certs: no
		# use_proxy: no
$0
endsnippet

snippet cpm_serial_port_action_set "Set Serial port connection/disconnection commands in WTI OOB and PDU devices" b
- name: $1
	cpm_serial_port_action_set:
		cpm_url: ${2:# This is the URL of the WTI device to send the module.}
		cpm_username: ${3:# This is the Username of the WTI device to send the module.}
		cpm_password: ${4:# This is the Password of the WTI device to send the module.}
		port: ${5:# This is the port number that is getting the action performed on.}
		portremote: ${6:# This is the port number that is getting the action performed on.}
		# use_https: yes
		# validate_certs: yes
		# use_proxy: no
		# action: 1|2
$0
endsnippet

snippet cpm_serial_port_config "Set Serial port parameters in WTI OOB and PDU devices" b
- name: $1
	cpm_serial_port_config:
		cpm_url: ${2:# This is the URL of the WTI device to send the module.}
		cpm_username: ${3:# This is the Username of the WTI device to send the module.}
		cpm_password: ${4:# This is the Password of the WTI device to send the module.}
		port: ${5:# This is the port number that is getting the action performed on.}
		# use_https: yes
		# validate_certs: yes
		# use_proxy: no
		# portname: # This is the Name of the Port that is displayed.
		# baud: 0|1|2|3|4|5|6|7|8|9|10
		# handshake: 0|1|2|3
		# stopbits: 1|2
		# parity: 0|1|2|3|4|5
		# mode: 0|1|2|3|4
		# cmd: 0|1
		# seq: 1|2|3
		# tout: 0|1|2|3|4|5
		# echo: # -
		# break_allow: # This is if the break character is allowed to be passed through the port, 0=Off, 1=On
		# logoff: # This is the logout character to assign to the port
$0
endsnippet

snippet cpm_serial_port_info "Get Serial port parameters in WTI OOB and PDU devices" b
- name: $1
	cpm_serial_port_info:
		cpm_url: ${2:# This is the URL of the WTI device to send the module.}
		cpm_username: ${3:# This is the Username of the WTI device to send the module.}
		cpm_password: ${4:# This is the Password of the WTI device to send the module.}
		port: ${5:['*']}
		# use_https: no
		# validate_certs: no
		# use_proxy: no
$0
endsnippet

snippet cpm_snmp_config "Set network IPTables parameters in WTI OOB and PDU devices" b
- name: $1
	cpm_snmp_config:
		cpm_url: ${2:# This is the URL of the WTI device to send the module.}
		cpm_username: ${3:# This is the Username of the WTI device to send the module.}
		cpm_password: ${4:# This is the Password of the WTI device to send the module.}
		# use_https: yes
		# validate_certs: yes
		# use_proxy: no
		# protocol: 0|1
		# enable: 0|1
		# interface: eth0|eth1|ppp0
		# readonly: 0|1
		# version: 0|1|2
		# contact: # The name of the administrator responsible for SNMP issues.
		# location: # The location of the SNMP Server.
		# systemname: # The hostname of the WTI Device.
		# rocommunity: # Read Only Community Password, not used for SNMP V3.
		# rwcommunity: # Read/Write Community Password, not used for SNMP V3.
		# clear: 0|1
		# index: # Index of the user being modified (V3 only).
		# username: # Sets the User Name for SNMPv3 access (V3 only).
		# authpriv: # Configures the Authentication and Privacy features for SNMPv3 communication, 0 = Auth/NoPriv, 1 = Auth/Priv (V3 only).
		# authpass: # Sets the Authentication Password for SNMPv3 (V3 only).
		# authproto: # Which authentication protocol will be used, 0 = MD5, 1 = SHA1 (V3 only).
		# privpass: # Sets the Privacy Password for SNMPv3 (V3 only) (V3 only).
		# privproto: # Which privacy protocol will be used, 0 = DES, 1 = AES128 (V3 only).
$0
endsnippet

snippet cpm_snmp_info "Get network SNMP parameters from WTI OOB and PDU devices" b
- name: $1
	cpm_snmp_info:
		cpm_url: ${2:# This is the URL of the WTI device to send the module.}
		cpm_username: ${3:# This is the Username of the WTI device to send the module.}
		cpm_password: ${4:# This is the Password of the WTI device to send the module.}
		# interface: eth0|eth1|ppp0
		# use_https: yes
		# validate_certs: yes
		# use_proxy: no
$0
endsnippet

snippet cpm_status_info "Get general status information from WTI OOB and PDU devices" b
- name: $1
	cpm_status_info:
		cpm_url: ${2:# This is the URL of the WTI device to send the module.}
		cpm_username: ${3:# This is the Username of the WTI device to send the module.}
		cpm_password: ${4:# This is the Password of the WTI device to send the module.}
		# use_https: yes
		# validate_certs: yes
		# use_proxy: no
$0
endsnippet

snippet cpm_syslog_client_config "Set network SYSLOG Client parameters in WTI OOB and PDU devices" b
- name: $1
	cpm_syslog_client_config:
		cpm_url: ${2:# This is the URL of the WTI device to send the module.}
		cpm_username: ${3:# This is the Username of the WTI device to send the module.}
		cpm_password: ${4:# This is the Password of the WTI device to send the module.}
		# use_https: yes
		# validate_certs: yes
		# use_proxy: no
		# protocol: 0|1
		# clear: 0|1
		# index: # Index of the IP block being modified.
		# address: # Sets the IP Address of the SYSLOG server to contact.
		# port: # Defines the port number used by the SYSLOG Client (1 - 65535).
		# transport: # Defines the transfer protocol type used by the SYSLOG Client. 0=UDP, 1=TCP;
		# secure: # Defines if a secure connection is used by the SYSLOG Client (TCP Transport required).
$0
endsnippet

snippet cpm_syslog_client_info "Get network SYSLOG Client parameters from WTI OOB and PDU devices" b
- name: $1
	cpm_syslog_client_info:
		cpm_url: ${2:# This is the URL of the WTI device to send the module.}
		cpm_username: ${3:# This is the Username of the WTI device to send the module.}
		cpm_password: ${4:# This is the Password of the WTI device to send the module.}
		# interface: eth0|eth1|ppp0|qmimux0
		# use_https: yes
		# validate_certs: yes
		# use_proxy: no
$0
endsnippet

snippet cpm_syslog_server_config "Set network SYSLOG Server parameters in WTI OOB and PDU devices" b
- name: $1
	cpm_syslog_server_config:
		cpm_url: ${2:# This is the URL of the WTI device to send the module.}
		cpm_username: ${3:# This is the Username of the WTI device to send the module.}
		cpm_password: ${4:# This is the Password of the WTI device to send the module.}
		# use_https: yes
		# validate_certs: yes
		# use_proxy: no
		# interface: eth0|eth1|ppp0|qmimux0
		# protocol: 0|1
		# enable: 0|1
		# port: # Defines the port number used by the SYSLOG Server (1 - 65535).
		# transport: 0|1
		# secure: 0|1
		# clear: 0|1
		# index: # Index of the IP block being modified.
		# address: # Sets the IP Address to block message logging.
$0
endsnippet

snippet cpm_syslog_server_info "Get network SYSLOG Server parameters from WTI OOB and PDU devices" b
- name: $1
	cpm_syslog_server_info:
		cpm_url: ${2:# This is the URL of the WTI device to send the module.}
		cpm_username: ${3:# This is the Username of the WTI device to send the module.}
		cpm_password: ${4:# This is the Password of the WTI device to send the module.}
		# interface: eth0|eth1|ppp0|qmimux0
		# use_https: yes
		# validate_certs: yes
		# use_proxy: no
$0
endsnippet

snippet cpm_temp_info "Get temperature information from WTI OOB and PDU devices" b
- name: $1
	cpm_temp_info:
		cpm_url: ${2:# This is the URL of the WTI device to send the module.}
		cpm_username: ${3:# This is the Username of the WTI device to send the module.}
		cpm_password: ${4:# This is the Password of the WTI device to send the module.}
		# use_https: yes
		# validate_certs: yes
		# use_proxy: no
$0
endsnippet

snippet cpm_time_config "Set Time/Date parameters in WTI OOB and PDU devices." b
- name: $1
	cpm_time_config:
		cpm_url: ${2:# This is the URL of the WTI device to send the module.}
		cpm_username: ${3:# This is the Username of the WTI device to send the module.}
		cpm_password: ${4:# This is the Password of the WTI device to send the module.}
		# use_https: yes
		# validate_certs: yes
		# use_proxy: no
		# date: # Static date in the format of two digit month, two digit day, four digit year separated by a slash symbol.
		# time: # Static time in the format of two digit hour, two digit minute, two digit second separated by a colon symbol.
		# timezone: # This is timezone that is assigned to the WTI device.
		# ntpenable: 0|1
		# ipv4address: # Comma separated string of up to two addresses for a primary and secondary IPv4 base NTP server.
		# ipv6address: # Comma separated string of up to two addresses for a primary and secondary IPv6 base NTP server.
		# timeout: # Set the network timeout in seconds of contacting the NTP servers, valid options can be from 1-60.
$0
endsnippet

snippet cpm_time_info "Get Time/Date parameters in WTI OOB and PDU devices" b
- name: $1
	cpm_time_info:
		cpm_url: ${2:# This is the URL of the WTI device to send the module.}
		cpm_username: ${3:# This is the Username of the WTI device to send the module.}
		cpm_password: ${4:# This is the Password of the WTI device to send the module.}
		# use_https: yes
		# validate_certs: yes
		# use_proxy: no
$0
endsnippet

snippet cpm_user "Get various status and parameters from WTI OOB and PDU devices" b
- name: $1
	cpm_user:
		cpm_action: ${2:getuser|adduser|edituser|deleteuser}
		cpm_url: ${3:# This is the URL of the WTI device to send the module.}
		cpm_username: ${4:# This is the Basic Authentication Username of the WTI device to send the module.}
		cpm_password: ${5:# This is the Basic Authentication Password of the WTI device to send the module.}
		user_name: ${6:# This is the User Name that needs to be create/modified/deleted}
		# use_https: yes
		# validate_certs: yes
		# use_proxy: no
		# user_pass: # This is the User Password that needs to be create/modified/deleted
		# user_accesslevel: 0|1|2|3
		# user_accessssh: 0|1
		# user_accessserial: 0|1
		# user_accessweb: 0|1
		# user_accessapi: 0|1
		# user_accessmonitor: 0|1
		# user_accessoutbound: 0|1
		# user_portaccess: # If AccessLevel is lower than Administrator, which ports the user has access
		# user_plugaccess: # If AccessLevel is lower than Administrator, which plugs the user has access
		# user_groupaccess: # If AccessLevel is lower than Administrator, which Groups the user has access
		# user_callbackphone: # This is the Call Back phone number used for POTS modem connections
$0
endsnippet

