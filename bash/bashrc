#!/bin/bash

export DOTFILES=$HOME/.dotfiles

#
# OS Specific Settings
#
case $(uname) in
  (Darwin)
    eval "$("$HOME"/.dotfiles/bin/valet init -)"
    #JAVA_HOME="$(/usr/libexec/java_home)"; export JAVA_HOME
    export EDITOR='vim'
    export VISUAL='mvim -f'
    export LC_ALL=en_US.UTF-8
    export LANG=en_US.UTF-8
    [[ -d "/usr/local/bin" ]] && export PATH="/usr/local/bin:$PATH"                # Ensure /usr/local/bin is in path
    [[ -d "/opt/homebrew/bin" ]] && export PATH="/opt/homebrew/bin:$PATH"                # Ensure /opt/homebrew/bin is in path
    [[ -d "/usr/texbin" ]] && export PATH="$PATH:/usr/texbin"                      # Tex
    [[ -d "/opt/go" ]] && export GOPATH=/opt/go && export PATH="$PATH:/opt/go/bin" # GOPATH

    #
    # Aliases
    #
    alias z='fasd_cd -d'                                  # Alias for FASD
    alias flush-dns="sudo killall -HUP mDNSResponder"     # Flush DNS
    alias ans=ansible
    alias apb=ansible-playbook
    alias agx=ansible-galaxy
    alias anv=ansible-vault
    alias mux=tmuxinator
    if [[ $TERM != "dumb" ]]; then
        [[ -d "/opt/oracle/client" ]] && alias sqlplus="DYLD_LIBRARY_PATH=/opt/oracle/client/lib /usr/local/bin/rlwrap -iIp red -f ~/.dotfiles/sql/sqlplus_completions -H ~/.sqlplus_history -s 30000 /opt/oracle/client/bin/sqlplus"
      else
        [[ -d "/opt/oracle/client" ]] && export DYLD_LIBRARY_PATH=/opt/oracle/client/lib && export PATH=$PATH:/opt/oracle/client/bin
    fi
  ;;
  (Linux)
    [[ $TERM == xterm ]] && export TERM="xterm-256color"
    # Test if the system python version is >= 3.7 or if python3 is in the path
    if [[ $(python -c 'import sys; print("%i" % (sys.hexversion<0x03070000))') -eq 0 || $(hash python3 2>/dev/null) ]]; then
      eval "$("$HOME"/.dotfiles/bin/valet init -)"
    fi
    export LSCOLORS=gxfxbEaEBxxEhEhBaDaCaD # Set colors for ls
    export PATH=$PATH:/sbin:/usr/sbin
    alias mux=tmuxinator
  ;;
  (SunOS)
    export DISABLE_LS_COLORS=true
    export PATH=$PATH:/usr/cluster/bin
    export PATH=$PATH:/sbin
  ;;
  (CYGWIN*)
    alias vim="/c/Program\ Files/vim/vim74/gvim.exe &"
    alias exp="explorer"
  ;;
esac

#
# Less
#
export LESS='-F -g -i -M -R -S -w -X -z-4'
export LESS_TERMCAP_mb=$'\E[01;31m'       # begin blinking-mode
export LESS_TERMCAP_md=$'\E[01;38;5;74m'  # begin bold-mode
export LESS_TERMCAP_me=$'\E[0m'           # end (blinking/bold)-mode
export LESS_TERMCAP_so=$'\E[38;5;246m'    # begin standout-mode - info box
export LESS_TERMCAP_se=$'\E[0m'           # end standout-mode
export LESS_TERMCAP_us=$'\E[04;38;5;146m' # begin underline
export LESS_TERMCAP_ue=$'\E[0m'           # end underline

#
# Aliases
#
alias clip="nc localhost 8377"
if hash piknik 2>/dev/null; then
  alias pkc='piknik -copy'
  alias pkp='piknik -paste'
  alias pkm='piknik -move'
  alias pkz='piknik -copy < /dev/null'
  alias pkpr='piknik -paste | tar xzhpvf -'
  function pko() {
      echo "$*" | piknik -copy
  }
  function pkf() {
      piknik -copy < "$1"
  }
  function pkfr() {
      tar czpvf - "${1:-.}" | piknik -copy
  }
fi

#
# Prompt
#

# Setup colors
if [[ $COLORTERM = gnome-* && $TERM = xterm ]]  && infocmp gnome-256color >/dev/null 2>&1; then TERM=gnome-256color; fi
if tput setaf 1 &> /dev/null; then
  tput sgr0
  if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
    BASE0=$(tput setaf 244)
    ORANGE=$(tput setaf 166)
    BLUE=$(tput setaf 33)
  else
    BASE0=$(tput setaf 12)
    ORANGE=$(tput setaf 9)
    BLUE=$(tput setaf 4)
  fi
  RESET=$(tput sgr0)
else
  ORANGE="\033[1;33m"
  RESET="\033[m"
fi

if [[ $TERM != "dumb" ]]; then
  # Set prompt based on whether the session is over SSH
  if [[ -n "$SSH_CLIENT" ]] || [[ -n "$SSH_TTY" ]]; then
    # SSH Session
    PS1="\[$BLUE\]☁ \[$BASE0\] \W\[$ORANGE\] ❯ \[$RESET\]"
    if [[ -t 0 ]]; then   # Only run if stdin is a terminal
      stty sane
    fi
  else
    # Local Session
    PS1="\[$BASE0\]\W\[$BASE0\]\[$ORANGE\] ❯ \[$RESET\]"
  fi
fi

#
# Additional Tools
#
export SQLPATH="$DOTFILES/sql/oracle" # SQL script path for sqlplus
export PATH="${ASDF_DATA_DIR:-$HOME/.asdf}/shims:$PATH"

# direnv
if hash direnv 2>/dev/null; then
  eval "$(direnv hook bash)"
fi

# asdf
if hash asdf 2>/dev/null; then
  #source <(asdf completion bash)
  eval "$(asdf completion bash)"
fi

#
# iTerm integration
#
#if [[ -f $DOTFILES/iterm/iterm2_shell_integration.bash ]]; then
  #source "${DOTFILES}/iterm/iterm2_shell_integration.bash"
#fi

#
# Local system specific settings
#
if [[ -f $HOME/.localrc ]]; then
  # shellcheck source=/dev/null
  source "${HOME}/.localrc"
fi
