#!/usr/bin/env bash
#===============================================================================
# vim: softtabstop=2 shiftwidth=2 expandtab fenc=utf-8 spelllang=en ft=sh
#===============================================================================
#
#   FILE: blink
#
#   DESCRIPTION:  Wrapper for transferring files to transfer.sh
#                 Based on https://gist.github.com/nl5887/a511f172d3fb3cd0e42d
#
#===============================================================================

set -e          # Exit immediately on error
set -u          # Treat unset variables as an error
set -o pipefail # Prevent errors in a pipeline from being masked
IFS=$'\n\t'     # Set the internal field separator to a tab and newline

# Source bash functions
source "$DOTFILES/share/lib/bash-functions.sh"

req_progs=(curl)
bincheck ${req_progs[*]}

function transfer() {
    # check arguments
    if [[ $# -eq 0 ]];
    then
        printf "No arguments specified.\n\n Usage:\n\techo transfer /tmp/test.md\n\tcat /tmp/test.md | transfer test.md"
        return 1
    fi

    tmpfile=$( mktemp -t transferXXX )

    # upload stdin or file
    file=$1

    if [[ -t 0 ]];
    then
        basefile=$(basename "$file" | sed -e 's/[^a-zA-Z0-9._-]/-/g')

        if [[ ! -e "$file" ]];
        then
            echo "File $file doesn't exist."
            return 1
        fi

        if [[ -d $file ]];
        then
            # zip directory and transfer
            zipfile=$( mktemp -t transferXXX.zip )
            cd $(dirname $file) && zip -r -q - $(basename $file) >> $zipfile
            curl --progress-bar --upload-file "$zipfile" "https://transfer.sh/$basefile.zip" >> $tmpfile
            rm -f $zipfile
        else
            # transfer file
            curl --progress-bar --upload-file "$file" "https://transfer.sh/$basefile" >> $tmpfile
        fi
    else
        # transfer pipe
        curl --progress-bar --upload-file "-" "https://transfer.sh/$file" >> $tmpfile
    fi

    # cat output link
    cat $tmpfile

    # cleanup
    rm -f $tmpfile
}

transfer "$@"
