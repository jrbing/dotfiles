#
# Executes commands at the start of an interactive session.
#

# Uncomment this and the 'zprof' call at the bottom of the
# file to get startup times
#zmodload zsh/zprof

###########
#  ZPLUG  #
###########

export ZPLUG_HOME="${DOTFILES}/zsh/zplug"
export ZPLUG_LOADFILE="${DOTFILES}/zsh/packages.zsh"
source $ZPLUG_HOME/init.zsh

# Install plugins if there are plugins that have not been installed
#if ! zplug check --verbose; then
  #printf "Install? [y/N]: "
  #if read -q; then
    #echo; zplug install
  #fi
#fi

# Source plugins and add commands to $PATH
zplug load


###########
#  fpath  #
###########

# Prepend custom function directory to fpath
fpath=("${DOTFILES}/zsh/functions" $fpath)

##########
#  Misc  #
##########

# direnv
if [[ $commands[direnv] ]]; then
  eval "$(direnv hook zsh)"
fi

#################
#  ZSH Options  #
#################

# Don't ask before executing rm * or rm path/*
setopt rmstarsilent

##########################
#  Application Settings  #
##########################

# Postgres
export PSQL_EDITOR=vim

# Oracle SQLcl
export SQLPATH="${DOTFILES}/sql/oracle"
export SQLFORMATPATH="${DOTFILES}/sql/format.xml"
export NLS_LANG=American_America.UTF8

if [[ -d "/opt/oracle/sqlcl" ]]; then
  path+=('/opt/oracle/sqlcl/bin')
fi

# TNS
if [[ -d "/opt/oracle/tns" ]]; then
  export TNS_ADMIN=/opt/oracle/tns
fi

# Rundeck CLI
if [[ -d '/opt/rundeck/rd' ]]; then
  path+=('/opt/rundeck/rd/bin')
fi

############
#  Prompt  #
############

SPACESHIP_PROMPT_ORDER=(
  dir           # Current directory
  char          # Prompt character
)

SPACESHIP_RPROMPT_ORDER=(
  exec_time     # Execution time
  jobs          # Background jobs indicator
  exit_code     # Exit code section
  git           # Git branch and git status
)

SPACESHIP_PROMPT_ADD_NEWLINE=false
SPACESHIP_PROMPT_SEPARATE_LINE=false
SPACESHIP_DIR_COLOR="blue"
SPACESHIP_EXIT_CODE_SHOW=true
SPACESHIP_CHAR_SUFFIX=" "
SPACESHIP_CHAR_SYMBOL="❯❯❯"

SPACESHIP_EXEC_TIME_PREFIX="⌛ "
SPACESHIP_EXEC_TIME_ELAPSED=5
SPACESHIP_KUBECONTEXT_COLOR="blue"
SPACESHIP_GIT_PREFIX="| "
SPACESHIP_GIT_STATUS_PREFIX=" "
SPACESHIP_GIT_STATUS_SUFFIX=""

#############
#  Aliases  #
#############

unalias rm

alias server="devd --open --livewatch ."
alias todos="ack --nogroup '(TODO|FIX(ME)?):'"
alias rpi_ip="arp -a | grep b8:27:eb | grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'"
alias java_ls='/usr/libexec/java_home -V'
alias mux="tmuxinator"
alias lt='ls -lAht && echo "------ OLDEST ------"'
alias ltr='ls -lAhtr && echo "------ NEWEST ------"'
alias clip="nc localhost 8377"
alias purge-dsstore="find . -name '*.DS_Store' -type f -delete"
alias z='fasd_cd -d'
alias flush-dns="sudo killall -HUP mDNSResponder"
alias ans=ansible
alias apb=ansible-playbook
alias agx=ansible-galaxy
alias anv=ansible-vault
alias mvim="reattach-to-user-namespace mvim"
alias hellogopher="curl -O https://raw.githubusercontent.com/cloudflare/hellogopher/master/Makefile"
alias sqlplus="DYLD_LIBRARY_PATH=/opt/oracle/client /usr/local/bin/rlwrap -iIp red -f ~/.dotfiles/sql/sqlplus_completions -H ~/.sqlplus_history -s 30000 /opt/oracle/client/sqlplus"
alias kedit-secret="KUBE_EDITOR=kube-secret-editor kubectl edit secret"
alias uuid="uuidgen | tr -d '\n' | tr '[:upper:]' '[:lower:]' | pbcopy && pbpaste && echo"

if hash piknik 2>/dev/null; then
  alias pkc='piknik -copy'
  alias pkp='piknik -paste'
  alias pkm='piknik -move'
  alias pkz='piknik -copy < /dev/null'
  alias pkpr='piknik -paste | tar xzhpvf -'
  function pko() {
      echo "$*" | piknik -copy
  }
  function pkf() {
      piknik -copy < $1
  }
  function pkfr() {
      tar czpvf - ${1:-.} | piknik -copy
  }
fi

###############
#  Functions  #
###############

# Switch the current java version
function java_use() {
  export JAVA_HOME=$(/usr/libexec/java_home -v $1)
  java -version
}

# Generate a random password
function randpw() {
  openssl rand -base64 16 | md5 | head -c16; echo
}

# Make a temporary directory and enter it
function tmpd() {
  if [[ $# -eq 0 ]]; then
    local dir=$(mktemp -d) && cd $dir
  else
    local dir=$(mktemp -d -t $1.XXXXXXXXXX) && cd $dir
  fi
}

# Improved tree
function tre() {
  tree -aC -I '.git' --dirsfirst "$@" | less -FRNX
}

################
#  Completion  #
################

# Enable bash completion support
autoload -U +X bashcompinit && bashcompinit

# Azure CLI
if [[ $commands[az] ]]; then
  source "${DOTFILES}/completions/az.zsh"
fi

# asdf
if [[ -s "${ZPLUG_ROOT}/repos/asdf-vm/asdf/completions/asdf.bash" ]]; then
  source "${ZPLUG_ROOT}/repos/asdf-vm/asdf/completions/asdf.bash"
fi

# Kubernetes CLI
if [[ $commands[kubectl] ]]; then
  source <(kubectl completion zsh)
fi

# Helm CLI
if [[ $commands[helm] ]]; then
  source <(helm completion zsh)
fi

# Terraform
if [[ $commands[terraform] ]]; then
  complete -o nospace -C /usr/local/bin/terraform terraform
fi

###############
#  Profiling  #
###############

#zprof
